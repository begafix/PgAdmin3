#ifndef TYPES_PNG_H
#define TYPES_PNG_H

static const unsigned char types_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x04, 0x03, 0x00, 0x00, 0x00, 0xed, 0xdd, 0xe2, 
0x52, 0x00, 0x00, 0x00, 0x24, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0x5a, 0xcb, 0x9a, 0xd6, 
0xff, 0xea, 0xce, 0xff, 0xe5, 0x8a, 0xe0, 0xb9, 
0xc2, 0xff, 0xdf, 0xb4, 0xff, 0xd8, 0xa6, 0xff, 
0xd1, 0x96, 0xff, 0xc8, 0x87, 0xff, 0xc0, 0x79, 
0xff, 0xb9, 0x6e, 0xff, 0xb3, 0xa2, 0x9e, 0xb9, 
0x1d, 0x00, 0x00, 0x00, 0x01, 0x74, 0x52, 0x4e, 
0x53, 0x00, 0x40, 0xe6, 0xd8, 0x66, 0x00, 0x00, 
0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 
0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 0x46, 
0xc9, 0x6b, 0x3e, 0x00, 0x00, 0x00, 0x5c, 0x49, 
0x44, 0x41, 0x54, 0x08, 0xd7, 0x3d, 0xcd, 0x5b, 
0x0d, 0x80, 0x30, 0x0c, 0x46, 0xe1, 0xce, 0x41, 
0x61, 0x59, 0x77, 0x7b, 0xc3, 0x02, 0x0a, 0x10, 
0x81, 0x05, 0x2c, 0x60, 0x01, 0x0b, 0x58, 0xc0, 
0x02, 0xe6, 0x38, 0x0b, 0x8c, 0xef, 0xe9, 0xcf, 
0x49, 0x9a, 0x8a, 0x1b, 0x20, 0x18, 0x27, 0x28, 
0xc3, 0x2f, 0x5f, 0x0a, 0x3d, 0x59, 0x4f, 0xb1, 
0xa7, 0x64, 0x7e, 0x86, 0x4a, 0x8e, 0x61, 0x85, 
0x4a, 0x49, 0xb6, 0x41, 0xa5, 0xe6, 0xb8, 0x43, 
0xc5, 0x95, 0x74, 0x80, 0xfb, 0x9a, 0x4f, 0x30, 
0x5c, 0xb9, 0xd0, 0x9e, 0xd4, 0x1b, 0x6d, 0xfc, 
0xff, 0x5f, 0x0f, 0x09, 0xd3, 0x15, 0xf2, 0x10, 
0xf1, 0x85, 0x33, 0x00, 0x00, 0x00, 0x25, 0x74, 
0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 
0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x00, 0x32, 
0x30, 0x31, 0x30, 0x2d, 0x31, 0x32, 0x2d, 0x30, 
0x31, 0x54, 0x32, 0x30, 0x3a, 0x34, 0x33, 0x3a, 
0x34, 0x35, 0x2b, 0x30, 0x35, 0x3a, 0x30, 0x30, 
0x9e, 0xee, 0x2e, 0xaa, 0x00, 0x00, 0x00, 0x25, 
0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 
0x3a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x00, 
0x32, 0x30, 0x31, 0x30, 0x2d, 0x30, 0x39, 0x2d, 
0x30, 0x31, 0x54, 0x32, 0x33, 0x3a, 0x34, 0x34, 
0x3a, 0x30, 0x36, 0x2b, 0x30, 0x35, 0x3a, 0x30, 
0x30, 0xca, 0x97, 0x55, 0xac, 0x00, 0x00, 0x00, 
0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 
0x82, 
};

#include "wx/mstream.h"

static wxImage *types_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_types_png = new wxImage();
	if (!img_types_png || !img_types_png->IsOk())
	{
		wxMemoryInputStream img_types_pngIS(types_png_data, sizeof(types_png_data));
		img_types_png->LoadFile(img_types_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_types_png;
}
#define types_png_img types_png_img()

static wxBitmap *types_png_bmp()
{
	static wxBitmap *bmp_types_png;
	if (!bmp_types_png || !bmp_types_png->IsOk())
		bmp_types_png = new wxBitmap(*types_png_img);
	return bmp_types_png;
}
#define types_png_bmp types_png_bmp()

static wxIcon *types_png_ico()
{
	static wxIcon *ico_types_png;
	if (!ico_types_png || !ico_types_png->IsOk())
	{
		ico_types_png = new wxIcon();
		ico_types_png->CopyFromBitmap(*types_png_bmp);
	}
	return ico_types_png;
}
#define types_png_ico types_png_ico()

#endif // TYPES_PNG_H
