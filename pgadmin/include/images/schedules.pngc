#ifndef SCHEDULES_PNG_H
#define SCHEDULES_PNG_H

static const unsigned char schedules_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x01, 0x05, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0xf8, 0xe7, 0xe4, 0xee, 
0xc3, 0xbc, 0xe7, 0xa3, 0x98, 0xe3, 0x8b, 0x7f, 
0xe7, 0x98, 0x8f, 0xef, 0xb5, 0xaf, 0xf9, 0xdf, 
0xdc, 0xf4, 0xda, 0xd5, 0xe6, 0xa5, 0x99, 0xe2, 
0x8e, 0x81, 0xe2, 0x88, 0x7c, 0xe2, 0x81, 0x76, 
0xe2, 0x7a, 0x70, 0xe3, 0x73, 0x69, 0xe7, 0x82, 
0x7b, 0xf5, 0xc7, 0xc4, 0xeb, 0xb4, 0xad, 0xed, 
0xcb, 0xc5, 0xe8, 0xbf, 0xb8, 0xe3, 0x9b, 0x90, 
0xe2, 0x89, 0x7d, 0xe2, 0x7c, 0x71, 0xe4, 0x78, 
0x70, 0xf4, 0xc1, 0xbd, 0xee, 0xd6, 0xd1, 0xe3, 
0xa4, 0x99, 0xe5, 0x73, 0x6b, 0xed, 0xca, 0xc5, 
0xe7, 0xbe, 0xb8, 0xe3, 0x9a, 0x90, 0xf1, 0xda, 
0xd7, 0xf0, 0xf4, 0xf7, 0xe8, 0xd2, 0xd2, 0xe3, 
0x9f, 0x9c, 0xe3, 0x64, 0x5c, 0xe7, 0x76, 0x70, 
0xf9, 0xd7, 0xd6, 0xe2, 0x88, 0x7d, 0xf5, 0xf8, 
0xf9, 0xf0, 0xf9, 0xfc, 0x1e, 0x50, 0xad, 0xe2, 
0xf3, 0xf9, 0xdb, 0xec, 0xf4, 0xdd, 0x93, 0x92, 
0xe4, 0x54, 0x4e, 0xf0, 0x9c, 0x99, 0xf0, 0xd9, 
0xd7, 0xef, 0xf8, 0xfc, 0xe8, 0xf6, 0xfa, 0xd9, 
0xf0, 0xf8, 0xd2, 0xed, 0xf6, 0xd1, 0xc0, 0xc7, 
0xe4, 0x4d, 0x47, 0xe9, 0x67, 0x64, 0xee, 0xf3, 
0xf7, 0xe7, 0xf5, 0xfa, 0xe0, 0xf2, 0xf9, 0x89, 
0xae, 0xd9, 0xc9, 0xe9, 0xf4, 0xc2, 0xe0, 0xec, 
0xe4, 0x45, 0x41, 0xe5, 0x43, 0x3f, 0xe5, 0xd1, 
0xd2, 0xde, 0xf2, 0xf9, 0xd7, 0xef, 0xf7, 0x88, 
0xad, 0xd9, 0x7f, 0xa9, 0xd7, 0xc5, 0xb7, 0xc0, 
0xe4, 0x3e, 0x3a, 0xe9, 0x5c, 0x59, 0xe1, 0x9d, 
0x9b, 0xd5, 0xea, 0xf3, 0xce, 0xeb, 0xf5, 0xc6, 
0xe8, 0xf4, 0x7f, 0xa9, 0xd6, 0xb9, 0xde, 0xec, 
0xd1, 0x7b, 0x7f, 0xe4, 0x37, 0x34, 0xf1, 0x8c, 
0x8b, 0xda, 0x91, 0x91, 0xce, 0xbe, 0xc6, 0xbf, 
0xde, 0xeb, 0xc4, 0xb6, 0xc0, 0xe9, 0x50, 0x4f, 
0xf9, 0xce, 0xcd, 0xf6, 0xb2, 0xb2, 0x5b, 0x82, 
0x19, 0xf8, 0x00, 0x00, 0x00, 0x01, 0x74, 0x52, 
0x4e, 0x53, 0x00, 0x40, 0xe6, 0xd8, 0x66, 0x00, 
0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 
0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 
0x46, 0xc9, 0x6b, 0x3e, 0x00, 0x00, 0x00, 0xbc, 
0x49, 0x44, 0x41, 0x54, 0x18, 0xd3, 0x63, 0x60, 
0x60, 0x60, 0x64, 0x62, 0x66, 0x61, 0x65, 0x63, 
0x67, 0x80, 0x01, 0x0e, 0x4e, 0x2e, 0x6e, 0x1e, 
0x5e, 0x3e, 0x7e, 0x01, 0x28, 0x9f, 0x91, 0x93, 
0x4b, 0x50, 0x48, 0x58, 0x44, 0x54, 0x4c, 0x5c, 
0x02, 0x22, 0xc0, 0xc4, 0x25, 0x28, 0x29, 0x05, 
0x56, 0x23, 0x0d, 0x51, 0xc3, 0xcc, 0x2d, 0x23, 
0x85, 0xa2, 0x86, 0x85, 0x47, 0x16, 0x55, 0x0d, 
0x2b, 0xaf, 0x1c, 0x58, 0x8d, 0xbc, 0x82, 0xa2, 
0x92, 0xb2, 0x8a, 0x2a, 0x03, 0x03, 0x1b, 0x9f, 
0x1a, 0x48, 0x8d, 0xba, 0x86, 0xa6, 0x96, 0xb6, 
0x8e, 0xae, 0x1e, 0x03, 0x03, 0x3b, 0xbf, 0x18, 
0x50, 0x8d, 0xbe, 0x81, 0xa1, 0xa6, 0x91, 0xb1, 
0x89, 0xa9, 0x19, 0x50, 0x8f, 0x80, 0x38, 0x50, 
0x8d, 0xb9, 0x85, 0xa5, 0xa6, 0x95, 0xb5, 0x8d, 
0xad, 0x1d, 0xc8, 0x58, 0x09, 0x69, 0x31, 0x5e, 
0x7b, 0x07, 0x47, 0x27, 0x4d, 0x67, 0x17, 0x57, 
0x37, 0xb0, 0xcd, 0x40, 0x35, 0xee, 0x1e, 0x9e, 
0x5e, 0xde, 0x3e, 0xbe, 0x7e, 0xfe, 0x10, 0xc7, 
0x49, 0x48, 0x2b, 0x07, 0x04, 0x06, 0x05, 0xfb, 
0xfa, 0x85, 0x84, 0x42, 0xdd, 0x2f, 0xa0, 0xa2, 
0x6b, 0x6a, 0xeb, 0xea, 0x17, 0x12, 0x06, 0xf7, 
0xa1, 0xaa, 0x9e, 0x99, 0x9d, 0x9b, 0x7f, 0x28, 
0x03, 0x16, 0x00, 0x00, 0xfe, 0xdd, 0x17, 0xa7, 
0x45, 0x29, 0x9f, 0x80, 0x00, 0x00, 0x00, 0x25, 
0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 
0x3a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x00, 
0x32, 0x30, 0x31, 0x30, 0x2d, 0x31, 0x32, 0x2d, 
0x30, 0x31, 0x54, 0x32, 0x30, 0x3a, 0x34, 0x33, 
0x3a, 0x34, 0x35, 0x2b, 0x30, 0x35, 0x3a, 0x30, 
0x30, 0x9e, 0xee, 0x2e, 0xaa, 0x00, 0x00, 0x00, 
0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 
0x65, 0x3a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 
0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 0x30, 0x39, 
0x2d, 0x30, 0x31, 0x54, 0x32, 0x33, 0x3a, 0x34, 
0x34, 0x3a, 0x30, 0x36, 0x2b, 0x30, 0x35, 0x3a, 
0x30, 0x30, 0xca, 0x97, 0x55, 0xac, 0x00, 0x00, 
0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 
0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *schedules_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_schedules_png = new wxImage();
	if (!img_schedules_png || !img_schedules_png->IsOk())
	{
		wxMemoryInputStream img_schedules_pngIS(schedules_png_data, sizeof(schedules_png_data));
		img_schedules_png->LoadFile(img_schedules_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_schedules_png;
}
#define schedules_png_img schedules_png_img()

static wxBitmap *schedules_png_bmp()
{
	static wxBitmap *bmp_schedules_png;
	if (!bmp_schedules_png || !bmp_schedules_png->IsOk())
		bmp_schedules_png = new wxBitmap(*schedules_png_img);
	return bmp_schedules_png;
}
#define schedules_png_bmp schedules_png_bmp()

static wxIcon *schedules_png_ico()
{
	static wxIcon *ico_schedules_png;
	if (!ico_schedules_png || !ico_schedules_png->IsOk())
	{
		ico_schedules_png = new wxIcon();
		ico_schedules_png->CopyFromBitmap(*schedules_png_bmp);
	}
	return ico_schedules_png;
}
#define schedules_png_ico schedules_png_ico()

#endif // SCHEDULES_PNG_H
