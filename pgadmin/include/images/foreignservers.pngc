#ifndef FOREIGNSERVERS_PNG_H
#define FOREIGNSERVERS_PNG_H

static const unsigned char foreignservers_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x00, 0x01, 0x73, 0x52, 0x47, 
0x42, 0x00, 0xae, 0xce, 0x1c, 0xe9, 0x00, 0x00, 
0x00, 0xb1, 0x50, 0x4c, 0x54, 0x45, 0x7b, 0x94, 
0xa4, 0x83, 0x6c, 0x7c, 0x96, 0x81, 0x8f, 0xea, 
0xdf, 0xe7, 0xe2, 0xd5, 0xde, 0xd9, 0xc9, 0xd5, 
0xd0, 0xbd, 0xcb, 0xc6, 0xb1, 0xc0, 0xbf, 0xa6, 
0xb9, 0x89, 0x72, 0x82, 0x99, 0x86, 0x93, 0xb8, 
0xa8, 0xb3, 0xe9, 0xdf, 0xe5, 0xd8, 0xc9, 0xd4, 
0xcf, 0xbd, 0xca, 0xbf, 0xa8, 0xb8, 0x9d, 0x84, 
0x96, 0xdb, 0xd1, 0xd8, 0xea, 0xdf, 0xe6, 0xe2, 
0xd5, 0xdd, 0xcf, 0xbe, 0xca, 0xb0, 0x97, 0xa9, 
0xd0, 0xc5, 0xcb, 0xf2, 0xf1, 0xf2, 0xf9, 0xf8, 
0xf9, 0xf5, 0xf1, 0xf2, 0xfa, 0xf9, 0xfa, 0xf1, 
0xed, 0xef, 0xe4, 0xdb, 0xdf, 0xf0, 0xee, 0xef, 
0xf6, 0xf5, 0xf6, 0xe0, 0xd3, 0xd7, 0xc4, 0xab, 
0xb5, 0x5c, 0xa4, 0xb6, 0x8c, 0xab, 0xb8, 0xef, 
0xee, 0xee, 0xf7, 0xf5, 0xf6, 0xc4, 0xab, 0xb4, 
0x5b, 0xa0, 0xb3, 0x1f, 0xda, 0xc7, 0x63, 0xb1, 
0xc1, 0x98, 0x7c, 0x95, 0x67, 0x85, 0x9b, 0x4f, 
0x97, 0xad, 0xf4, 0xf1, 0xf2, 0xe1, 0xd4, 0xd8, 
0xc3, 0xaa, 0xb3, 0x5b, 0xa5, 0xb6, 0xef, 0xee, 
0xef, 0xe0, 0xd4, 0xd8, 0x5b, 0xa2, 0xb4, 0xf5, 
0xf1, 0xf3, 0xf9, 0xf9, 0xf9, 0xe6, 0xef, 0xf1, 
0xcf, 0xdb, 0xe0, 0xe1, 0xd4, 0xd9, 0xc3, 0xab, 
0xb4, 0x5a, 0xa2, 0xb4, 0xf6, 0xf5, 0xf5, 0x80, 
0xa4, 0x15, 0x3c, 0x00, 0x00, 0x00, 0x01, 0x74, 
0x52, 0x4e, 0x53, 0x00, 0x40, 0xe6, 0xd8, 0x66, 
0x00, 0x00, 0x00, 0x01, 0x62, 0x4b, 0x47, 0x44, 
0x00, 0x88, 0x05, 0x1d, 0x48, 0x00, 0x00, 0x00, 
0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0b, 
0x13, 0x00, 0x00, 0x0b, 0x13, 0x01, 0x00, 0x9a, 
0x9c, 0x18, 0x00, 0x00, 0x00, 0x07, 0x74, 0x49, 
0x4d, 0x45, 0x07, 0xdb, 0x03, 0x1d, 0x15, 0x06, 
0x17, 0x9e, 0x9a, 0xf0, 0x04, 0x00, 0x00, 0x00, 
0x97, 0x49, 0x44, 0x41, 0x54, 0x18, 0xd3, 0x45, 
0x8e, 0xcb, 0x12, 0x82, 0x30, 0x0c, 0x45, 0xa9, 
0xa2, 0x20, 0xe0, 0xdb, 0xda, 0xeb, 0xa3, 0xe2, 
0xb4, 0x2e, 0xc2, 0x64, 0x9f, 0xff, 0xff, 0x34, 
0x5b, 0x49, 0xc7, 0xbb, 0xbb, 0x67, 0x92, 0x93, 
0x54, 0x55, 0x8a, 0xd1, 0x54, 0x25, 0x8b, 0x65, 
0xbd, 0x5a, 0x37, 0xed, 0xa6, 0xf4, 0xae, 0x1f, 
0xea, 0xed, 0xae, 0xd9, 0x1f, 0x3a, 0x05, 0xe6, 
0x78, 0x3a, 0x6f, 0x2f, 0x4d, 0x6b, 0xcb, 0x8e, 
0xb9, 0x3a, 0xdc, 0x70, 0x7f, 0x3c, 0xff, 0xc0, 
0xbf, 0xc6, 0x77, 0x6f, 0x89, 0x82, 0x28, 0x88, 
0x9f, 0x91, 0x98, 0x24, 0x10, 0xf3, 0x0f, 0x4c, 
0xd3, 0xc4, 0x01, 0x5e, 0x00, 0x58, 0x75, 0x50, 
0x80, 0x30, 0xc1, 0x7b, 0xa8, 0x83, 0x52, 0x67, 
0x71, 0x22, 0x6e, 0x06, 0x2c, 0xb9, 0xc3, 0x45, 
0x2f, 0xb3, 0x83, 0x87, 0x98, 0xa5, 0xe2, 0xa2, 
0xe8, 0xc4, 0x00, 0xa4, 0x0b, 0x04, 0x47, 0x65, 
0x25, 0x3b, 0x38, 0x9b, 0x66, 0x60, 0x43, 0xee, 
0x49, 0xa3, 0x7f, 0x18, 0x43, 0xc4, 0x9a, 0x2f, 
0x14, 0x00, 0x14, 0xa5, 0x82, 0x02, 0x8f, 0x3b, 
0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 
0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *foreignservers_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_foreignservers_png = new wxImage();
	if (!img_foreignservers_png || !img_foreignservers_png->IsOk())
	{
		wxMemoryInputStream img_foreignservers_pngIS(foreignservers_png_data, sizeof(foreignservers_png_data));
		img_foreignservers_png->LoadFile(img_foreignservers_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_foreignservers_png;
}
#define foreignservers_png_img foreignservers_png_img()

static wxBitmap *foreignservers_png_bmp()
{
	static wxBitmap *bmp_foreignservers_png;
	if (!bmp_foreignservers_png || !bmp_foreignservers_png->IsOk())
		bmp_foreignservers_png = new wxBitmap(*foreignservers_png_img);
	return bmp_foreignservers_png;
}
#define foreignservers_png_bmp foreignservers_png_bmp()

static wxIcon *foreignservers_png_ico()
{
	static wxIcon *ico_foreignservers_png;
	if (!ico_foreignservers_png || !ico_foreignservers_png->IsOk())
	{
		ico_foreignservers_png = new wxIcon();
		ico_foreignservers_png->CopyFromBitmap(*foreignservers_png_bmp);
	}
	return ico_foreignservers_png;
}
#define foreignservers_png_ico foreignservers_png_ico()

#endif // FOREIGNSERVERS_PNG_H
