#ifndef RULES_PNG_H
#define RULES_PNG_H

static const unsigned char rules_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x00, 0x42, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0xeb, 0xcc, 0x7a, 0xdd, 
0xa9, 0x1d, 0xff, 0xe5, 0x9c, 0xff, 0xe5, 0x9a, 
0xff, 0xe4, 0x96, 0xff, 0xe4, 0x92, 0xff, 0xe3, 
0x8e, 0xff, 0xe5, 0x98, 0xff, 0xe5, 0x9b, 0xff, 
0xe4, 0x94, 0xff, 0xe3, 0x90, 0xff, 0xe3, 0x8c, 
0xeb, 0xc1, 0x4f, 0xfe, 0xe2, 0x87, 0xfe, 0xe2, 
0x89, 0xfe, 0xe2, 0x85, 0xfe, 0xe1, 0x80, 0xfe, 
0xe1, 0x82, 0xfe, 0xe1, 0x7e, 0xfe, 0xe1, 0x7c, 
0xfe, 0xe0, 0x7a, 0x36, 0xb8, 0x2b, 0xe2, 0x00, 
0x00, 0x00, 0x01, 0x74, 0x52, 0x4e, 0x53, 0x00, 
0x40, 0xe6, 0xd8, 0x66, 0x00, 0x00, 0x00, 0x09, 
0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x00, 0x48, 
0x00, 0x00, 0x00, 0x48, 0x00, 0x46, 0xc9, 0x6b, 
0x3e, 0x00, 0x00, 0x00, 0x5a, 0x49, 0x44, 0x41, 
0x54, 0x18, 0xd3, 0x95, 0x8e, 0x4b, 0x0e, 0x80, 
0x20, 0x0c, 0x44, 0xe1, 0xa1, 0x88, 0x8a, 0x28, 
0x7e, 0xee, 0x7f, 0x55, 0x4b, 0x04, 0x12, 0xdc, 
0x31, 0x9b, 0xa6, 0xd3, 0xd7, 0x4e, 0x95, 0xea, 
0x97, 0xa6, 0x28, 0x1b, 0x18, 0x06, 0x46, 0x2c, 
0x53, 0x76, 0x70, 0xb4, 0x8c, 0xcc, 0xcc, 0x2c, 
0xee, 0xc2, 0xfa, 0x31, 0x78, 0xdc, 0x56, 0x19, 
0x9d, 0x9c, 0xc4, 0x34, 0x77, 0x12, 0x93, 0x36, 
0xa4, 0x06, 0x72, 0xb0, 0x95, 0xfd, 0x3d, 0x1c, 
0xc4, 0x92, 0xe4, 0xa5, 0x3b, 0xe3, 0x75, 0x3f, 
0xf5, 0x99, 0xdf, 0x73, 0x7d, 0x7a, 0x01, 0x1b, 
0x48, 0x02, 0x60, 0xa7, 0x73, 0x42, 0xc8, 0x00, 
0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 
0x61, 0x74, 0x65, 0x3a, 0x63, 0x72, 0x65, 0x61, 
0x74, 0x65, 0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 
0x31, 0x32, 0x2d, 0x30, 0x31, 0x54, 0x32, 0x30, 
0x3a, 0x34, 0x33, 0x3a, 0x34, 0x35, 0x2b, 0x30, 
0x35, 0x3a, 0x30, 0x30, 0x9e, 0xee, 0x2e, 0xaa, 
0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 
0x64, 0x61, 0x74, 0x65, 0x3a, 0x6d, 0x6f, 0x64, 
0x69, 0x66, 0x79, 0x00, 0x32, 0x30, 0x31, 0x30, 
0x2d, 0x30, 0x39, 0x2d, 0x30, 0x31, 0x54, 0x32, 
0x33, 0x3a, 0x34, 0x34, 0x3a, 0x30, 0x36, 0x2b, 
0x30, 0x35, 0x3a, 0x30, 0x30, 0xca, 0x97, 0x55, 
0xac, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 
0x44, 0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *rules_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_rules_png = new wxImage();
	if (!img_rules_png || !img_rules_png->IsOk())
	{
		wxMemoryInputStream img_rules_pngIS(rules_png_data, sizeof(rules_png_data));
		img_rules_png->LoadFile(img_rules_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_rules_png;
}
#define rules_png_img rules_png_img()

static wxBitmap *rules_png_bmp()
{
	static wxBitmap *bmp_rules_png;
	if (!bmp_rules_png || !bmp_rules_png->IsOk())
		bmp_rules_png = new wxBitmap(*rules_png_img);
	return bmp_rules_png;
}
#define rules_png_bmp rules_png_bmp()

static wxIcon *rules_png_ico()
{
	static wxIcon *ico_rules_png;
	if (!ico_rules_png || !ico_rules_png->IsOk())
	{
		ico_rules_png = new wxIcon();
		ico_rules_png->CopyFromBitmap(*rules_png_bmp);
	}
	return ico_rules_png;
}
#define rules_png_ico rules_png_ico()

#endif // RULES_PNG_H
