#ifndef TEMPLATE_PNG_H
#define TEMPLATE_PNG_H

static const unsigned char template_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x01, 0x4d, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0xd1, 0xc7, 0x79, 0xce, 
0xbd, 0x39, 0xff, 0xff, 0xd6, 0xff, 0xff, 0xd4, 
0xfe, 0xfe, 0xd2, 0xfe, 0xfe, 0xd0, 0xfe, 0xfe, 
0xcd, 0xfd, 0xfd, 0xca, 0xfd, 0xfd, 0xc7, 0xfc, 
0xfc, 0xc4, 0x66, 0x66, 0x55, 0xff, 0xff, 0xd3, 
0x66, 0x66, 0x53, 0xfe, 0xfe, 0xce, 0x65, 0x65, 
0x51, 0xfd, 0xfd, 0xc8, 0x65, 0x65, 0x4f, 0xfc, 
0xfc, 0xc1, 0x65, 0x65, 0x4c, 0xfb, 0xfb, 0xba, 
0xfe, 0xfe, 0xd1, 0xfe, 0xfe, 0xcc, 0xfd, 0xfd, 
0xc9, 0xfd, 0xfd, 0xc6, 0xfc, 0xfc, 0xc2, 0xfc, 
0xfc, 0xbf, 0xfb, 0xfb, 0xbb, 0xfb, 0xfb, 0xb7, 
0xfa, 0xfa, 0xb4, 0xfa, 0xfa, 0xb0, 0xfc, 0xfc, 
0xc3, 0xfc, 0xfc, 0xc0, 0xfb, 0xfb, 0xbc, 0xfb, 
0xfb, 0xb8, 0xfa, 0xfa, 0xb5, 0xfa, 0xfa, 0xb1, 
0xf9, 0xf9, 0xad, 0x64, 0x64, 0x44, 0xf8, 0xf8, 
0xa4, 0xfc, 0xfc, 0xbd, 0xfb, 0xfb, 0xb9, 0xfa, 
0xfa, 0xb6, 0xfa, 0xfa, 0xb2, 0xf9, 0xf9, 0xae, 
0xf9, 0xf9, 0xaa, 0xf8, 0xf8, 0xa5, 0xf8, 0xf8, 
0xa1, 0xf7, 0xf7, 0x9d, 0xf6, 0xf6, 0x99, 0x64, 
0x64, 0x48, 0xfa, 0xfa, 0xaf, 0xf9, 0xf9, 0xab, 
0xf8, 0xf8, 0xa6, 0xf8, 0xf8, 0xa2, 0xf7, 0xf7, 
0x9e, 0xf7, 0xf7, 0x9a, 0xf6, 0xf6, 0x96, 0x62, 
0x62, 0x3a, 0xf5, 0xf5, 0x8d, 0xf9, 0xf9, 0xac, 
0xf9, 0xf9, 0xa7, 0xf8, 0xf8, 0xa3, 0xf7, 0xf7, 
0x9f, 0xf7, 0xf7, 0x9b, 0xf6, 0xf6, 0x97, 0xf6, 
0xf6, 0x93, 0xf5, 0xf5, 0x8e, 0xf4, 0xf4, 0x8a, 
0xf4, 0xf4, 0x86, 0xf3, 0xf3, 0x82, 0xf8, 0xf8, 
0xa0, 0x63, 0x63, 0x3e, 0xf6, 0xf6, 0x98, 0xf6, 
0xf6, 0x94, 0xf5, 0xf5, 0x8f, 0xf5, 0xf5, 0x8b, 
0xf4, 0xf4, 0x87, 0xf4, 0xf4, 0x83, 0xf3, 0xf3, 
0x80, 0x61, 0x61, 0x32, 0xf2, 0xf2, 0x78, 0xf6, 
0xf6, 0x95, 0xf5, 0xf5, 0x90, 0xf5, 0xf5, 0x8c, 
0xf4, 0xf4, 0x88, 0xf4, 0xf4, 0x84, 0xf3, 0xf3, 
0x81, 0xf3, 0xf3, 0x7d, 0xf2, 0xf2, 0x79, 0xf2, 
0xf2, 0x76, 0xf1, 0xf1, 0x73, 0xf1, 0xf1, 0x6f, 
0xf4, 0xf4, 0x89, 0x62, 0x62, 0x35, 0xf2, 0xf2, 
0x7a, 0x61, 0x61, 0x30, 0x60, 0x60, 0x2d, 0xf0, 
0xf0, 0x6d, 0x60, 0x60, 0x2b, 0xf0, 0xf0, 0x68, 
0xf3, 0xf3, 0x7f, 0xf2, 0xf2, 0x7b, 0xf1, 0xf1, 
0x74, 0xf1, 0xf1, 0x71, 0xf1, 0xf1, 0x6e, 0xf0, 
0xf0, 0x6b, 0xf0, 0xf0, 0x69, 0xef, 0xef, 0x66, 
0xef, 0xef, 0x64, 0xef, 0xef, 0x63, 0x05, 0x7c, 
0x09, 0x42, 0x00, 0x00, 0x00, 0x01, 0x74, 0x52, 
0x4e, 0x53, 0x00, 0x40, 0xe6, 0xd8, 0x66, 0x00, 
0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 
0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 
0x46, 0xc9, 0x6b, 0x3e, 0x00, 0x00, 0x00, 0xa2, 
0x49, 0x44, 0x41, 0x54, 0x18, 0xd3, 0x63, 0x60, 
0xc0, 0x00, 0x8c, 0x4c, 0x08, 0xc0, 0x08, 0x12, 
0x60, 0x62, 0x06, 0x02, 0x16, 0x56, 0x36, 0x76, 
0x0e, 0x4e, 0x2e, 0x26, 0x88, 0x00, 0x37, 0x0f, 
0x2f, 0x1f, 0xbf, 0x80, 0xa0, 0x90, 0xb0, 0x08, 
0x44, 0x40, 0x94, 0x4f, 0x4c, 0x5c, 0x42, 0x52, 
0x4a, 0x5a, 0x46, 0x56, 0x0e, 0x22, 0xc0, 0x21, 
0x28, 0xaf, 0xa0, 0xa8, 0xa4, 0xac, 0xa2, 0xaa, 
0xa6, 0x0e, 0x11, 0x10, 0xd2, 0xd0, 0xd4, 0xd2, 
0xd6, 0xd1, 0xd5, 0xd3, 0x37, 0x30, 0x84, 0x08, 
0xc8, 0x18, 0x19, 0x9b, 0x98, 0x9a, 0x99, 0x5b, 
0x58, 0x5a, 0x59, 0x43, 0x04, 0x6c, 0x6c, 0xed, 
0xec, 0x1d, 0x1c, 0x9d, 0x9c, 0x5d, 0x5c, 0xdd, 
0x20, 0x02, 0xee, 0x1e, 0x9e, 0x5e, 0xde, 0x3e, 
0xbe, 0x7e, 0xfe, 0x01, 0x81, 0x10, 0x81, 0xa0, 
0xe0, 0x90, 0xd0, 0xb0, 0xf0, 0x88, 0xc8, 0xa8, 
0xe8, 0x18, 0x88, 0x40, 0x6c, 0x9c, 0x5b, 0x40, 
0x7c, 0x42, 0x74, 0x62, 0x52, 0x72, 0x0a, 0x44, 
0x20, 0x35, 0x2d, 0x30, 0x3d, 0x23, 0x33, 0x2b, 
0x3b, 0x27, 0x37, 0x8f, 0x09, 0xab, 0x5f, 0x08, 
0x01, 0x00, 0x78, 0xe9, 0x19, 0xd6, 0xac, 0x53, 
0x24, 0x0a, 0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 
0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x63, 
0x72, 0x65, 0x61, 0x74, 0x65, 0x00, 0x32, 0x30, 
0x31, 0x30, 0x2d, 0x31, 0x32, 0x2d, 0x30, 0x31, 
0x54, 0x32, 0x30, 0x3a, 0x34, 0x33, 0x3a, 0x34, 
0x35, 0x2b, 0x30, 0x35, 0x3a, 0x30, 0x30, 0x9e, 
0xee, 0x2e, 0xaa, 0x00, 0x00, 0x00, 0x25, 0x74, 
0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 
0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x00, 0x32, 
0x30, 0x31, 0x30, 0x2d, 0x30, 0x39, 0x2d, 0x30, 
0x31, 0x54, 0x32, 0x33, 0x3a, 0x34, 0x34, 0x3a, 
0x30, 0x36, 0x2b, 0x30, 0x35, 0x3a, 0x30, 0x30, 
0xca, 0x97, 0x55, 0xac, 0x00, 0x00, 0x00, 0x00, 
0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *template_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_template_png = new wxImage();
	if (!img_template_png || !img_template_png->IsOk())
	{
		wxMemoryInputStream img_template_pngIS(template_png_data, sizeof(template_png_data));
		img_template_png->LoadFile(img_template_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_template_png;
}
#define template_png_img template_png_img()

static wxBitmap *template_png_bmp()
{
	static wxBitmap *bmp_template_png;
	if (!bmp_template_png || !bmp_template_png->IsOk())
		bmp_template_png = new wxBitmap(*template_png_img);
	return bmp_template_png;
}
#define template_png_bmp template_png_bmp()

static wxIcon *template_png_ico()
{
	static wxIcon *ico_template_png;
	if (!ico_template_png || !ico_template_png->IsOk())
	{
		ico_template_png = new wxIcon();
		ico_template_png->CopyFromBitmap(*template_png_bmp);
	}
	return ico_template_png;
}
#define template_png_ico template_png_ico()

#endif // TEMPLATE_PNG_H
