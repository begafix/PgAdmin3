#ifndef MVIEW_PNG_H
#define MVIEW_PNG_H

static const unsigned char mview_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 
0x61, 0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 
0x73, 0x00, 0x00, 0x0b, 0x13, 0x00, 0x00, 0x0b, 
0x13, 0x01, 0x00, 0x9a, 0x9c, 0x18, 0x00, 0x00, 
0x01, 0x28, 0x49, 0x44, 0x41, 0x54, 0x38, 0xcb, 
0xa5, 0x93, 0xbf, 0x4a, 0xc3, 0x50, 0x14, 0x87, 
0xbf, 0xdb, 0x46, 0x8a, 0x82, 0xd5, 0xcd, 0x82, 
0xc9, 0x20, 0x08, 0x3a, 0xb8, 0x88, 0xa0, 0xd5, 
0xc5, 0xa5, 0x0e, 0x3e, 0x85, 0x43, 0x3b, 0x89, 
0x20, 0xe2, 0xe2, 0x33, 0x08, 0xe2, 0x0b, 0xa4, 
0x2f, 0xe0, 0xe4, 0x22, 0x0e, 0x4e, 0x2e, 0x26, 
0x88, 0x41, 0xb7, 0x42, 0x05, 0x07, 0x9b, 0xd9, 
0x45, 0x12, 0x63, 0x93, 0xdc, 0xeb, 0xa0, 0x04, 
0x13, 0x9a, 0x1a, 0xc9, 0x5d, 0x2e, 0x87, 0x7b, 
0x7e, 0xdf, 0xf9, 0x77, 0x0f, 0x94, 0x3c, 0x02, 
0xc0, 0x19, 0x9c, 0xa9, 0x47, 0xf7, 0xfc, 0x5f, 
0xc2, 0xce, 0xa6, 0x2b, 0x12, 0x80, 0x69, 0xe9, 
0x6a, 0xa7, 0x79, 0x08, 0x51, 0x0d, 0x35, 0x9c, 
0x85, 0xa0, 0x41, 0x35, 0x9a, 0xa3, 0x22, 0xeb, 
0x08, 0x55, 0x4b, 0x44, 0x4a, 0x7c, 0xf2, 0x8e, 
0xc3, 0x9b, 0xb8, 0xe6, 0xf9, 0xf5, 0x8e, 0xbd, 
0xf5, 0x9e, 0xd0, 0x7e, 0x53, 0x6f, 0x1e, 0x4e, 
0x0b, 0x45, 0x9f, 0x5f, 0x98, 0x22, 0x8c, 0x7d, 
0x00, 0xb4, 0xec, 0x63, 0xbb, 0x39, 0x18, 0x2b, 
0xee, 0xda, 0x46, 0xca, 0xd6, 0x8a, 0x38, 0x8d, 
0x83, 0x6b, 0x79, 0x91, 0xb6, 0x57, 0x4e, 0x98, 
0xf4, 0x5a, 0x54, 0x64, 0x1d, 0xaf, 0x7a, 0xcf, 
0xed, 0xcb, 0xc1, 0x48, 0xbf, 0x5c, 0xc0, 0x70, 
0xa2, 0x87, 0x37, 0xed, 0x10, 0x4a, 0x8f, 0x50, 
0x7a, 0xb9, 0x25, 0xe5, 0x02, 0x94, 0x12, 0x85, 
0x1a, 0xaa, 0x15, 0x71, 0xda, 0x9a, 0xb9, 0xc2, 
0xb4, 0xf4, 0xc4, 0xde, 0x6d, 0xf4, 0x13, 0x3b, 
0x17, 0x60, 0x3f, 0x5d, 0x66, 0x3f, 0x0e, 0x6d, 
0xf5, 0x7d, 0xff, 0x99, 0x41, 0xb6, 0xdb, 0x1d, 
0x04, 0x4a, 0x29, 0x84, 0x10, 0x98, 0x96, 0x9e, 
0x82, 0x68, 0x45, 0x47, 0xd8, 0xb5, 0x8d, 0x54, 
0x19, 0x23, 0x01, 0xad, 0x8d, 0x7d, 0x22, 0x19, 
0x10, 0xcb, 0x0f, 0x22, 0xe9, 0x13, 0xc6, 0xfe, 
0xcf, 0x04, 0x2e, 0x58, 0x5a, 0x5e, 0x24, 0x8c, 
0x7d, 0x22, 0x19, 0x00, 0x6e, 0xf9, 0x65, 0x5a, 
0xd5, 0x8f, 0x58, 0x33, 0x8e, 0x45, 0xd9, 0x6d, 
0xe6, 0x0b, 0x67, 0x7b, 0x6f, 0xb4, 0x6b, 0x3e, 
0xe4, 0xd0, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 
0x4e, 0x44, 0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *mview_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_mview_png = new wxImage();
	if (!img_mview_png || !img_mview_png->IsOk())
	{
		wxMemoryInputStream img_mview_pngIS(mview_png_data, sizeof(mview_png_data));
		img_mview_png->LoadFile(img_mview_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_mview_png;
}
#define mview_png_img mview_png_img()

static wxBitmap *mview_png_bmp()
{
	static wxBitmap *bmp_mview_png;
	if (!bmp_mview_png || !bmp_mview_png->IsOk())
		bmp_mview_png = new wxBitmap(*mview_png_img);
	return bmp_mview_png;
}
#define mview_png_bmp mview_png_bmp()

static wxIcon *mview_png_ico()
{
	static wxIcon *ico_mview_png;
	if (!ico_mview_png || !ico_mview_png->IsOk())
	{
		ico_mview_png = new wxIcon();
		ico_mview_png->CopyFromBitmap(*mview_png_bmp);
	}
	return ico_mview_png;
}
#define mview_png_ico mview_png_ico()

#endif // MVIEW_PNG_H
