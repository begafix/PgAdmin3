#ifndef TABLE_PNG_H
#define TABLE_PNG_H

static const unsigned char table_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x00, 0xd8, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0x21, 0x95, 0xe7, 0x8d, 
0xd0, 0xff, 0x92, 0xcf, 0xfb, 0xa2, 0xd3, 0xf5, 
0xba, 0xd8, 0xed, 0xd1, 0xdf, 0xe9, 0xdf, 0xe3, 
0xe7, 0xe5, 0xe6, 0xe7, 0xe6, 0xe6, 0xe6, 0xda, 
0xe1, 0xe5, 0xac, 0xce, 0xe7, 0x63, 0xb1, 0xe8, 
0x2e, 0x9b, 0xe8, 0x8b, 0xcf, 0xff, 0x85, 0xcc, 
0xfe, 0x7e, 0xc8, 0xfc, 0x75, 0xc3, 0xfa, 0x6c, 
0xbe, 0xf8, 0x61, 0xb8, 0xf6, 0x56, 0xb2, 0xf3, 
0x4b, 0xac, 0xf0, 0x40, 0xa7, 0xee, 0x37, 0xa0, 
0xec, 0x2d, 0x9c, 0xea, 0x26, 0x98, 0xe9, 0x85, 
0xcc, 0xfd, 0x6b, 0xbe, 0xf8, 0x41, 0xa6, 0xee, 
0x36, 0xa1, 0xec, 0x2e, 0x9c, 0xea, 0xb4, 0xd6, 
0xee, 0xdd, 0xdd, 0xdd, 0xde, 0xde, 0xde, 0xdf, 
0xdf, 0xdf, 0xe0, 0xe0, 0xe0, 0xe1, 0xe1, 0xe1, 
0xe2, 0xe2, 0xe2, 0xe3, 0xe3, 0xe3, 0xe5, 0xe5, 
0xe5, 0x87, 0xbf, 0xe7, 0xe8, 0xe8, 0xe8, 0xe9, 
0xe9, 0xe9, 0xe7, 0xe7, 0xe7, 0xa9, 0xa9, 0xa9, 
0xe4, 0xe4, 0xe4, 0xac, 0xac, 0xac, 0xec, 0xec, 
0xec, 0xed, 0xed, 0xed, 0xef, 0xef, 0xef, 0xea, 
0xea, 0xea, 0xa7, 0xa7, 0xa7, 0xa8, 0xa8, 0xa8, 
0xad, 0xad, 0xad, 0xaf, 0xaf, 0xaf, 0xeb, 0xeb, 
0xeb, 0xf0, 0xf0, 0xf0, 0xf2, 0xf2, 0xf2, 0xee, 
0xee, 0xee, 0xab, 0xab, 0xab, 0xb0, 0xb0, 0xb0, 
0xb1, 0xb1, 0xb1, 0xb2, 0xb2, 0xb2, 0xf1, 0xf1, 
0xf1, 0xf3, 0xf3, 0xf3, 0xf5, 0xf5, 0xf5, 0xb5, 
0xb5, 0xb5, 0xf6, 0xf6, 0xf6, 0xf8, 0xf8, 0xf8, 
0xb6, 0xb6, 0xb6, 0xb8, 0xb8, 0xb8, 0xf7, 0xf7, 
0xf7, 0x73, 0xda, 0xb6, 0x7b, 0x00, 0x00, 0x00, 
0x01, 0x74, 0x52, 0x4e, 0x53, 0x00, 0x40, 0xe6, 
0xd8, 0x66, 0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 
0x59, 0x73, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 
0x00, 0x48, 0x00, 0x46, 0xc9, 0x6b, 0x3e, 0x00, 
0x00, 0x00, 0xb0, 0x49, 0x44, 0x41, 0x54, 0x18, 
0xd3, 0x55, 0xcf, 0xd7, 0x12, 0x82, 0x30, 0x10, 
0x85, 0xe1, 0x60, 0x8f, 0x1d, 0x7b, 0x17, 0x0b, 
0x20, 0x01, 0x43, 0x51, 0x21, 0xa0, 0x62, 0x41, 
0xe1, 0xfd, 0xdf, 0x48, 0xdd, 0x38, 0x3a, 0xec, 
0xdd, 0xf9, 0xe6, 0xbf, 0x59, 0x84, 0x84, 0xd4, 
0x21, 0x84, 0x84, 0x4c, 0x36, 0x97, 0x2f, 0x14, 
0x4b, 0x18, 0x97, 0x2b, 0xd5, 0xda, 0x07, 0xea, 
0x8d, 0xa6, 0xd8, 0x6a, 0x77, 0xba, 0xbd, 0xfe, 
0x60, 0x08, 0x45, 0x7d, 0xd4, 0x14, 0xc7, 0x6f, 
0x98, 0x4c, 0x67, 0x1c, 0xe6, 0x92, 0xb4, 0x58, 
0xae, 0xd6, 0xb2, 0xa2, 0xe2, 0x0d, 0xc0, 0x7f, 
0x6b, 0x84, 0x03, 0xd6, 0x35, 0x43, 0xde, 0x52, 
0xd3, 0xb2, 0x1d, 0x80, 0xc5, 0x6e, 0x6f, 0x18, 
0x8a, 0x4a, 0x0f, 0xae, 0xeb, 0x01, 0x7c, 0x7b, 
0x9d, 0x38, 0xa6, 0x05, 0xb0, 0x22, 0xc4, 0xa1, 
0x58, 0x77, 0x6d, 0xe6, 0x07, 0x00, 0x6b, 0xe3, 
0x48, 0xa9, 0x46, 0x4e, 0xe7, 0x30, 0x64, 0x00, 
0xef, 0xd8, 0x33, 0xad, 0x80, 0x5d, 0xfc, 0xeb, 
0x0d, 0x40, 0xb7, 0x19, 0x0b, 0x03, 0x76, 0xbf, 
0x45, 0x8f, 0x08, 0x80, 0xc7, 0x97, 0xfb, 0x33, 
0x8e, 0x13, 0x80, 0x5f, 0x1f, 0x25, 0x1c, 0xd2, 
0xef, 0xbf, 0x00, 0xb2, 0x0f, 0x1b, 0x0f, 0xe3, 
0x76, 0xaa, 0x7b, 0x00, 0x00, 0x00, 0x25, 0x74, 
0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 
0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x00, 0x32, 
0x30, 0x31, 0x30, 0x2d, 0x31, 0x32, 0x2d, 0x30, 
0x31, 0x54, 0x32, 0x30, 0x3a, 0x34, 0x33, 0x3a, 
0x34, 0x35, 0x2b, 0x30, 0x35, 0x3a, 0x30, 0x30, 
0x9e, 0xee, 0x2e, 0xaa, 0x00, 0x00, 0x00, 0x25, 
0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 
0x3a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x00, 
0x32, 0x30, 0x31, 0x30, 0x2d, 0x30, 0x39, 0x2d, 
0x30, 0x31, 0x54, 0x32, 0x33, 0x3a, 0x34, 0x34, 
0x3a, 0x30, 0x36, 0x2b, 0x30, 0x35, 0x3a, 0x30, 
0x30, 0xca, 0x97, 0x55, 0xac, 0x00, 0x00, 0x00, 
0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 
0x82, 
};

#include "wx/mstream.h"

static wxImage *table_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_table_png = new wxImage();
	if (!img_table_png || !img_table_png->IsOk())
	{
		wxMemoryInputStream img_table_pngIS(table_png_data, sizeof(table_png_data));
		img_table_png->LoadFile(img_table_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_table_png;
}
#define table_png_img table_png_img()

static wxBitmap *table_png_bmp()
{
	static wxBitmap *bmp_table_png;
	if (!bmp_table_png || !bmp_table_png->IsOk())
		bmp_table_png = new wxBitmap(*table_png_img);
	return bmp_table_png;
}
#define table_png_bmp table_png_bmp()

static wxIcon *table_png_ico()
{
	static wxIcon *ico_table_png;
	if (!ico_table_png || !ico_table_png->IsOk())
	{
		ico_table_png = new wxIcon();
		ico_table_png->CopyFromBitmap(*table_png_bmp);
	}
	return ico_table_png;
}
#define table_png_ico table_png_ico()

#endif // TABLE_PNG_H
