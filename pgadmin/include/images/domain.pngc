#ifndef DOMAIN_PNG_H
#define DOMAIN_PNG_H

static const unsigned char domain_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x00, 0x6c, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0xe1, 0x6b, 0x6b, 0xc8, 
0x40, 0x40, 0xc2, 0x29, 0x29, 0xb9, 0x31, 0x31, 
0xe0, 0xa3, 0xaa, 0xe2, 0xbc, 0xc4, 0xe5, 0xe2, 
0xec, 0xdf, 0xbb, 0xc4, 0xe5, 0xe6, 0xf1, 0xe4, 
0xe9, 0xf5, 0xe2, 0xe4, 0xf1, 0xdb, 0xb9, 0xc3, 
0xe2, 0xe8, 0xf5, 0xdf, 0xe7, 0xf4, 0xdd, 0xe2, 
0xf0, 0xd8, 0xb8, 0xc3, 0xf4, 0xcc, 0xcc, 0xe2, 
0x70, 0x70, 0xb7, 0x32, 0x32, 0xdd, 0xe6, 0xf4, 
0xdb, 0xe5, 0xf3, 0xd8, 0xe1, 0xef, 0xd4, 0xb7, 
0xc3, 0x7b, 0x66, 0x66, 0xd8, 0xe4, 0xf3, 0xd6, 
0xe4, 0xf3, 0xd4, 0xe0, 0xee, 0x6f, 0x6f, 0x6f, 
0x81, 0x60, 0x2b, 0xd4, 0xe3, 0xf2, 0xd1, 0xe2, 
0xf2, 0xcf, 0xe1, 0xf2, 0xcd, 0xe0, 0xf2, 0xcc, 
0xe0, 0xf1, 0xca, 0xdf, 0xf1, 0x1b, 0xe0, 0x89, 
0x6f, 0x00, 0x00, 0x00, 0x01, 0x74, 0x52, 0x4e, 
0x53, 0x00, 0x40, 0xe6, 0xd8, 0x66, 0x00, 0x00, 
0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 
0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 0x46, 
0xc9, 0x6b, 0x3e, 0x00, 0x00, 0x00, 0x73, 0x49, 
0x44, 0x41, 0x54, 0x18, 0xd3, 0x75, 0xcf, 0xeb, 
0x12, 0x82, 0x20, 0x14, 0x46, 0x51, 0x23, 0xd4, 
0xca, 0x3b, 0x94, 0xa1, 0x82, 0x5c, 0x7a, 0xff, 
0x77, 0xec, 0x13, 0x25, 0xd3, 0x51, 0xfe, 0xed, 
0xc5, 0x39, 0xcc, 0x10, 0x45, 0x27, 0xe7, 0xb2, 
0x6b, 0x72, 0x25, 0xdb, 0xa6, 0x31, 0x25, 0x9b, 
0x4e, 0xd2, 0xdb, 0x9f, 0xa0, 0xef, 0x8f, 0x2c, 
0xff, 0x89, 0xef, 0xa2, 0xac, 0x6a, 0x4a, 0x9a, 
0xa9, 0x19, 0xf7, 0xfd, 0x7c, 0xb5, 0x6f, 0xce, 
0xfc, 0x84, 0x98, 0xbb, 0xeb, 0x07, 0x31, 0xaf, 
0x48, 0xb4, 0x52, 0xaa, 0x1f, 0xb5, 0x5c, 0x00, 
0xf7, 0x80, 0x51, 0x9b, 0x00, 0x98, 0x07, 0x68, 
0x63, 0x03, 0x60, 0x1f, 0x60, 0xac, 0x0b, 0x80, 
0xf7, 0x00, 0xd6, 0x7d, 0x02, 0xac, 0xe7, 0xe8, 
0xdb, 0x5f, 0x4f, 0xdf, 0x09, 0x81, 0xd1, 0x85, 
0xde, 0x6b, 0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 
0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x63, 
0x72, 0x65, 0x61, 0x74, 0x65, 0x00, 0x32, 0x30, 
0x31, 0x30, 0x2d, 0x31, 0x32, 0x2d, 0x30, 0x31, 
0x54, 0x32, 0x30, 0x3a, 0x34, 0x33, 0x3a, 0x34, 
0x34, 0x2b, 0x30, 0x35, 0x3a, 0x30, 0x30, 0x38, 
0x99, 0x25, 0x1e, 0x00, 0x00, 0x00, 0x25, 0x74, 
0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 
0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x00, 0x32, 
0x30, 0x31, 0x30, 0x2d, 0x30, 0x39, 0x2d, 0x30, 
0x31, 0x54, 0x32, 0x33, 0x3a, 0x34, 0x34, 0x3a, 
0x30, 0x36, 0x2b, 0x30, 0x35, 0x3a, 0x30, 0x30, 
0xca, 0x97, 0x55, 0xac, 0x00, 0x00, 0x00, 0x00, 
0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *domain_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_domain_png = new wxImage();
	if (!img_domain_png || !img_domain_png->IsOk())
	{
		wxMemoryInputStream img_domain_pngIS(domain_png_data, sizeof(domain_png_data));
		img_domain_png->LoadFile(img_domain_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_domain_png;
}
#define domain_png_img domain_png_img()

static wxBitmap *domain_png_bmp()
{
	static wxBitmap *bmp_domain_png;
	if (!bmp_domain_png || !bmp_domain_png->IsOk())
		bmp_domain_png = new wxBitmap(*domain_png_img);
	return bmp_domain_png;
}
#define domain_png_bmp domain_png_bmp()

static wxIcon *domain_png_ico()
{
	static wxIcon *ico_domain_png;
	if (!ico_domain_png || !ico_domain_png->IsOk())
	{
		ico_domain_png = new wxIcon();
		ico_domain_png->CopyFromBitmap(*domain_png_bmp);
	}
	return ico_domain_png;
}
#define domain_png_ico domain_png_ico()

#endif // DOMAIN_PNG_H
