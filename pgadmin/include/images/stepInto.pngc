#ifndef STEPINTO_PNG_H
#define STEPINTO_PNG_H

static const unsigned char stepInto_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x02, 0x03, 0x00, 0x00, 0x00, 0x62, 0x9d, 0x17, 
0xf2, 0x00, 0x00, 0x00, 0x09, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 
0x00, 0x00, 0x5d, 0x66, 0xef, 0x31, 0x00, 0x00, 
0x00, 0x01, 0x74, 0x52, 0x4e, 0x53, 0x00, 0x40, 
0xe6, 0xd8, 0x66, 0x00, 0x00, 0x00, 0x09, 0x70, 
0x48, 0x59, 0x73, 0x00, 0x00, 0x00, 0x48, 0x00, 
0x00, 0x00, 0x48, 0x00, 0x46, 0xc9, 0x6b, 0x3e, 
0x00, 0x00, 0x00, 0x2b, 0x49, 0x44, 0x41, 0x54, 
0x08, 0xd7, 0x63, 0x60, 0x00, 0x01, 0xd1, 0x50, 
0x20, 0x21, 0x00, 0x62, 0x09, 0x70, 0xad, 0x5a, 
0x01, 0x65, 0x39, 0x80, 0x58, 0x01, 0x20, 0xd9, 
0x10, 0x20, 0x8b, 0x01, 0xc4, 0x62, 0x00, 0x89, 
0x41, 0x00, 0x17, 0x9c, 0x85, 0x02, 0x00, 0x88, 
0x8e, 0x08, 0xf2, 0x5b, 0xe2, 0xff, 0x38, 0x00, 
0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 
0x61, 0x74, 0x65, 0x3a, 0x63, 0x72, 0x65, 0x61, 
0x74, 0x65, 0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 
0x31, 0x32, 0x2d, 0x30, 0x31, 0x54, 0x32, 0x30, 
0x3a, 0x34, 0x33, 0x3a, 0x34, 0x35, 0x2b, 0x30, 
0x35, 0x3a, 0x30, 0x30, 0x9e, 0xee, 0x2e, 0xaa, 
0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 
0x64, 0x61, 0x74, 0x65, 0x3a, 0x6d, 0x6f, 0x64, 
0x69, 0x66, 0x79, 0x00, 0x32, 0x30, 0x31, 0x30, 
0x2d, 0x30, 0x39, 0x2d, 0x30, 0x31, 0x54, 0x32, 
0x33, 0x3a, 0x34, 0x34, 0x3a, 0x30, 0x36, 0x2b, 
0x30, 0x35, 0x3a, 0x30, 0x30, 0xca, 0x97, 0x55, 
0xac, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 
0x44, 0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *stepInto_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_stepInto_png = new wxImage();
	if (!img_stepInto_png || !img_stepInto_png->IsOk())
	{
		wxMemoryInputStream img_stepInto_pngIS(stepInto_png_data, sizeof(stepInto_png_data));
		img_stepInto_png->LoadFile(img_stepInto_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_stepInto_png;
}
#define stepInto_png_img stepInto_png_img()

static wxBitmap *stepInto_png_bmp()
{
	static wxBitmap *bmp_stepInto_png;
	if (!bmp_stepInto_png || !bmp_stepInto_png->IsOk())
		bmp_stepInto_png = new wxBitmap(*stepInto_png_img);
	return bmp_stepInto_png;
}
#define stepInto_png_bmp stepInto_png_bmp()

static wxIcon *stepInto_png_ico()
{
	static wxIcon *ico_stepInto_png;
	if (!ico_stepInto_png || !ico_stepInto_png->IsOk())
	{
		ico_stepInto_png = new wxIcon();
		ico_stepInto_png->CopyFromBitmap(*stepInto_png_bmp);
	}
	return ico_stepInto_png;
}
#define stepInto_png_ico stepInto_png_ico()

#endif // STEPINTO_PNG_H
