#ifndef DND_COPY_PNG_H
#define DND_COPY_PNG_H

static const unsigned char dnd_copy_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 
0x04, 0x03, 0x00, 0x00, 0x00, 0x81, 0x54, 0x67, 
0xc7, 0x00, 0x00, 0x00, 0x12, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 
0x00, 0x00, 0xf5, 0xde, 0xb3, 0xd2, 0xb4, 0x8c, 
0x66, 0x99, 0xff, 0xd4, 0xbc, 0xac, 0x3e, 0x00, 
0x00, 0x00, 0x01, 0x74, 0x52, 0x4e, 0x53, 0x00, 
0x40, 0xe6, 0xd8, 0x66, 0x00, 0x00, 0x00, 0x09, 
0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x00, 0x48, 
0x00, 0x00, 0x00, 0x48, 0x00, 0x46, 0xc9, 0x6b, 
0x3e, 0x00, 0x00, 0x00, 0x5d, 0x49, 0x44, 0x41, 
0x54, 0x28, 0xcf, 0x63, 0x60, 0x60, 0x10, 0x84, 
0x01, 0x01, 0x06, 0x06, 0x05, 0x06, 0x20, 0x10, 
0x36, 0x86, 0x02, 0x41, 0x74, 0x01, 0x11, 0x21, 
0x25, 0x25, 0x25, 0x14, 0x01, 0x47, 0x74, 0x15, 
0x2e, 0x02, 0xe8, 0x02, 0x8e, 0x0c, 0xa8, 0x86, 
0x82, 0x2d, 0x02, 0x0b, 0x84, 0x82, 0x80, 0xb1, 
0x89, 0x8b, 0x8b, 0x00, 0x8a, 0x0a, 0x24, 0x01, 
0x88, 0x0a, 0x20, 0x40, 0x55, 0x81, 0x2c, 0x00, 
0x52, 0x11, 0x8c, 0x4f, 0x85, 0x29, 0x41, 0x15, 
0x83, 0xc5, 0x16, 0xa2, 0xcc, 0x08, 0x36, 0xc6, 
0x6b, 0x06, 0xc5, 0x02, 0x82, 0x48, 0x40, 0x80, 
0x01, 0x00, 0x68, 0xd0, 0x4c, 0xe0, 0x38, 0x0c, 
0xf5, 0x1a, 0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 
0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x63, 
0x72, 0x65, 0x61, 0x74, 0x65, 0x00, 0x32, 0x30, 
0x31, 0x30, 0x2d, 0x31, 0x32, 0x2d, 0x30, 0x31, 
0x54, 0x32, 0x30, 0x3a, 0x34, 0x33, 0x3a, 0x34, 
0x34, 0x2b, 0x30, 0x35, 0x3a, 0x30, 0x30, 0x38, 
0x99, 0x25, 0x1e, 0x00, 0x00, 0x00, 0x25, 0x74, 
0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 
0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x00, 0x32, 
0x30, 0x31, 0x30, 0x2d, 0x30, 0x39, 0x2d, 0x30, 
0x31, 0x54, 0x32, 0x33, 0x3a, 0x34, 0x34, 0x3a, 
0x30, 0x36, 0x2b, 0x30, 0x35, 0x3a, 0x30, 0x30, 
0xca, 0x97, 0x55, 0xac, 0x00, 0x00, 0x00, 0x00, 
0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *dnd_copy_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_dnd_copy_png = new wxImage();
	if (!img_dnd_copy_png || !img_dnd_copy_png->IsOk())
	{
		wxMemoryInputStream img_dnd_copy_pngIS(dnd_copy_png_data, sizeof(dnd_copy_png_data));
		img_dnd_copy_png->LoadFile(img_dnd_copy_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_dnd_copy_png;
}
#define dnd_copy_png_img dnd_copy_png_img()

static wxBitmap *dnd_copy_png_bmp()
{
	static wxBitmap *bmp_dnd_copy_png;
	if (!bmp_dnd_copy_png || !bmp_dnd_copy_png->IsOk())
		bmp_dnd_copy_png = new wxBitmap(*dnd_copy_png_img);
	return bmp_dnd_copy_png;
}
#define dnd_copy_png_bmp dnd_copy_png_bmp()

static wxIcon *dnd_copy_png_ico()
{
	static wxIcon *ico_dnd_copy_png;
	if (!ico_dnd_copy_png || !ico_dnd_copy_png->IsOk())
	{
		ico_dnd_copy_png = new wxIcon();
		ico_dnd_copy_png->CopyFromBitmap(*dnd_copy_png_bmp);
	}
	return ico_dnd_copy_png;
}
#define dnd_copy_png_ico dnd_copy_png_ico()

#endif // DND_COPY_PNG_H
