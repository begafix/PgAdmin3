#ifndef DDFOREIGNKEYFROMUK_PNG_H
#define DDFOREIGNKEYFROMUK_PNG_H

static const unsigned char ddforeignkeyfromuk_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 
0x08, 0x06, 0x00, 0x00, 0x00, 0x89, 0xc7, 0x1f, 
0x80, 0x00, 0x00, 0x00, 0x01, 0x73, 0x52, 0x47, 
0x42, 0x00, 0xae, 0xce, 0x1c, 0xe9, 0x00, 0x00, 
0x00, 0x06, 0x62, 0x4b, 0x47, 0x44, 0x00, 0xff, 
0x00, 0xff, 0x00, 0xff, 0xa0, 0xbd, 0xa7, 0x93, 
0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 
0x00, 0x00, 0x0b, 0x13, 0x00, 0x00, 0x0b, 0x13, 
0x01, 0x00, 0x9a, 0x9c, 0x18, 0x00, 0x00, 0x00, 
0x07, 0x74, 0x49, 0x4d, 0x45, 0x07, 0xdb, 0x06, 
0x19, 0x0d, 0x23, 0x2f, 0x0b, 0xdc, 0x72, 0x92, 
0x00, 0x00, 0x00, 0xe3, 0x49, 0x44, 0x41, 0x54, 
0x18, 0xd3, 0x75, 0x8e, 0xbf, 0x4a, 0xc3, 0x70, 
0x14, 0x85, 0xbf, 0x9b, 0xb4, 0x85, 0x04, 0x4a, 
0x45, 0x28, 0xf8, 0x00, 0x42, 0x20, 0x83, 0x8b, 
0x83, 0xa3, 0x93, 0x2f, 0xd0, 0x6c, 0x75, 0x8b, 
0xcf, 0x21, 0xce, 0x75, 0x75, 0xe9, 0xe2, 0xd0, 
0x41, 0x47, 0x1f, 0x43, 0x31, 0x44, 0x63, 0x85, 
0x4a, 0x9c, 0x8b, 0x54, 0x70, 0xfc, 0x25, 0x6d, 
0xfd, 0xf3, 0xf3, 0x3a, 0xc4, 0x48, 0x15, 0xfc, 
0xa6, 0xc3, 0xe1, 0x9c, 0x73, 0xaf, 0xf0, 0xcd, 
0xe9, 0xd9, 0xb3, 0x86, 0x81, 0x0f, 0xc0, 0xc3, 
0xe3, 0x9c, 0x83, 0xfd, 0x0d, 0x01, 0x90, 0xf3, 
0x8b, 0x17, 0x5d, 0x2c, 0x2c, 0x3b, 0xdb, 0x6d, 
0x00, 0x1c, 0xa9, 0x0a, 0x57, 0xa9, 0xc1, 0xf3, 
0x5c, 0x9c, 0x24, 0x2b, 0x08, 0x36, 0x3d, 0x96, 
0xcb, 0x4f, 0x8e, 0x8e, 0xa7, 0x1c, 0x0e, 0xa6, 
0xbc, 0xbe, 0x29, 0x61, 0xe0, 0x93, 0x64, 0x45, 
0xb5, 0x60, 0x0a, 0xcb, 0x56, 0xe8, 0x53, 0xce, 
0x2d, 0x22, 0x42, 0xa7, 0xed, 0x32, 0x9e, 0x94, 
0xd5, 0x42, 0xbf, 0xd7, 0x95, 0xeb, 0x5b, 0xc3, 
0x78, 0x52, 0xd2, 0x6a, 0x39, 0x34, 0x9b, 0xc2, 
0xcd, 0x7d, 0xc9, 0x65, 0x5a, 0xd0, 0xef, 0x75, 
0xa5, 0xfe, 0x91, 0x28, 0xce, 0x35, 0xbd, 0x33, 
0x9a, 0x64, 0x46, 0xa3, 0x38, 0xd7, 0xda, 0x6f, 
0xb0, 0xc2, 0xfb, 0x87, 0x62, 0xad, 0xae, 0x5a, 
0xbf, 0x03, 0xae, 0x2b, 0xfc, 0xc5, 0xa9, 0xc5, 
0xde, 0x6e, 0x87, 0xc1, 0xc9, 0x13, 0xeb, 0x6b, 
0x0d, 0xfe, 0x65, 0x38, 0x9a, 0x69, 0x14, 0xe7, 
0x3a, 0x1c, 0xcd, 0x7e, 0xee, 0x7c, 0x01, 0xae, 
0xdc, 0x55, 0x93, 0x9c, 0x6c, 0x4f, 0x08, 0x00, 
0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 
0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *ddforeignkeyfromuk_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_ddforeignkeyfromuk_png = new wxImage();
	if (!img_ddforeignkeyfromuk_png || !img_ddforeignkeyfromuk_png->IsOk())
	{
		wxMemoryInputStream img_ddforeignkeyfromuk_pngIS(ddforeignkeyfromuk_png_data, sizeof(ddforeignkeyfromuk_png_data));
		img_ddforeignkeyfromuk_png->LoadFile(img_ddforeignkeyfromuk_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_ddforeignkeyfromuk_png;
}
#define ddforeignkeyfromuk_png_img ddforeignkeyfromuk_png_img()

static wxBitmap *ddforeignkeyfromuk_png_bmp()
{
	static wxBitmap *bmp_ddforeignkeyfromuk_png;
	if (!bmp_ddforeignkeyfromuk_png || !bmp_ddforeignkeyfromuk_png->IsOk())
		bmp_ddforeignkeyfromuk_png = new wxBitmap(*ddforeignkeyfromuk_png_img);
	return bmp_ddforeignkeyfromuk_png;
}
#define ddforeignkeyfromuk_png_bmp ddforeignkeyfromuk_png_bmp()

static wxIcon *ddforeignkeyfromuk_png_ico()
{
	static wxIcon *ico_ddforeignkeyfromuk_png;
	if (!ico_ddforeignkeyfromuk_png || !ico_ddforeignkeyfromuk_png->IsOk())
	{
		ico_ddforeignkeyfromuk_png = new wxIcon();
		ico_ddforeignkeyfromuk_png->CopyFromBitmap(*ddforeignkeyfromuk_png_bmp);
	}
	return ico_ddforeignkeyfromuk_png;
}
#define ddforeignkeyfromuk_png_ico ddforeignkeyfromuk_png_ico()

#endif // DDFOREIGNKEYFROMUK_PNG_H
