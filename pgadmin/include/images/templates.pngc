#ifndef TEMPLATES_PNG_H
#define TEMPLATES_PNG_H

static const unsigned char templates_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x00, 0xf9, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0xd1, 0xc7, 0x79, 0xce, 
0xbd, 0x39, 0xff, 0xff, 0xd6, 0xff, 0xff, 0xd3, 
0xfe, 0xfe, 0xd0, 0xfe, 0xfe, 0xcc, 0xfd, 0xfd, 
0xc8, 0xfc, 0xfc, 0xc4, 0xfc, 0xfc, 0xbf, 0xff, 
0xff, 0xd5, 0xa3, 0x99, 0x44, 0xfe, 0xfe, 0xce, 
0xfd, 0xfd, 0xc5, 0xfb, 0xfb, 0xba, 0xf9, 0xf9, 
0xad, 0x66, 0x66, 0x54, 0xfe, 0xfe, 0xcf, 0x66, 
0x66, 0x51, 0xfd, 0xfd, 0xc7, 0x65, 0x65, 0x4e, 
0xfc, 0xfc, 0xbe, 0x64, 0x64, 0x4a, 0xfa, 0xfa, 
0xb3, 0xf8, 0xf8, 0xa0, 0xfd, 0xfd, 0xca, 0xfd, 
0xfd, 0xc6, 0xfc, 0xfc, 0xc1, 0xfb, 0xfb, 0xbc, 
0xfb, 0xfb, 0xb7, 0xfa, 0xfa, 0xb2, 0xf9, 0xf9, 
0xac, 0xf8, 0xf8, 0xa6, 0xf6, 0xf6, 0x93, 0x65, 
0x65, 0x4d, 0xfb, 0xfb, 0xbb, 0xfb, 0xfb, 0xb6, 
0xfa, 0xfa, 0xb0, 0xf9, 0xf9, 0xaa, 0xf8, 0xf8, 
0xa5, 0x63, 0x63, 0x40, 0xf6, 0xf6, 0x99, 0xf4, 
0xf4, 0x86, 0xfa, 0xfa, 0xb4, 0xfa, 0xfa, 0xaf, 
0xf9, 0xf9, 0xa9, 0xf8, 0xf8, 0xa3, 0xf7, 0xf7, 
0x9d, 0xf6, 0xf6, 0x97, 0xf5, 0xf5, 0x91, 0xf5, 
0xf5, 0x8c, 0x64, 0x64, 0x43, 0xf8, 0xf8, 0xa2, 
0xf7, 0xf7, 0x9c, 0xf6, 0xf6, 0x96, 0xf5, 0xf5, 
0x90, 0xf4, 0xf4, 0x8a, 0x62, 0x62, 0x35, 0xf3, 
0xf3, 0x7f, 0xf7, 0xf7, 0x9a, 0xf6, 0xf6, 0x94, 
0xf5, 0xf5, 0x8f, 0xf4, 0xf4, 0x89, 0xf3, 0xf3, 
0x83, 0xf3, 0xf3, 0x7e, 0xf2, 0xf2, 0x79, 0xf1, 
0xf1, 0x74, 0x62, 0x62, 0x38, 0xf4, 0xf4, 0x87, 
0x61, 0x61, 0x34, 0xf3, 0xf3, 0x7d, 0x61, 0x61, 
0x30, 0xf1, 0xf1, 0x73, 0x60, 0x60, 0x2c, 0xf0, 
0xf0, 0x6b, 0xf3, 0xf3, 0x81, 0xf2, 0xf2, 0x7b, 
0xf2, 0xf2, 0x76, 0xf1, 0xf1, 0x72, 0xf0, 0xf0, 
0x6e, 0xf0, 0xf0, 0x6a, 0xef, 0xef, 0x66, 0xef, 
0xef, 0x64, 0xda, 0xfa, 0x5f, 0x6a, 0x00, 0x00, 
0x00, 0x01, 0x74, 0x52, 0x4e, 0x53, 0x00, 0x40, 
0xe6, 0xd8, 0x66, 0x00, 0x00, 0x00, 0x09, 0x70, 
0x48, 0x59, 0x73, 0x00, 0x00, 0x00, 0x48, 0x00, 
0x00, 0x00, 0x48, 0x00, 0x46, 0xc9, 0x6b, 0x3e, 
0x00, 0x00, 0x00, 0x97, 0x49, 0x44, 0x41, 0x54, 
0x18, 0xd3, 0x63, 0x60, 0x64, 0x82, 0x01, 0x46, 
0x06, 0x30, 0x60, 0x62, 0x66, 0x66, 0x66, 0x61, 
0x65, 0x63, 0xe7, 0xe0, 0x64, 0x82, 0x0a, 0x70, 
0x71, 0xa3, 0xaa, 0x61, 0xe2, 0x41, 0x53, 0xc3, 
0xc4, 0x8b, 0xa6, 0x86, 0x89, 0x0f, 0x4d, 0x0d, 
0x13, 0x3f, 0x48, 0x8d, 0x80, 0xa0, 0x90, 0xb0, 
0x88, 0xa8, 0x98, 0x38, 0x48, 0x40, 0x02, 0xa4, 
0x46, 0x52, 0x4a, 0x5a, 0x46, 0x56, 0x4e, 0x5e, 
0x01, 0x24, 0xa0, 0x08, 0x52, 0xa3, 0xa4, 0xac, 
0xa2, 0xaa, 0xa6, 0xae, 0xa1, 0x09, 0x12, 0xd0, 
0x02, 0xa9, 0xd1, 0xd6, 0xd1, 0xd5, 0xd3, 0x37, 
0x30, 0x34, 0x02, 0x0a, 0x00, 0x5d, 0x0a, 0x54, 
0x63, 0x6c, 0x62, 0x6a, 0x66, 0x6e, 0x61, 0x69, 
0x05, 0xb1, 0x18, 0xa8, 0xc6, 0xda, 0xc6, 0xd6, 
0xce, 0xde, 0xc1, 0xd1, 0x09, 0x2c, 0x00, 0x52, 
0xe3, 0xec, 0xe2, 0xea, 0xe6, 0xee, 0xe1, 0xe9, 
0x05, 0x73, 0xbe, 0x96, 0xb7, 0x8f, 0xaf, 0x9f, 
0x7f, 0x40, 0x60, 0x10, 0x54, 0x00, 0xc3, 0xc7, 
0xc8, 0x00, 0x00, 0xf4, 0xde, 0x0f, 0xa0, 0xdc, 
0xce, 0x0b, 0x76, 0x00, 0x00, 0x00, 0x25, 0x74, 
0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 
0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x00, 0x32, 
0x30, 0x31, 0x30, 0x2d, 0x31, 0x32, 0x2d, 0x30, 
0x31, 0x54, 0x32, 0x30, 0x3a, 0x34, 0x33, 0x3a, 
0x34, 0x35, 0x2b, 0x30, 0x35, 0x3a, 0x30, 0x30, 
0x9e, 0xee, 0x2e, 0xaa, 0x00, 0x00, 0x00, 0x25, 
0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 
0x3a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x00, 
0x32, 0x30, 0x31, 0x30, 0x2d, 0x30, 0x39, 0x2d, 
0x30, 0x31, 0x54, 0x32, 0x33, 0x3a, 0x34, 0x34, 
0x3a, 0x30, 0x36, 0x2b, 0x30, 0x35, 0x3a, 0x30, 
0x30, 0xca, 0x97, 0x55, 0xac, 0x00, 0x00, 0x00, 
0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 
0x82, 
};

#include "wx/mstream.h"

static wxImage *templates_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_templates_png = new wxImage();
	if (!img_templates_png || !img_templates_png->IsOk())
	{
		wxMemoryInputStream img_templates_pngIS(templates_png_data, sizeof(templates_png_data));
		img_templates_png->LoadFile(img_templates_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_templates_png;
}
#define templates_png_img templates_png_img()

static wxBitmap *templates_png_bmp()
{
	static wxBitmap *bmp_templates_png;
	if (!bmp_templates_png || !bmp_templates_png->IsOk())
		bmp_templates_png = new wxBitmap(*templates_png_img);
	return bmp_templates_png;
}
#define templates_png_bmp templates_png_bmp()

static wxIcon *templates_png_ico()
{
	static wxIcon *ico_templates_png;
	if (!ico_templates_png || !ico_templates_png->IsOk())
	{
		ico_templates_png = new wxIcon();
		ico_templates_png->CopyFromBitmap(*templates_png_bmp);
	}
	return ico_templates_png;
}
#define templates_png_ico templates_png_ico()

#endif // TEMPLATES_PNG_H
