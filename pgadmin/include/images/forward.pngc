#ifndef FORWARD_PNG_H
#define FORWARD_PNG_H

static const unsigned char forward_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x18, 
0x04, 0x03, 0x00, 0x00, 0x00, 0x12, 0x59, 0x20, 
0xcb, 0x00, 0x00, 0x00, 0x1e, 0x50, 0x4c, 0x54, 
0x45, 0xd6, 0xd3, 0xce, 0x00, 0xff, 0x00, 0x00, 
0x82, 0x84, 0x42, 0x9a, 0xa5, 0x00, 0x82, 0x00, 
0x31, 0xff, 0x9c, 0xce, 0xcf, 0xff, 0x00, 0x34, 
0x39, 0x84, 0x82, 0x84, 0x31, 0x30, 0x63, 0x1b, 
0x45, 0xdb, 0xbc, 0x00, 0x00, 0x00, 0x09, 0x70, 
0x48, 0x59, 0x73, 0x00, 0x00, 0x00, 0x48, 0x00, 
0x00, 0x00, 0x48, 0x00, 0x46, 0xc9, 0x6b, 0x3e, 
0x00, 0x00, 0x00, 0x86, 0x49, 0x44, 0x41, 0x54, 
0x18, 0xd3, 0x63, 0x60, 0xc0, 0x0b, 0x84, 0x0c, 
0x90, 0x38, 0x82, 0xce, 0x48, 0x9c, 0xd0, 0x14, 
0x24, 0xa9, 0xb0, 0x30, 0x24, 0xa9, 0xd0, 0x54, 
0x24, 0xa9, 0x30, 0x84, 0x94, 0xa0, 0xa0, 0x68, 
0x6a, 0x6a, 0x8a, 0x03, 0x54, 0x51, 0x28, 0x50, 
0x26, 0x4c, 0x05, 0xc6, 0x49, 0x05, 0x82, 0x24, 
0x07, 0x28, 0x27, 0x10, 0x21, 0x15, 0x1a, 0x2a, 
0x28, 0x2a, 0x2a, 0x28, 0xe8, 0x04, 0x31, 0xcb, 
0x18, 0x04, 0xcc, 0x8b, 0x20, 0x32, 0xce, 0xce, 
0x2e, 0x2e, 0x2e, 0xe5, 0x0a, 0x60, 0x8e, 0x98, 
0x89, 0x89, 0x8b, 0x8b, 0x7b, 0x11, 0xcc, 0x99, 
0xce, 0x70, 0x09, 0x06, 0xf7, 0xf2, 0x62, 0xa0, 
0x44, 0x47, 0x47, 0x47, 0x03, 0x98, 0xeb, 0xec, 
0x52, 0xa9, 0x01, 0xe4, 0x80, 0x98, 0x1c, 0x1d, 
0xce, 0xee, 0x93, 0x60, 0xe2, 0x0c, 0x1d, 0x20, 
0x09, 0x98, 0xa3, 0x39, 0xda, 0x27, 0x31, 0x10, 
0x00, 0x00, 0xb9, 0x91, 0x24, 0x76, 0xe1, 0x57, 
0x5f, 0x47, 0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 
0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x63, 
0x72, 0x65, 0x61, 0x74, 0x65, 0x00, 0x32, 0x30, 
0x31, 0x30, 0x2d, 0x31, 0x32, 0x2d, 0x30, 0x31, 
0x54, 0x32, 0x30, 0x3a, 0x34, 0x33, 0x3a, 0x34, 
0x35, 0x2b, 0x30, 0x35, 0x3a, 0x30, 0x30, 0x9e, 
0xee, 0x2e, 0xaa, 0x00, 0x00, 0x00, 0x25, 0x74, 
0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 
0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x00, 0x32, 
0x30, 0x31, 0x30, 0x2d, 0x30, 0x39, 0x2d, 0x30, 
0x31, 0x54, 0x32, 0x33, 0x3a, 0x34, 0x34, 0x3a, 
0x30, 0x36, 0x2b, 0x30, 0x35, 0x3a, 0x30, 0x30, 
0xca, 0x97, 0x55, 0xac, 0x00, 0x00, 0x00, 0x00, 
0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *forward_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_forward_png = new wxImage();
	if (!img_forward_png || !img_forward_png->IsOk())
	{
		wxMemoryInputStream img_forward_pngIS(forward_png_data, sizeof(forward_png_data));
		img_forward_png->LoadFile(img_forward_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_forward_png;
}
#define forward_png_img forward_png_img()

static wxBitmap *forward_png_bmp()
{
	static wxBitmap *bmp_forward_png;
	if (!bmp_forward_png || !bmp_forward_png->IsOk())
		bmp_forward_png = new wxBitmap(*forward_png_img);
	return bmp_forward_png;
}
#define forward_png_bmp forward_png_bmp()

static wxIcon *forward_png_ico()
{
	static wxIcon *ico_forward_png;
	if (!ico_forward_png || !ico_forward_png->IsOk())
	{
		ico_forward_png = new wxIcon();
		ico_forward_png->CopyFromBitmap(*forward_png_bmp);
	}
	return ico_forward_png;
}
#define forward_png_ico forward_png_ico()

#endif // FORWARD_PNG_H
