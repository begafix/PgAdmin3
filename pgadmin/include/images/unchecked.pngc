#ifndef UNCHECKED_PNG_H
#define UNCHECKED_PNG_H

static const unsigned char unchecked_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x04, 0x03, 0x00, 0x00, 0x00, 0xed, 0xdd, 0xe2, 
0x52, 0x00, 0x00, 0x00, 0x0f, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0xff, 
0xff, 0xff, 0x40, 0x40, 0x40, 0xd4, 0xd0, 0xc8, 
0x11, 0xa7, 0xec, 0x07, 0x00, 0x00, 0x00, 0x01, 
0x74, 0x52, 0x4e, 0x53, 0x00, 0x40, 0xe6, 0xd8, 
0x66, 0x00, 0x00, 0x00, 0x01, 0x62, 0x4b, 0x47, 
0x44, 0x02, 0x66, 0x0b, 0x7c, 0x64, 0x00, 0x00, 
0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 
0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 0x46, 
0xc9, 0x6b, 0x3e, 0x00, 0x00, 0x00, 0x26, 0x49, 
0x44, 0x41, 0x54, 0x08, 0xd7, 0x63, 0x60, 0xc0, 
0x00, 0x8c, 0x82, 0x20, 0x20, 0x04, 0x64, 0x18, 
0x83, 0x80, 0x13, 0x90, 0x61, 0xa4, 0x04, 0x04, 
0xd4, 0x64, 0xb8, 0x80, 0x00, 0x90, 0xc1, 0xa4, 
0x04, 0x06, 0x08, 0xcb, 0x01, 0x45, 0x44, 0x0c, 
0xf5, 0xc7, 0x0f, 0x8b, 0x17, 0x00, 0x00, 0x00, 
0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 
0x65, 0x3a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 
0x00, 0x32, 0x30, 0x31, 0x31, 0x2d, 0x30, 0x31, 
0x2d, 0x31, 0x32, 0x54, 0x31, 0x34, 0x3a, 0x30, 
0x30, 0x3a, 0x34, 0x30, 0x2b, 0x30, 0x36, 0x3a, 
0x30, 0x30, 0x46, 0x22, 0x8f, 0xb1, 0x00, 0x00, 
0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 
0x74, 0x65, 0x3a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 
0x79, 0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 0x30, 
0x39, 0x2d, 0x30, 0x31, 0x54, 0x32, 0x33, 0x3a, 
0x34, 0x34, 0x3a, 0x30, 0x36, 0x2b, 0x30, 0x35, 
0x3a, 0x30, 0x30, 0xca, 0x97, 0x55, 0xac, 0x00, 
0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 
0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *unchecked_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_unchecked_png = new wxImage();
	if (!img_unchecked_png || !img_unchecked_png->IsOk())
	{
		wxMemoryInputStream img_unchecked_pngIS(unchecked_png_data, sizeof(unchecked_png_data));
		img_unchecked_png->LoadFile(img_unchecked_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_unchecked_png;
}
#define unchecked_png_img unchecked_png_img()

static wxBitmap *unchecked_png_bmp()
{
	static wxBitmap *bmp_unchecked_png;
	if (!bmp_unchecked_png || !bmp_unchecked_png->IsOk())
		bmp_unchecked_png = new wxBitmap(*unchecked_png_img);
	return bmp_unchecked_png;
}
#define unchecked_png_bmp unchecked_png_bmp()

static wxIcon *unchecked_png_ico()
{
	static wxIcon *ico_unchecked_png;
	if (!ico_unchecked_png || !ico_unchecked_png->IsOk())
	{
		ico_unchecked_png = new wxIcon();
		ico_unchecked_png->CopyFromBitmap(*unchecked_png_bmp);
	}
	return ico_unchecked_png;
}
#define unchecked_png_ico unchecked_png_ico()

#endif // UNCHECKED_PNG_H
