#ifndef CLIP_PASTE_PNG_H
#define CLIP_PASTE_PNG_H

static const unsigned char clip_paste_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x01, 0x02, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0x8e, 0x8e, 0x8e, 0x60, 
0x60, 0x60, 0xa3, 0x98, 0x62, 0x83, 0x70, 0x15, 
0x6e, 0x67, 0x41, 0xc4, 0xc4, 0xc4, 0xc9, 0xc9, 
0xc9, 0xcf, 0xcf, 0xcf, 0x95, 0x8f, 0x63, 0xe8, 
0xe8, 0xe8, 0xf0, 0xf0, 0xf0, 0x90, 0x88, 0x66, 
0xe1, 0xd1, 0x67, 0xd7, 0xd7, 0xd7, 0xdf, 0xdf, 
0xdf, 0xf7, 0xf7, 0xf7, 0xfd, 0xfd, 0xfd, 0xff, 
0xff, 0xff, 0xd2, 0xbc, 0x70, 0xdb, 0xc7, 0x57, 
0x8e, 0x83, 0x4f, 0x85, 0x78, 0x53, 0xc9, 0xae, 
0x61, 0xda, 0xc6, 0x58, 0xcd, 0xb3, 0x37, 0xcb, 
0xb1, 0x38, 0xc9, 0xae, 0x39, 0xc7, 0xab, 0x3a, 
0xc5, 0xa8, 0x3b, 0xc2, 0xa4, 0x3c, 0xc0, 0xa1, 
0x3e, 0xbe, 0x9e, 0x3f, 0xbb, 0x9a, 0x40, 0xb9, 
0x97, 0x41, 0xc7, 0xac, 0x62, 0xd8, 0xc4, 0x58, 
0x88, 0x7c, 0x51, 0xd7, 0xc2, 0x59, 0xf2, 0xf9, 
0xfc, 0xe7, 0xf3, 0xf8, 0xe5, 0xf2, 0xf7, 0xe3, 
0xf0, 0xf6, 0xe0, 0xee, 0xf4, 0xd5, 0xc0, 0x5a, 
0xd7, 0xea, 0xf3, 0xd3, 0xe8, 0xf1, 0xcf, 0xe5, 
0xee, 0xca, 0xe2, 0xeb, 0xdc, 0xeb, 0xf0, 0xda, 
0xc7, 0x6c, 0xc8, 0xad, 0x43, 0xe4, 0xf1, 0xf7, 
0x2c, 0x66, 0xbd, 0xc5, 0xde, 0xe7, 0xd7, 0xc3, 
0x6d, 0xce, 0xb6, 0x5e, 0xcd, 0xb4, 0x5f, 0xca, 
0xb1, 0x60, 0xe2, 0xef, 0xf5, 0xce, 0xe4, 0xed, 
0xc9, 0xe1, 0xea, 0xc4, 0xdd, 0xe7, 0xbf, 0xda, 
0xe4, 0xba, 0xd6, 0xe0, 0xb5, 0xd2, 0xdd, 0xcc, 
0xe0, 0xe7, 0xde, 0xed, 0xf3, 0xc8, 0xdd, 0xe4, 
0xdb, 0xeb, 0xf1, 0xc3, 0xdc, 0xe6, 0xbd, 0xd9, 
0xe3, 0xb8, 0xd5, 0xdf, 0xb3, 0xd1, 0xdc, 0xae, 
0xce, 0xd9, 0xaa, 0xcb, 0xd6, 0xc4, 0xdb, 0xe2, 
0xd7, 0xe8, 0xef, 0xc2, 0xd9, 0xe0, 0xe5, 0xef, 
0xf4, 0xd0, 0xe3, 0xea, 0xcd, 0xe0, 0xe8, 0xca, 
0xde, 0xe6, 0xc6, 0xdc, 0xe4, 0xc1, 0xd9, 0xe0, 
0xd9, 0xe7, 0xec, 0x18, 0xe5, 0x5d, 0x69, 0x00, 
0x00, 0x00, 0x01, 0x74, 0x52, 0x4e, 0x53, 0x00, 
0x40, 0xe6, 0xd8, 0x66, 0x00, 0x00, 0x00, 0x01, 
0x62, 0x4b, 0x47, 0x44, 0x12, 0x7b, 0xbc, 0x6c, 
0x00, 0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 
0x73, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 
0x48, 0x00, 0x46, 0xc9, 0x6b, 0x3e, 0x00, 0x00, 
0x00, 0xae, 0x49, 0x44, 0x41, 0x54, 0x18, 0xd3, 
0x3d, 0x8e, 0x45, 0x16, 0xc3, 0x30, 0x14, 0x03, 
0x13, 0xc5, 0x29, 0x33, 0x33, 0x33, 0x53, 0xca, 
0xcc, 0xcc, 0xbd, 0xff, 0x55, 0x6a, 0x3b, 0x69, 
0x67, 0xa7, 0xb1, 0xfe, 0xb3, 0x04, 0x81, 0x22, 
0x82, 0x22, 0x0a, 0x1a, 0x12, 0x91, 0xa1, 0xd3, 
0xe9, 0x0d, 0x90, 0x89, 0xa4, 0x66, 0x23, 0x68, 
0x82, 0xc9, 0x0c, 0x0b, 0x37, 0xc4, 0x0a, 0x9b, 
0xdd, 0x64, 0x76, 0x38, 0x5d, 0x2e, 0xb8, 0x09, 
0x13, 0x1e, 0x2f, 0x34, 0x7c, 0x7e, 0x2e, 0x02, 
0xc1, 0x50, 0x38, 0x12, 0x8d, 0xc5, 0x13, 0xc9, 
0x54, 0x9a, 0x8b, 0x0c, 0xcb, 0x59, 0xb5, 0x23, 
0x33, 0x91, 0x63, 0xef, 0xc8, 0x17, 0x8a, 0xa5, 
0x32, 0xff, 0x9b, 0x54, 0x58, 0x1f, 0x85, 0x6a, 
0xad, 0xde, 0x40, 0x93, 0x1a, 0xd2, 0x6a, 0xd3, 
0x7b, 0x74, 0x14, 0x45, 0xe9, 0xb2, 0x2b, 0xba, 
0xa3, 0xd7, 0x1f, 0x0c, 0x31, 0x1a, 0x4f, 0xa6, 
0xb3, 0xf9, 0x62, 0x09, 0xb6, 0x8c, 0x82, 0x95, 
0xc2, 0x59, 0x43, 0xdb, 0x8f, 0xcd, 0x76, 0xb7, 
0x3f, 0x1c, 0x4f, 0xe7, 0xbf, 0xb8, 0xa8, 0x8d, 
0xeb, 0x5f, 0xdc, 0xee, 0x8f, 0xe7, 0xeb, 0xfc, 
0xfe, 0xfc, 0x84, 0xf8, 0x9b, 0x2f, 0x7e, 0x01, 
0xfb, 0xda, 0x14, 0x63, 0x8f, 0x4e, 0x34, 0x91, 
0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 
0x64, 0x61, 0x74, 0x65, 0x3a, 0x63, 0x72, 0x65, 
0x61, 0x74, 0x65, 0x00, 0x32, 0x30, 0x31, 0x30, 
0x2d, 0x31, 0x32, 0x2d, 0x30, 0x31, 0x54, 0x32, 
0x30, 0x3a, 0x34, 0x33, 0x3a, 0x34, 0x34, 0x2b, 
0x30, 0x35, 0x3a, 0x30, 0x30, 0x38, 0x99, 0x25, 
0x1e, 0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 
0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x6d, 0x6f, 
0x64, 0x69, 0x66, 0x79, 0x00, 0x32, 0x30, 0x31, 
0x30, 0x2d, 0x30, 0x39, 0x2d, 0x30, 0x31, 0x54, 
0x32, 0x33, 0x3a, 0x34, 0x34, 0x3a, 0x30, 0x36, 
0x2b, 0x30, 0x35, 0x3a, 0x30, 0x30, 0xca, 0x97, 
0x55, 0xac, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 
0x4e, 0x44, 0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *clip_paste_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_clip_paste_png = new wxImage();
	if (!img_clip_paste_png || !img_clip_paste_png->IsOk())
	{
		wxMemoryInputStream img_clip_paste_pngIS(clip_paste_png_data, sizeof(clip_paste_png_data));
		img_clip_paste_png->LoadFile(img_clip_paste_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_clip_paste_png;
}
#define clip_paste_png_img clip_paste_png_img()

static wxBitmap *clip_paste_png_bmp()
{
	static wxBitmap *bmp_clip_paste_png;
	if (!bmp_clip_paste_png || !bmp_clip_paste_png->IsOk())
		bmp_clip_paste_png = new wxBitmap(*clip_paste_png_img);
	return bmp_clip_paste_png;
}
#define clip_paste_png_bmp clip_paste_png_bmp()

static wxIcon *clip_paste_png_ico()
{
	static wxIcon *ico_clip_paste_png;
	if (!ico_clip_paste_png || !ico_clip_paste_png->IsOk())
	{
		ico_clip_paste_png = new wxIcon();
		ico_clip_paste_png->CopyFromBitmap(*clip_paste_png_bmp);
	}
	return ico_clip_paste_png;
}
#define clip_paste_png_ico clip_paste_png_ico()

#endif // CLIP_PASTE_PNG_H
