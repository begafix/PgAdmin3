#ifndef CONSTRAINTS_PNG_H
#define CONSTRAINTS_PNG_H

static const unsigned char constraints_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x04, 0x03, 0x00, 0x00, 0x00, 0xed, 0xdd, 0xe2, 
0x52, 0x00, 0x00, 0x00, 0x24, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0xd9, 0x8c, 0x75, 0xbf, 
0x3c, 0x14, 0xe7, 0xbc, 0x9c, 0xe7, 0xa3, 0x81, 
0xe7, 0xb2, 0x91, 0xe6, 0x92, 0x6e, 0xe6, 0x7f, 
0x5a, 0xe6, 0x6d, 0x45, 0xe6, 0x5c, 0x32, 0xe6, 
0x4d, 0x23, 0xe6, 0x43, 0x18, 0x79, 0x60, 0x69, 
0x5c, 0x00, 0x00, 0x00, 0x01, 0x74, 0x52, 0x4e, 
0x53, 0x00, 0x40, 0xe6, 0xd8, 0x66, 0x00, 0x00, 
0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 
0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 0x46, 
0xc9, 0x6b, 0x3e, 0x00, 0x00, 0x00, 0x4d, 0x49, 
0x44, 0x41, 0x54, 0x08, 0xd7, 0x63, 0x60, 0xc0, 
0x04, 0x02, 0x50, 0x9a, 0x49, 0x11, 0x4c, 0x02, 
0x91, 0x11, 0x48, 0x48, 0x45, 0x81, 0x81, 0xc9, 
0x14, 0x28, 0xc4, 0xe4, 0x06, 0x64, 0x84, 0x24, 
0x09, 0x30, 0xa8, 0xa4, 0x03, 0x19, 0x6e, 0x15, 
0x0a, 0x20, 0xcc, 0xc0, 0x94, 0xde, 0xc4, 0xc0, 
0xa8, 0xde, 0x09, 0x64, 0x00, 0x39, 0x0c, 0x42, 
0xb3, 0x80, 0x8c, 0x26, 0xa0, 0x26, 0x46, 0x6d, 
0x05, 0x06, 0x46, 0x05, 0x90, 0x39, 0x42, 0x02, 
0x0c, 0x44, 0x00, 0x00, 0x90, 0x88, 0x08, 0xe6, 
0x43, 0x37, 0xa6, 0x7a, 0x00, 0x00, 0x00, 0x25, 
0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 
0x3a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x00, 
0x32, 0x30, 0x31, 0x30, 0x2d, 0x31, 0x32, 0x2d, 
0x30, 0x31, 0x54, 0x32, 0x30, 0x3a, 0x34, 0x33, 
0x3a, 0x34, 0x34, 0x2b, 0x30, 0x35, 0x3a, 0x30, 
0x30, 0x38, 0x99, 0x25, 0x1e, 0x00, 0x00, 0x00, 
0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 
0x65, 0x3a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 
0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 0x30, 0x39, 
0x2d, 0x30, 0x31, 0x54, 0x32, 0x33, 0x3a, 0x34, 
0x34, 0x3a, 0x30, 0x36, 0x2b, 0x30, 0x35, 0x3a, 
0x30, 0x30, 0xca, 0x97, 0x55, 0xac, 0x00, 0x00, 
0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 
0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *constraints_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_constraints_png = new wxImage();
	if (!img_constraints_png || !img_constraints_png->IsOk())
	{
		wxMemoryInputStream img_constraints_pngIS(constraints_png_data, sizeof(constraints_png_data));
		img_constraints_png->LoadFile(img_constraints_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_constraints_png;
}
#define constraints_png_img constraints_png_img()

static wxBitmap *constraints_png_bmp()
{
	static wxBitmap *bmp_constraints_png;
	if (!bmp_constraints_png || !bmp_constraints_png->IsOk())
		bmp_constraints_png = new wxBitmap(*constraints_png_img);
	return bmp_constraints_png;
}
#define constraints_png_bmp constraints_png_bmp()

static wxIcon *constraints_png_ico()
{
	static wxIcon *ico_constraints_png;
	if (!ico_constraints_png || !ico_constraints_png->IsOk())
	{
		ico_constraints_png = new wxIcon();
		ico_constraints_png->CopyFromBitmap(*constraints_png_bmp);
	}
	return ico_constraints_png;
}
#define constraints_png_ico constraints_png_ico()

#endif // CONSTRAINTS_PNG_H
