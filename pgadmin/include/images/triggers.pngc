#ifndef TRIGGERS_PNG_H
#define TRIGGERS_PNG_H

static const unsigned char triggers_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x04, 0x03, 0x00, 0x00, 0x00, 0xed, 0xdd, 0xe2, 
0x52, 0x00, 0x00, 0x00, 0x27, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0x85, 0xbe, 0xc9, 0x2f, 
0x91, 0xa3, 0x74, 0xf2, 0xe2, 0xe0, 0xff, 0xfb, 
0x78, 0xbe, 0xc7, 0xed, 0xff, 0xfd, 0x92, 0xff, 
0xf1, 0x69, 0xe7, 0xd7, 0x47, 0xc5, 0xb5, 0x30, 
0xae, 0x9e, 0x39, 0xb7, 0xa7, 0x56, 0xd4, 0xc4, 
0x62, 0xdf, 0x01, 0xa4, 0x00, 0x00, 0x00, 0x01, 
0x74, 0x52, 0x4e, 0x53, 0x00, 0x40, 0xe6, 0xd8, 
0x66, 0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 
0x73, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 
0x48, 0x00, 0x46, 0xc9, 0x6b, 0x3e, 0x00, 0x00, 
0x00, 0x6e, 0x49, 0x44, 0x41, 0x54, 0x08, 0xd7, 
0x63, 0x10, 0x52, 0x12, 0x60, 0x00, 0x03, 0x65, 
0x63, 0x05, 0x08, 0x43, 0xc5, 0x55, 0x49, 0x11, 
0xcc, 0x50, 0x4b, 0x32, 0x36, 0x02, 0x4b, 0xaa, 
0x17, 0xb9, 0x04, 0x81, 0x95, 0x69, 0x34, 0xa5, 
0x41, 0x94, 0x69, 0x4e, 0x2a, 0x57, 0x71, 0x71, 
0x02, 0x0a, 0x69, 0x2d, 0xea, 0x50, 0x4b, 0x4b, 
0x03, 0xaa, 0xd7, 0xde, 0x34, 0x53, 0xbd, 0xbc, 
0xbc, 0x88, 0x81, 0x41, 0xe7, 0xd0, 0x2a, 0x8d, 
0x8e, 0x8e, 0x0e, 0x05, 0x06, 0x21, 0xa5, 0xdd, 
0x9a, 0x33, 0x67, 0x4e, 0x02, 0x2a, 0x62, 0x3a, 
0xa3, 0xb5, 0x6a, 0x15, 0xc8, 0x4c, 0x46, 0x25, 
0xed, 0xdd, 0x9b, 0x20, 0xb6, 0xe8, 0x9c, 0x81, 
0x58, 0xc2, 0xc0, 0xa4, 0xc4, 0x80, 0x04, 0x00, 
0x82, 0x8a, 0x18, 0x64, 0x25, 0x1c, 0x07, 0x64, 
0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 
0x64, 0x61, 0x74, 0x65, 0x3a, 0x63, 0x72, 0x65, 
0x61, 0x74, 0x65, 0x00, 0x32, 0x30, 0x31, 0x30, 
0x2d, 0x31, 0x32, 0x2d, 0x30, 0x31, 0x54, 0x32, 
0x30, 0x3a, 0x34, 0x33, 0x3a, 0x34, 0x35, 0x2b, 
0x30, 0x35, 0x3a, 0x30, 0x30, 0x9e, 0xee, 0x2e, 
0xaa, 0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 
0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x6d, 0x6f, 
0x64, 0x69, 0x66, 0x79, 0x00, 0x32, 0x30, 0x31, 
0x30, 0x2d, 0x30, 0x39, 0x2d, 0x30, 0x31, 0x54, 
0x32, 0x33, 0x3a, 0x34, 0x34, 0x3a, 0x30, 0x36, 
0x2b, 0x30, 0x35, 0x3a, 0x30, 0x30, 0xca, 0x97, 
0x55, 0xac, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 
0x4e, 0x44, 0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *triggers_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_triggers_png = new wxImage();
	if (!img_triggers_png || !img_triggers_png->IsOk())
	{
		wxMemoryInputStream img_triggers_pngIS(triggers_png_data, sizeof(triggers_png_data));
		img_triggers_png->LoadFile(img_triggers_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_triggers_png;
}
#define triggers_png_img triggers_png_img()

static wxBitmap *triggers_png_bmp()
{
	static wxBitmap *bmp_triggers_png;
	if (!bmp_triggers_png || !bmp_triggers_png->IsOk())
		bmp_triggers_png = new wxBitmap(*triggers_png_img);
	return bmp_triggers_png;
}
#define triggers_png_bmp triggers_png_bmp()

static wxIcon *triggers_png_ico()
{
	static wxIcon *ico_triggers_png;
	if (!ico_triggers_png || !ico_triggers_png->IsOk())
	{
		ico_triggers_png = new wxIcon();
		ico_triggers_png->CopyFromBitmap(*triggers_png_bmp);
	}
	return ico_triggers_png;
}
#define triggers_png_ico triggers_png_ico()

#endif // TRIGGERS_PNG_H
