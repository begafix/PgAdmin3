#ifndef SETBREAK_PNG_H
#define SETBREAK_PNG_H

static const unsigned char setBreak_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x04, 0x03, 0x00, 0x00, 0x00, 0xed, 0xdd, 0xe2, 
0x52, 0x00, 0x00, 0x00, 0x12, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0xc0, 0x80, 
0x80, 0x80, 0xff, 0x00, 0x00, 0x80, 0x80, 0x00, 
0x80, 0x00, 0x00, 0x4d, 0x75, 0xde, 0x34, 0x00, 
0x00, 0x00, 0x01, 0x74, 0x52, 0x4e, 0x53, 0x00, 
0x40, 0xe6, 0xd8, 0x66, 0x00, 0x00, 0x00, 0x09, 
0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x00, 0x48, 
0x00, 0x00, 0x00, 0x48, 0x00, 0x46, 0xc9, 0x6b, 
0x3e, 0x00, 0x00, 0x00, 0x50, 0x49, 0x44, 0x41, 
0x54, 0x08, 0xd7, 0x63, 0x60, 0x40, 0x02, 0x82, 
0x82, 0x10, 0x5a, 0xc8, 0xd8, 0x44, 0x11, 0x44, 
0x33, 0x1a, 0x1b, 0x9b, 0x86, 0x2a, 0x00, 0x19, 
0xc2, 0x20, 0x46, 0x20, 0x90, 0xa1, 0xac, 0x08, 
0x64, 0x84, 0x80, 0x64, 0x04, 0x9d, 0x4d, 0x43, 
0x43, 0x05, 0x40, 0x0c, 0x63, 0x28, 0xc3, 0xd8, 
0x38, 0x14, 0x85, 0xc1, 0xa0, 0x0c, 0x92, 0x09, 
0x02, 0x6b, 0x07, 0x0a, 0x80, 0xb4, 0x33, 0xba, 
0x02, 0x19, 0x0a, 0x60, 0x2b, 0x42, 0x43, 0x15, 
0x51, 0x2d, 0x85, 0x00, 0x00, 0x59, 0x8e, 0x10, 
0x28, 0x64, 0xac, 0xd7, 0xec, 0x00, 0x00, 0x00, 
0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 
0x65, 0x3a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 
0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 0x31, 0x32, 
0x2d, 0x30, 0x31, 0x54, 0x32, 0x30, 0x3a, 0x34, 
0x33, 0x3a, 0x34, 0x35, 0x2b, 0x30, 0x35, 0x3a, 
0x30, 0x30, 0x9e, 0xee, 0x2e, 0xaa, 0x00, 0x00, 
0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 
0x74, 0x65, 0x3a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 
0x79, 0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 0x30, 
0x39, 0x2d, 0x30, 0x31, 0x54, 0x32, 0x33, 0x3a, 
0x34, 0x34, 0x3a, 0x30, 0x36, 0x2b, 0x30, 0x35, 
0x3a, 0x30, 0x30, 0xca, 0x97, 0x55, 0xac, 0x00, 
0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 
0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *setBreak_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_setBreak_png = new wxImage();
	if (!img_setBreak_png || !img_setBreak_png->IsOk())
	{
		wxMemoryInputStream img_setBreak_pngIS(setBreak_png_data, sizeof(setBreak_png_data));
		img_setBreak_png->LoadFile(img_setBreak_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_setBreak_png;
}
#define setBreak_png_img setBreak_png_img()

static wxBitmap *setBreak_png_bmp()
{
	static wxBitmap *bmp_setBreak_png;
	if (!bmp_setBreak_png || !bmp_setBreak_png->IsOk())
		bmp_setBreak_png = new wxBitmap(*setBreak_png_img);
	return bmp_setBreak_png;
}
#define setBreak_png_bmp setBreak_png_bmp()

static wxIcon *setBreak_png_ico()
{
	static wxIcon *ico_setBreak_png;
	if (!ico_setBreak_png || !ico_setBreak_png->IsOk())
	{
		ico_setBreak_png = new wxIcon();
		ico_setBreak_png->CopyFromBitmap(*setBreak_png_bmp);
	}
	return ico_setBreak_png;
}
#define setBreak_png_ico setBreak_png_ico()

#endif // SETBREAK_PNG_H
