#ifndef FOREIGNKEY_PNG_H
#define FOREIGNKEY_PNG_H

static const unsigned char foreignkey_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x98, 0xa0, 
0xbd, 0x00, 0x00, 0x00, 0x02, 0x74, 0x52, 0x4e, 
0x53, 0x00, 0x00, 0x76, 0x93, 0xcd, 0x38, 0x00, 
0x00, 0x00, 0x02, 0x62, 0x4b, 0x47, 0x44, 0x00, 
0x00, 0xaa, 0x8d, 0x23, 0x32, 0x00, 0x00, 0x00, 
0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x00, 
0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 0x46, 0xc9, 
0x6b, 0x3e, 0x00, 0x00, 0x00, 0x5f, 0x49, 0x44, 
0x41, 0x54, 0x18, 0xd3, 0x63, 0x60, 0xa0, 0x0a, 
0xd8, 0xd3, 0xdf, 0xbf, 0x07, 0x99, 0xdf, 0xba, 
0xe5, 0xea, 0xd5, 0xcd, 0xad, 0x48, 0xf2, 0x5b, 
0x1e, 0xde, 0xb9, 0x7e, 0x6b, 0x63, 0x25, 0x04, 
0x6c, 0x60, 0x60, 0xe8, 0xbf, 0xfa, 0xa0, 0xf2, 
0xe6, 0xb9, 0x8b, 0x37, 0x6e, 0xdd, 0xb8, 0x7e, 
0xf9, 0xca, 0xe3, 0x4a, 0x90, 0xc0, 0xfd, 0xca, 
0x9b, 0x67, 0x2e, 0xdc, 0x5c, 0x7d, 0x67, 0xe5, 
0x95, 0x1b, 0x20, 0x15, 0x7b, 0xb6, 0xdc, 0xbf, 
0x79, 0xf9, 0xea, 0x86, 0x4a, 0x10, 0x04, 0xf1, 
0x81, 0x86, 0x6e, 0xbe, 0x74, 0x61, 0x63, 0x0b, 
0x3e, 0x6b, 0x29, 0x07, 0x00, 0x9e, 0xeb, 0x37, 
0x01, 0xa0, 0xe0, 0xd3, 0x5c, 0x00, 0x00, 0x00, 
0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 
0x65, 0x3a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 
0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 0x31, 0x32, 
0x2d, 0x30, 0x31, 0x54, 0x32, 0x30, 0x3a, 0x34, 
0x33, 0x3a, 0x34, 0x35, 0x2b, 0x30, 0x35, 0x3a, 
0x30, 0x30, 0x9e, 0xee, 0x2e, 0xaa, 0x00, 0x00, 
0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 
0x74, 0x65, 0x3a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 
0x79, 0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 0x30, 
0x39, 0x2d, 0x30, 0x31, 0x54, 0x32, 0x33, 0x3a, 
0x34, 0x34, 0x3a, 0x30, 0x36, 0x2b, 0x30, 0x35, 
0x3a, 0x30, 0x30, 0xca, 0x97, 0x55, 0xac, 0x00, 
0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 
0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *foreignkey_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_foreignkey_png = new wxImage();
	if (!img_foreignkey_png || !img_foreignkey_png->IsOk())
	{
		wxMemoryInputStream img_foreignkey_pngIS(foreignkey_png_data, sizeof(foreignkey_png_data));
		img_foreignkey_png->LoadFile(img_foreignkey_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_foreignkey_png;
}
#define foreignkey_png_img foreignkey_png_img()

static wxBitmap *foreignkey_png_bmp()
{
	static wxBitmap *bmp_foreignkey_png;
	if (!bmp_foreignkey_png || !bmp_foreignkey_png->IsOk())
		bmp_foreignkey_png = new wxBitmap(*foreignkey_png_img);
	return bmp_foreignkey_png;
}
#define foreignkey_png_bmp foreignkey_png_bmp()

static wxIcon *foreignkey_png_ico()
{
	static wxIcon *ico_foreignkey_png;
	if (!ico_foreignkey_png || !ico_foreignkey_png->IsOk())
	{
		ico_foreignkey_png = new wxIcon();
		ico_foreignkey_png->CopyFromBitmap(*foreignkey_png_bmp);
	}
	return ico_foreignkey_png;
}
#define foreignkey_png_ico foreignkey_png_ico()

#endif // FOREIGNKEY_PNG_H
