#ifndef USERMAPPINGS_PNG_H
#define USERMAPPINGS_PNG_H

static const unsigned char usermappings_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x00, 0x01, 0x73, 0x52, 0x47, 
0x42, 0x00, 0xae, 0xce, 0x1c, 0xe9, 0x00, 0x00, 
0x00, 0xe4, 0x50, 0x4c, 0x54, 0x45, 0xd3, 0x90, 
0x95, 0x84, 0x84, 0x84, 0x5c, 0x5c, 0x5c, 0xbf, 
0xbf, 0xbf, 0xa0, 0xa0, 0xa0, 0x86, 0x82, 0x7e, 
0xcb, 0xc1, 0xb8, 0xf2, 0xe4, 0xdb, 0xcb, 0xc1, 
0xbb, 0x92, 0x8d, 0x8b, 0x7a, 0x77, 0x74, 0xf4, 
0xe6, 0xda, 0xf8, 0xea, 0xe0, 0xf8, 0xea, 0xe2, 
0xf7, 0xea, 0xe4, 0xf3, 0xe6, 0xe2, 0x92, 0x8d, 
0x8c, 0x93, 0x93, 0x93, 0xbd, 0xb4, 0xac, 0xf7, 
0xea, 0xe6, 0xf7, 0xea, 0xe8, 0xca, 0xc1, 0xc1, 
0x70, 0x70, 0x70, 0xde, 0xd3, 0xca, 0xf7, 0xea, 
0xea, 0xf1, 0xe4, 0xe6, 0xb6, 0xb6, 0xb6, 0x9b, 
0x95, 0x92, 0x98, 0x92, 0x92, 0x55, 0x55, 0x55, 
0x9b, 0x9b, 0x9b, 0x64, 0x63, 0x62, 0xd3, 0xc9, 
0xc6, 0xff, 0xff, 0xff, 0xfc, 0xfe, 0xfe, 0xf8, 
0xfc, 0xfe, 0xf3, 0xfa, 0xfd, 0xed, 0xf8, 0xfc, 
0xe7, 0xf5, 0xfa, 0xe1, 0xf3, 0xf9, 0xda, 0xf0, 
0xf8, 0x56, 0x56, 0x56, 0x64, 0x63, 0x63, 0x9b, 
0x95, 0x95, 0xdb, 0x93, 0x96, 0xc8, 0x00, 0x00, 
0xd3, 0xed, 0xf6, 0x5c, 0x5d, 0x5e, 0x9a, 0xa5, 
0xa8, 0xc7, 0xdc, 0xe1, 0x9b, 0xa9, 0xad, 0xcd, 
0xeb, 0xf5, 0x97, 0xa2, 0xa5, 0xd3, 0xea, 0xf0, 
0xd0, 0xe8, 0xf0, 0xcc, 0xe6, 0xf1, 0xd4, 0x5e, 
0x60, 0xcf, 0x5c, 0x5f, 0xc6, 0xe8, 0xf4, 0xde, 
0xde, 0xde, 0x6e, 0x72, 0x73, 0xc8, 0xe5, 0xf1, 
0xd4, 0x99, 0x9f, 0xc0, 0xe5, 0xf3, 0xa8, 0xa8, 
0xa8, 0x96, 0xa2, 0xa5, 0xc4, 0xe3, 0xf1, 0x1e, 
0x50, 0xad, 0xba, 0xe3, 0xf1, 0x72, 0x72, 0x72, 
0xbb, 0xcf, 0xd6, 0xc0, 0xe1, 0xf1, 0xb4, 0xe1, 
0xf0, 0xb8, 0xb8, 0xb8, 0xaf, 0xdf, 0xef, 0xab, 
0xdd, 0xef, 0xa1, 0x78, 0x54, 0x14, 0x00, 0x00, 
0x00, 0x01, 0x74, 0x52, 0x4e, 0x53, 0x00, 0x40, 
0xe6, 0xd8, 0x66, 0x00, 0x00, 0x00, 0x01, 0x62, 
0x4b, 0x47, 0x44, 0x00, 0x88, 0x05, 0x1d, 0x48, 
0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 
0x00, 0x00, 0x0b, 0x13, 0x00, 0x00, 0x0b, 0x13, 
0x01, 0x00, 0x9a, 0x9c, 0x18, 0x00, 0x00, 0x00, 
0x07, 0x74, 0x49, 0x4d, 0x45, 0x07, 0xdb, 0x04, 
0x11, 0x11, 0x05, 0x22, 0x1c, 0xfb, 0xac, 0x90, 
0x00, 0x00, 0x00, 0xb5, 0x49, 0x44, 0x41, 0x54, 
0x18, 0xd3, 0x45, 0x8e, 0xd7, 0x0e, 0xc2, 0x30, 
0x0c, 0x00, 0x53, 0xf6, 0xde, 0xa3, 0x0c, 0xb3, 
0xdc, 0x94, 0xbd, 0x22, 0x28, 0x48, 0x05, 0x09, 
0xb0, 0x98, 0xf9, 0xff, 0xff, 0xc1, 0x41, 0x05, 
0xee, 0xed, 0x4e, 0xb6, 0x13, 0x21, 0x0c, 0x56, 
0xc8, 0x0a, 0x8b, 0x3f, 0x91, 0x68, 0x2c, 0x9e, 
0x48, 0x46, 0xfe, 0x21, 0x95, 0xce, 0x64, 0x73, 
0xf9, 0xc2, 0xcf, 0x8b, 0x25, 0xf6, 0x72, 0xa5, 
0x6a, 0x7d, 0x43, 0xad, 0x6e, 0xdc, 0x6e, 0x84, 
0xbe, 0xa1, 0xd9, 0xca, 0x95, 0xdb, 0x10, 0xd0, 
0x31, 0xa5, 0xdb, 0xab, 0x40, 0x7f, 0x80, 0x8e, 
0x74, 0x87, 0x23, 0x30, 0x61, 0x3c, 0x99, 0x82, 
0xf1, 0xd9, 0x5c, 0x69, 0xcd, 0xbe, 0x5c, 0xad, 
0x15, 0xa0, 0x33, 0x9f, 0x69, 0xb4, 0x3d, 0xe4, 
0xb0, 0xd9, 0x7a, 0x3b, 0x70, 0xe4, 0x5e, 0xa3, 
0x26, 0x42, 0xe1, 0x1f, 0xd8, 0x8f, 0x20, 0x5d, 
0x65, 0x5c, 0x4b, 0x71, 0x3a, 0xb3, 0x5f, 0xc0, 
0x25, 0xfd, 0x22, 0x7a, 0xa0, 0x14, 0xd7, 0x1b, 
0xfb, 0x1d, 0x86, 0xe4, 0xdb, 0x8a, 0xa3, 0x27, 
0x9e, 0xd7, 0xcf, 0xfb, 0x23, 0xf2, 0x11, 0x15, 
0xef, 0x04, 0x9f, 0x83, 0x05, 0x8f, 0xf3, 0x0d, 
0x52, 0x41, 0xe8, 0xc0, 0x49, 0x3f, 0xc8, 0xf0, 
0x06, 0x0e, 0x01, 0x1e, 0x9c, 0x6d, 0x34, 0x77, 
0x91, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 
0x44, 0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *usermappings_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_usermappings_png = new wxImage();
	if (!img_usermappings_png || !img_usermappings_png->IsOk())
	{
		wxMemoryInputStream img_usermappings_pngIS(usermappings_png_data, sizeof(usermappings_png_data));
		img_usermappings_png->LoadFile(img_usermappings_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_usermappings_png;
}
#define usermappings_png_img usermappings_png_img()

static wxBitmap *usermappings_png_bmp()
{
	static wxBitmap *bmp_usermappings_png;
	if (!bmp_usermappings_png || !bmp_usermappings_png->IsOk())
		bmp_usermappings_png = new wxBitmap(*usermappings_png_img);
	return bmp_usermappings_png;
}
#define usermappings_png_bmp usermappings_png_bmp()

static wxIcon *usermappings_png_ico()
{
	static wxIcon *ico_usermappings_png;
	if (!ico_usermappings_png || !ico_usermappings_png->IsOk())
	{
		ico_usermappings_png = new wxIcon();
		ico_usermappings_png->CopyFromBitmap(*usermappings_png_bmp);
	}
	return ico_usermappings_png;
}
#define usermappings_png_ico usermappings_png_ico()

#endif // USERMAPPINGS_PNG_H
