#ifndef DOMAINS_PNG_H
#define DOMAINS_PNG_H

static const unsigned char domains_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x00, 0x7e, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0xe1, 0x6b, 0x6b, 0xc8, 
0x40, 0x40, 0xc2, 0x29, 0x29, 0xb9, 0x31, 0x31, 
0xe1, 0xa2, 0xa9, 0xbe, 0x2c, 0x2c, 0xce, 0x29, 
0x29, 0xe3, 0xba, 0xc2, 0xe0, 0xb6, 0xbd, 0xc4, 
0x38, 0x39, 0xc2, 0x2d, 0x2d, 0xe0, 0xb9, 0xc1, 
0xc5, 0x3d, 0x3e, 0xcc, 0x22, 0x22, 0xdc, 0x54, 
0x54, 0xc1, 0x2a, 0x2a, 0x6f, 0x6f, 0x6f, 0xe1, 
0xbc, 0xc4, 0xe1, 0xa4, 0xab, 0xd6, 0x4f, 0x52, 
0xe3, 0xbd, 0xc5, 0xe5, 0xe2, 0xec, 0xdf, 0xbb, 
0xc4, 0xc4, 0x2e, 0x2e, 0xe1, 0xe8, 0xf4, 0xe5, 
0xe6, 0xf1, 0xe4, 0xe9, 0xf5, 0xe1, 0xe4, 0xf0, 
0xda, 0xb9, 0xc3, 0xde, 0xe7, 0xf4, 0xdb, 0xe2, 
0xef, 0xd6, 0xb7, 0xc3, 0xdb, 0xe5, 0xf3, 0xe6, 
0xea, 0xf5, 0xd8, 0xe4, 0xf3, 0xd5, 0xe3, 0xf3, 
0x81, 0x60, 0x2b, 0xd2, 0xe2, 0xf2, 0xcf, 0xe1, 
0xf2, 0xcd, 0xe0, 0xf1, 0xcb, 0xdf, 0xf1, 0xe1, 
0x87, 0x56, 0x6a, 0x00, 0x00, 0x00, 0x01, 0x74, 
0x52, 0x4e, 0x53, 0x00, 0x40, 0xe6, 0xd8, 0x66, 
0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 
0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 
0x00, 0x46, 0xc9, 0x6b, 0x3e, 0x00, 0x00, 0x00, 
0x87, 0x49, 0x44, 0x41, 0x54, 0x18, 0xd3, 0x55, 
0x8e, 0xdb, 0x16, 0x82, 0x20, 0x14, 0x05, 0x49, 
0x4f, 0x17, 0x2b, 0xb3, 0x53, 0x5a, 0x91, 0x45, 
0x91, 0xa2, 0xf6, 0xff, 0x3f, 0xd8, 0xe6, 0x04, 
0xab, 0xd8, 0x6f, 0x33, 0x6b, 0xb8, 0x28, 0xe5, 
0x37, 0x53, 0xe9, 0xb2, 0x3c, 0x4b, 0x99, 0xe6, 
0x8b, 0x65, 0xc2, 0xab, 0x62, 0x9d, 0x6f, 0xfe, 
0x79, 0x5b, 0xa2, 0xd9, 0x05, 0xae, 0x84, 0x7d, 
0xb3, 0x0f, 0x86, 0x0f, 0xa5, 0xb8, 0x23, 0x85, 
0x53, 0x5c, 0x0b, 0x37, 0xa7, 0x33, 0x5d, 0xbe, 
0x42, 0xfb, 0xa6, 0xb9, 0xb6, 0xb7, 0x3b, 0xc9, 
0xeb, 0x6c, 0xd0, 0x80, 0xb5, 0x79, 0x3c, 0xa9, 
0xf2, 0xc2, 0xa2, 0x79, 0x81, 0x6d, 0xd7, 0xb3, 
0x14, 0x8c, 0xa6, 0xd5, 0xce, 0xb9, 0x7e, 0xe0, 
0x70, 0x2d, 0x1a, 0x03, 0x31, 0x8c, 0x51, 0xa0, 
0xb1, 0x10, 0xe3, 0xc4, 0xf1, 0xb7, 0x6c, 0x3b, 
0x88, 0xe9, 0xfd, 0x13, 0x71, 0x4a, 0x7d, 0x00, 
0xed, 0x6a, 0x0b, 0x34, 0xc8, 0xd1, 0x6e, 0xaf, 
0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 
0x64, 0x61, 0x74, 0x65, 0x3a, 0x63, 0x72, 0x65, 
0x61, 0x74, 0x65, 0x00, 0x32, 0x30, 0x31, 0x30, 
0x2d, 0x31, 0x32, 0x2d, 0x30, 0x31, 0x54, 0x32, 
0x30, 0x3a, 0x34, 0x33, 0x3a, 0x34, 0x34, 0x2b, 
0x30, 0x35, 0x3a, 0x30, 0x30, 0x38, 0x99, 0x25, 
0x1e, 0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 
0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x6d, 0x6f, 
0x64, 0x69, 0x66, 0x79, 0x00, 0x32, 0x30, 0x31, 
0x30, 0x2d, 0x30, 0x39, 0x2d, 0x30, 0x31, 0x54, 
0x32, 0x33, 0x3a, 0x34, 0x34, 0x3a, 0x30, 0x36, 
0x2b, 0x30, 0x35, 0x3a, 0x30, 0x30, 0xca, 0x97, 
0x55, 0xac, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 
0x4e, 0x44, 0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *domains_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_domains_png = new wxImage();
	if (!img_domains_png || !img_domains_png->IsOk())
	{
		wxMemoryInputStream img_domains_pngIS(domains_png_data, sizeof(domains_png_data));
		img_domains_png->LoadFile(img_domains_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_domains_png;
}
#define domains_png_img domains_png_img()

static wxBitmap *domains_png_bmp()
{
	static wxBitmap *bmp_domains_png;
	if (!bmp_domains_png || !bmp_domains_png->IsOk())
		bmp_domains_png = new wxBitmap(*domains_png_img);
	return bmp_domains_png;
}
#define domains_png_bmp domains_png_bmp()

static wxIcon *domains_png_ico()
{
	static wxIcon *ico_domains_png;
	if (!ico_domains_png || !ico_domains_png->IsOk())
	{
		ico_domains_png = new wxIcon();
		ico_domains_png->CopyFromBitmap(*domains_png_bmp);
	}
	return ico_domains_png;
}
#define domains_png_ico domains_png_ico()

#endif // DOMAINS_PNG_H
