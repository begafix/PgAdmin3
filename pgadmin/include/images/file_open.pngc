#ifndef FILE_OPEN_PNG_H
#define FILE_OPEN_PNG_H

static const unsigned char file_open_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x01, 0x56, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0x9d, 0xa9, 0xcf, 0xb4, 
0xba, 0xd0, 0x67, 0x80, 0xcf, 0x43, 0x64, 0xce, 
0x49, 0x68, 0xce, 0x63, 0x7c, 0xce, 0x89, 0x9a, 
0xcf, 0x8b, 0x9b, 0xcf, 0xca, 0xcc, 0xd0, 0x94, 
0xa2, 0xcf, 0x66, 0x7f, 0xcf, 0xc0, 0xb0, 0x62, 
0xb5, 0x99, 0x15, 0xfa, 0xf6, 0xa1, 0xf6, 0xef, 
0x7f, 0xf5, 0xed, 0x7e, 0xf7, 0xf1, 0x94, 0xf0, 
0xe4, 0x51, 0xef, 0xe2, 0x4f, 0xef, 0xe3, 0x59, 
0xf4, 0xec, 0x86, 0xed, 0xe0, 0x4e, 0xeb, 0xde, 
0x4c, 0xeb, 0xde, 0x57, 0xee, 0xe3, 0x6d, 0xef, 
0xe4, 0x77, 0xed, 0xe2, 0x76, 0xeb, 0xe0, 0x75, 
0xea, 0xde, 0x73, 0xf2, 0xea, 0x97, 0xf5, 0xec, 
0x7d, 0xca, 0xb4, 0x2b, 0xc0, 0xaf, 0x60, 0xcb, 
0xc6, 0xad, 0xf3, 0xeb, 0x7c, 0xd4, 0xc1, 0x35, 
0xd1, 0xbf, 0x5d, 0xf6, 0xf4, 0xb6, 0xf4, 0xf1, 
0xaa, 0xf4, 0xf1, 0xa7, 0xf5, 0xf1, 0xa3, 0xf5, 
0xf1, 0x9f, 0xf5, 0xf1, 0x9a, 0xf5, 0xf1, 0x96, 
0xf5, 0xf1, 0x91, 0xf8, 0xf3, 0x9d, 0xdf, 0xd2, 
0x74, 0xf2, 0xea, 0x7a, 0xe9, 0xdb, 0x4b, 0xbf, 
0xa5, 0x1f, 0xeb, 0xe4, 0x9a, 0xef, 0xec, 0x93, 
0xee, 0xea, 0x88, 0xef, 0xea, 0x83, 0xef, 0xea, 
0x7e, 0xef, 0xe9, 0x78, 0xf0, 0xe9, 0x72, 0xf0, 
0xe9, 0x6c, 0xf1, 0xe8, 0x68, 0xf5, 0xef, 0x84, 
0xc2, 0xab, 0x32, 0xf1, 0xe8, 0x7a, 0xdd, 0xcb, 
0x3e, 0xc4, 0xad, 0x3b, 0xf3, 0xf1, 0xa6, 0xee, 
0xea, 0x8a, 0xef, 0xea, 0x84, 0xef, 0xea, 0x7f, 
0xef, 0xe9, 0x79, 0xf0, 0xe9, 0x73, 0xf0, 0xe9, 
0x6d, 0xf1, 0xe8, 0x67, 0xf2, 0xea, 0x6c, 0xea, 
0xe1, 0x7f, 0xbb, 0xa5, 0x3d, 0xf0, 0xe6, 0x78, 
0xc7, 0xb0, 0x28, 0xdf, 0xd4, 0x81, 0xf0, 0xed, 
0x96, 0xef, 0xea, 0x85, 0xef, 0xea, 0x80, 0xef, 
0xe9, 0x7a, 0xf0, 0xe9, 0x74, 0xf0, 0xe9, 0x6e, 
0xf1, 0xe8, 0x62, 0xf4, 0xed, 0x77, 0xcf, 0xbd, 
0x4f, 0xc6, 0xbb, 0x8a, 0xeb, 0xdf, 0x70, 0xba, 
0xa0, 0x22, 0xf2, 0xef, 0xa6, 0xf0, 0xeb, 0x8a, 
0xef, 0xe9, 0x7b, 0xf0, 0xe9, 0x75, 0xf1, 0xe8, 
0x63, 0xf2, 0xe9, 0x63, 0xf2, 0xeb, 0x83, 0xb7, 
0x9c, 0x1a, 0xcf, 0xce, 0xc9, 0xd8, 0xc8, 0x5f, 
0xd4, 0xc4, 0x65, 0xf8, 0xf5, 0xb6, 0xf5, 0xf1, 
0xa2, 0xf5, 0xf1, 0x9e, 0xf5, 0xf1, 0x94, 0xf5, 
0xf0, 0x90, 0xf6, 0xf0, 0x8b, 0xf6, 0xf0, 0x88, 
0xf8, 0xf1, 0x8f, 0xdc, 0xce, 0x6a, 0xc1, 0xb2, 
0x69, 0xba, 0xa2, 0x35, 0xcc, 0xc8, 0xb6, 0x9a, 
0x70, 0x84, 0x4f, 0x00, 0x00, 0x00, 0x01, 0x74, 
0x52, 0x4e, 0x53, 0x00, 0x40, 0xe6, 0xd8, 0x66, 
0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 
0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 
0x00, 0x46, 0xc9, 0x6b, 0x3e, 0x00, 0x00, 0x00, 
0xc3, 0x49, 0x44, 0x41, 0x54, 0x18, 0xd3, 0x63, 
0x60, 0x80, 0x01, 0x46, 0x46, 0x26, 0x06, 0x64, 
0xc0, 0xcc, 0xc2, 0xca, 0xc6, 0xce, 0xc0, 0x02, 
0xe7, 0x73, 0x30, 0x33, 0x70, 0x72, 0x71, 0xb3, 
0xb0, 0xa0, 0x28, 0x62, 0x60, 0x01, 0x09, 0xf0, 
0xf0, 0x02, 0x01, 0x0f, 0x94, 0xcf, 0x0a, 0x14, 
0xe0, 0xe5, 0xe3, 0x17, 0x10, 0x84, 0x8a, 0x80, 
0x01, 0x2f, 0xbf, 0x90, 0xb0, 0x88, 0x28, 0x2f, 
0x2f, 0x5c, 0x21, 0xaf, 0x80, 0xb0, 0x98, 0xb8, 
0x84, 0xa4, 0x94, 0xb4, 0x8c, 0xac, 0x1c, 0x2f, 
0x58, 0x40, 0x5e, 0x4c, 0x5c, 0x81, 0x17, 0x06, 
0x14, 0x95, 0x18, 0x78, 0x95, 0xc5, 0x55, 0x54, 
0xd5, 0xd4, 0x35, 0x34, 0xb5, 0xb4, 0x75, 0x74, 
0xf5, 0xf4, 0x15, 0x19, 0x78, 0x0d, 0x0c, 0x8d, 
0x8c, 0x4d, 0x4c, 0xcd, 0xcc, 0x2d, 0x2c, 0xad, 
0xac, 0x6d, 0x6c, 0x81, 0x2a, 0xec, 0xec, 0x1d, 
0x1c, 0x9d, 0x9c, 0x5d, 0x5c, 0xdd, 0xdc, 0x3d, 
0x3c, 0xbd, 0xbc, 0x81, 0x66, 0xf8, 0xf8, 0xfa, 
0xf9, 0x07, 0x04, 0x06, 0x05, 0x87, 0x78, 0x84, 
0x86, 0x85, 0x47, 0x00, 0x05, 0x22, 0xa3, 0xa2, 
0x63, 0x02, 0x63, 0xe3, 0x42, 0xac, 0xe3, 0x13, 
0x12, 0x93, 0x92, 0x81, 0x02, 0x29, 0xa9, 0x69, 
0xe9, 0x19, 0xda, 0x99, 0x59, 0xd9, 0x39, 0xb9, 
0x79, 0xf9, 0x0c, 0x50, 0xa7, 0x43, 0x41, 0x41, 
0x21, 0x03, 0x03, 0x00, 0x5a, 0x33, 0x1d, 0xa8, 
0x77, 0xb7, 0xf6, 0x35, 0x00, 0x00, 0x00, 0x25, 
0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 
0x3a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x00, 
0x32, 0x30, 0x31, 0x30, 0x2d, 0x31, 0x32, 0x2d, 
0x30, 0x31, 0x54, 0x32, 0x30, 0x3a, 0x34, 0x33, 
0x3a, 0x34, 0x35, 0x2b, 0x30, 0x35, 0x3a, 0x30, 
0x30, 0x9e, 0xee, 0x2e, 0xaa, 0x00, 0x00, 0x00, 
0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 
0x65, 0x3a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 
0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 0x30, 0x39, 
0x2d, 0x30, 0x31, 0x54, 0x32, 0x33, 0x3a, 0x34, 
0x34, 0x3a, 0x30, 0x36, 0x2b, 0x30, 0x35, 0x3a, 
0x30, 0x30, 0xca, 0x97, 0x55, 0xac, 0x00, 0x00, 
0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 
0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *file_open_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_file_open_png = new wxImage();
	if (!img_file_open_png || !img_file_open_png->IsOk())
	{
		wxMemoryInputStream img_file_open_pngIS(file_open_png_data, sizeof(file_open_png_data));
		img_file_open_png->LoadFile(img_file_open_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_file_open_png;
}
#define file_open_png_img file_open_png_img()

static wxBitmap *file_open_png_bmp()
{
	static wxBitmap *bmp_file_open_png;
	if (!bmp_file_open_png || !bmp_file_open_png->IsOk())
		bmp_file_open_png = new wxBitmap(*file_open_png_img);
	return bmp_file_open_png;
}
#define file_open_png_bmp file_open_png_bmp()

static wxIcon *file_open_png_ico()
{
	static wxIcon *ico_file_open_png;
	if (!ico_file_open_png || !ico_file_open_png->IsOk())
	{
		ico_file_open_png = new wxIcon();
		ico_file_open_png->CopyFromBitmap(*file_open_png_bmp);
	}
	return ico_file_open_png;
}
#define file_open_png_ico file_open_png_ico()

#endif // FILE_OPEN_PNG_H
