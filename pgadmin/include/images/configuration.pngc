#ifndef CONFIGURATION_PNG_H
#define CONFIGURATION_PNG_H

static const unsigned char configuration_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x98, 0xa0, 
0xbd, 0x00, 0x00, 0x00, 0x02, 0x74, 0x52, 0x4e, 
0x53, 0x00, 0x00, 0x76, 0x93, 0xcd, 0x38, 0x00, 
0x00, 0x00, 0x02, 0x62, 0x4b, 0x47, 0x44, 0x00, 
0x00, 0xaa, 0x8d, 0x23, 0x32, 0x00, 0x00, 0x00, 
0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x00, 
0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 0x46, 0xc9, 
0x6b, 0x3e, 0x00, 0x00, 0x00, 0x8e, 0x49, 0x44, 
0x41, 0x54, 0x18, 0xd3, 0x63, 0x60, 0xc0, 0x05, 
0x96, 0xd7, 0x25, 0x4e, 0x46, 0xe6, 0x4f, 0x9c, 
0x79, 0xf6, 0x67, 0xe3, 0x4e, 0x24, 0xf9, 0x99, 
0x4f, 0xff, 0xf6, 0x4f, 0x66, 0x40, 0x88, 0xd4, 
0x9d, 0xfb, 0xff, 0x37, 0xfe, 0xf2, 0xe4, 0x46, 
0xb8, 0xae, 0xc4, 0x9f, 0xbf, 0xbe, 0xf5, 0xc7, 
0xf7, 0xff, 0x4c, 0x84, 0xf2, 0xfb, 0x62, 0x7e, 
0xbf, 0x7b, 0x7c, 0xef, 0xe6, 0xf9, 0x93, 0x75, 
0x70, 0xfe, 0xdb, 0x1b, 0xa7, 0x77, 0x6e, 0x38, 
0x3a, 0x73, 0x39, 0x94, 0xff, 0xeb, 0xc5, 0xb5, 
0xd3, 0xe7, 0x2e, 0x1c, 0x98, 0x39, 0x11, 0xca, 
0xff, 0xf9, 0xe4, 0xc2, 0xd1, 0x7b, 0x31, 0x89, 
0x75, 0x10, 0xf9, 0x35, 0x31, 0x7f, 0x9e, 0x9d, 
0xdd, 0x7f, 0x27, 0xa6, 0x0f, 0x66, 0x41, 0xd5, 
0xf5, 0x95, 0x0b, 0x4e, 0xdc, 0x44, 0xf0, 0x41, 
0x02, 0x4b, 0xde, 0x22, 0xf1, 0x19, 0xd6, 0x54, 
0x5d, 0xbf, 0x8e, 0xcc, 0x07, 0x89, 0x54, 0xad, 
0x61, 0xc0, 0x0d, 0x00, 0xc6, 0xd2, 0x4b, 0xda, 
0x00, 0x56, 0x73, 0xbe, 0x00, 0x00, 0x00, 0x25, 
0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 
0x3a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x00, 
0x32, 0x30, 0x31, 0x30, 0x2d, 0x31, 0x32, 0x2d, 
0x30, 0x31, 0x54, 0x32, 0x30, 0x3a, 0x34, 0x33, 
0x3a, 0x34, 0x34, 0x2b, 0x30, 0x35, 0x3a, 0x30, 
0x30, 0x38, 0x99, 0x25, 0x1e, 0x00, 0x00, 0x00, 
0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 
0x65, 0x3a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 
0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 0x30, 0x39, 
0x2d, 0x30, 0x31, 0x54, 0x32, 0x33, 0x3a, 0x34, 
0x34, 0x3a, 0x30, 0x36, 0x2b, 0x30, 0x35, 0x3a, 
0x30, 0x30, 0xca, 0x97, 0x55, 0xac, 0x00, 0x00, 
0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 
0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *configuration_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_configuration_png = new wxImage();
	if (!img_configuration_png || !img_configuration_png->IsOk())
	{
		wxMemoryInputStream img_configuration_pngIS(configuration_png_data, sizeof(configuration_png_data));
		img_configuration_png->LoadFile(img_configuration_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_configuration_png;
}
#define configuration_png_img configuration_png_img()

static wxBitmap *configuration_png_bmp()
{
	static wxBitmap *bmp_configuration_png;
	if (!bmp_configuration_png || !bmp_configuration_png->IsOk())
		bmp_configuration_png = new wxBitmap(*configuration_png_img);
	return bmp_configuration_png;
}
#define configuration_png_bmp configuration_png_bmp()

static wxIcon *configuration_png_ico()
{
	static wxIcon *ico_configuration_png;
	if (!ico_configuration_png || !ico_configuration_png->IsOk())
	{
		ico_configuration_png = new wxIcon();
		ico_configuration_png->CopyFromBitmap(*configuration_png_bmp);
	}
	return ico_configuration_png;
}
#define configuration_png_ico configuration_png_ico()

#endif // CONFIGURATION_PNG_H
