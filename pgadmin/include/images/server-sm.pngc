#ifndef SERVER_SM_PNG_H
#define SERVER_SM_PNG_H

static const unsigned char server_sm_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x01, 0x05, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0x83, 0x6c, 0x7c, 0x9a, 
0x86, 0x94, 0xd2, 0xc4, 0xcd, 0xe3, 0xd6, 0xdf, 
0xd8, 0xc8, 0xd4, 0xcd, 0xba, 0xc8, 0xc3, 0xac, 
0xbd, 0xa2, 0x8a, 0x9b, 0xab, 0x9a, 0xa6, 0xdd, 
0xd2, 0xd9, 0xe2, 0xd6, 0xde, 0xd7, 0xc8, 0xd3, 
0xcd, 0xba, 0xc7, 0xc3, 0xad, 0xbc, 0xae, 0x96, 
0xa8, 0x96, 0x81, 0x90, 0xae, 0x9d, 0xa8, 0xe6, 
0xde, 0xe3, 0xec, 0xe5, 0xea, 0xe5, 0xdb, 0xe1, 
0xe1, 0xd7, 0xde, 0xda, 0xcd, 0xd7, 0xcd, 0xbd, 
0xc8, 0x94, 0x7f, 0x8d, 0xab, 0x9a, 0xa5, 0xe6, 
0xe2, 0xe4, 0xf6, 0xf5, 0xf6, 0xe7, 0xdd, 0xe0, 
0xd5, 0xc5, 0xcb, 0xcc, 0xb8, 0xbf, 0xce, 0xbb, 
0xc3, 0x96, 0x81, 0x8e, 0xe5, 0xe1, 0xe3, 0xf5, 
0xf4, 0xf5, 0xde, 0xd1, 0xd5, 0xbf, 0xa5, 0xaf, 
0xb2, 0x91, 0x9e, 0xbc, 0xa2, 0xac, 0x93, 0x7c, 
0x8a, 0xe6, 0xe1, 0xe4, 0xf5, 0xf4, 0xf4, 0xdf, 
0xd2, 0xd6, 0xbf, 0xa5, 0xae, 0xb1, 0x91, 0x9d, 
0xbd, 0xa3, 0xad, 0x93, 0x7c, 0x8b, 0xe5, 0xe1, 
0xe4, 0xbf, 0xa4, 0xaf, 0xbd, 0xa2, 0xac, 0xdf, 
0xdb, 0xdd, 0xf4, 0xf2, 0xf3, 0xdf, 0xd1, 0xd5, 
0xb9, 0x9f, 0xa8, 0xb2, 0x92, 0x9e, 0xb8, 0x9e, 
0xa9, 0x91, 0x7a, 0x89, 0xd4, 0xd0, 0xd2, 0xe4, 
0xe3, 0xe4, 0xac, 0x93, 0x9d, 0xab, 0x8c, 0x98, 
0xb0, 0x98, 0xa2, 0x8e, 0x77, 0x85, 0xa1, 0x90, 
0x9b, 0xe0, 0xdb, 0xde, 0xcb, 0xbf, 0xc4, 0xb6, 
0xa2, 0xad, 0x81, 0x8c, 0x9a, 0x93, 0xa2, 0xaf, 
0x8b, 0x7c, 0x8b, 0xa5, 0x94, 0x9f, 0xcf, 0xcb, 
0xcd, 0xf1, 0xf0, 0xf1, 0xd2, 0xc6, 0xcb, 0x9c, 
0x97, 0xa1, 0x4e, 0xad, 0xb4, 0x4c, 0xb3, 0xb8, 
0x7b, 0x7a, 0x8a, 0xe1, 0xdd, 0xdf, 0xd6, 0xd5, 
0xd5, 0xdf, 0xd1, 0xd6, 0xa9, 0x9e, 0xa9, 0x5d, 
0x96, 0xa4, 0x6d, 0xab, 0xb7, 0x82, 0x7b, 0x8b, 
0x83, 0x6d, 0x7c, 0x82, 0x6c, 0x7c, 0x02, 0xa1, 
0xb1, 0xa8, 0x00, 0x00, 0x00, 0x01, 0x74, 0x52, 
0x4e, 0x53, 0x00, 0x40, 0xe6, 0xd8, 0x66, 0x00, 
0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 
0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 
0x46, 0xc9, 0x6b, 0x3e, 0x00, 0x00, 0x00, 0x88, 
0x49, 0x44, 0x41, 0x54, 0x18, 0xd3, 0x63, 0x60, 
0xc0, 0x06, 0x18, 0xc1, 0x00, 0x49, 0x80, 0x89, 
0x99, 0x85, 0x95, 0x8d, 0x9d, 0x03, 0x21, 0xc0, 
0xc9, 0xc5, 0xcd, 0xc3, 0xcb, 0xc7, 0x2f, 0x00, 
0x17, 0x10, 0x14, 0x12, 0x16, 0x11, 0x15, 0x13, 
0x97, 0x80, 0x0b, 0x48, 0x4a, 0x49, 0xcb, 0xc8, 
0xca, 0xc9, 0x2b, 0x20, 0x04, 0x14, 0x95, 0x94, 
0x55, 0x54, 0xd5, 0xd4, 0x11, 0x02, 0x1a, 0x9a, 
0x5a, 0xda, 0x3a, 0xba, 0x7a, 0x08, 0x01, 0x7d, 
0x25, 0x65, 0x03, 0x1d, 0x43, 0x24, 0x15, 0x46, 
0xc6, 0x26, 0xa6, 0x66, 0xe6, 0x16, 0x08, 0x01, 
0x4b, 0x2b, 0x65, 0x6b, 0x1b, 0x5b, 0x3b, 0xb8, 
0x80, 0xbd, 0x83, 0x95, 0xa3, 0x93, 0xb3, 0x8b, 
0x2b, 0x5c, 0xc0, 0xcd, 0xdd, 0xc3, 0xd3, 0xcb, 
0xdb, 0xc7, 0x17, 0xa1, 0xc5, 0xcf, 0x3f, 0x20, 
0x30, 0x28, 0x38, 0x04, 0xe1, 0xb9, 0x50, 0xa0, 
0xdf, 0xc2, 0xc2, 0x90, 0xbd, 0x87, 0x00, 0x00, 
0x7b, 0xdb, 0x10, 0x89, 0x63, 0xc0, 0x91, 0x38, 
0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 
0x64, 0x61, 0x74, 0x65, 0x3a, 0x63, 0x72, 0x65, 
0x61, 0x74, 0x65, 0x00, 0x32, 0x30, 0x31, 0x30, 
0x2d, 0x31, 0x32, 0x2d, 0x30, 0x31, 0x54, 0x32, 
0x30, 0x3a, 0x34, 0x33, 0x3a, 0x34, 0x35, 0x2b, 
0x30, 0x35, 0x3a, 0x30, 0x30, 0x9e, 0xee, 0x2e, 
0xaa, 0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 
0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x6d, 0x6f, 
0x64, 0x69, 0x66, 0x79, 0x00, 0x32, 0x30, 0x31, 
0x30, 0x2d, 0x30, 0x39, 0x2d, 0x30, 0x31, 0x54, 
0x32, 0x33, 0x3a, 0x34, 0x34, 0x3a, 0x30, 0x36, 
0x2b, 0x30, 0x35, 0x3a, 0x30, 0x30, 0xca, 0x97, 
0x55, 0xac, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 
0x4e, 0x44, 0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *server_sm_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_server_sm_png = new wxImage();
	if (!img_server_sm_png || !img_server_sm_png->IsOk())
	{
		wxMemoryInputStream img_server_sm_pngIS(server_sm_png_data, sizeof(server_sm_png_data));
		img_server_sm_png->LoadFile(img_server_sm_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_server_sm_png;
}
#define server_sm_png_img server_sm_png_img()

static wxBitmap *server_sm_png_bmp()
{
	static wxBitmap *bmp_server_sm_png;
	if (!bmp_server_sm_png || !bmp_server_sm_png->IsOk())
		bmp_server_sm_png = new wxBitmap(*server_sm_png_img);
	return bmp_server_sm_png;
}
#define server_sm_png_bmp server_sm_png_bmp()

static wxIcon *server_sm_png_ico()
{
	static wxIcon *ico_server_sm_png;
	if (!ico_server_sm_png || !ico_server_sm_png->IsOk())
	{
		ico_server_sm_png = new wxIcon();
		ico_server_sm_png->CopyFromBitmap(*server_sm_png_bmp);
	}
	return ico_server_sm_png;
}
#define server_sm_png_ico server_sm_png_ico()

#endif // SERVER_SM_PNG_H
