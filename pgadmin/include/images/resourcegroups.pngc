#ifndef RESOURCEGROUPS_PNG_H
#define RESOURCEGROUPS_PNG_H

static const unsigned char resourcegroups_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x00, 0x04, 0x67, 0x41, 0x4d, 
0x41, 0x00, 0x00, 0xb1, 0x8f, 0x0b, 0xfc, 0x61, 
0x05, 0x00, 0x00, 0x00, 0x20, 0x63, 0x48, 0x52, 
0x4d, 0x00, 0x00, 0x7a, 0x25, 0x00, 0x00, 0x80, 
0x83, 0x00, 0x00, 0xf9, 0xff, 0x00, 0x00, 0x80, 
0xe9, 0x00, 0x00, 0x75, 0x30, 0x00, 0x00, 0xea, 
0x60, 0x00, 0x00, 0x3a, 0x98, 0x00, 0x00, 0x17, 
0x6f, 0x92, 0x5f, 0xc5, 0x46, 0x00, 0x00, 0x02, 
0x4c, 0x50, 0x4c, 0x54, 0x45, 0x3f, 0x95, 0xdc, 
0xff, 0xff, 0xff, 0x43, 0x95, 0xc2, 0x52, 0x98, 
0x7d, 0x79, 0x9d, 0x0d, 0x49, 0x96, 0xa6, 0x17, 
0x59, 0x6a, 0x14, 0x59, 0x75, 0x3a, 0x58, 0x09, 
0x31, 0x58, 0x1d, 0x0e, 0x55, 0x82, 0x30, 0x55, 
0x1d, 0x9b, 0xa6, 0x6a, 0xb6, 0xbf, 0x94, 0x44, 
0x9a, 0xfc, 0x57, 0xa5, 0xef, 0x57, 0xa4, 0xf6, 
0x52, 0xa3, 0xff, 0x3b, 0x94, 0xff, 0x2b, 0x88, 
0xe9, 0x37, 0x92, 0xfc, 0x56, 0xa4, 0xff, 0x56, 
0xa4, 0xff, 0x43, 0x95, 0xc4, 0x51, 0xa2, 0xff, 
0x31, 0x88, 0xd6, 0x35, 0x91, 0xf9, 0x4b, 0x96, 
0x9a, 0x3e, 0x96, 0xff, 0x4e, 0x98, 0x8d, 0x51, 
0xa2, 0xff, 0x4b, 0x96, 0x9d, 0x56, 0xa4, 0xfc, 
0x79, 0x9d, 0x0d, 0x77, 0x9d, 0x11, 0x57, 0xa5, 
0xed, 0x35, 0x8d, 0xc6, 0x34, 0x91, 0xff, 0x45, 
0x9a, 0xef, 0x3d, 0x94, 0xea, 0x26, 0x7e, 0xc0, 
0x4e, 0x9f, 0xfc, 0x56, 0xa4, 0xf9, 0x45, 0x9a, 
0xf6, 0x41, 0x98, 0xe1, 0x37, 0x91, 0xed, 0x25, 
0x7f, 0xd3, 0x2a, 0x87, 0xe5, 0x54, 0xa2, 0xca, 
0x45, 0x98, 0xca, 0x45, 0x9d, 0xfc, 0x3e, 0x94, 
0xd1, 0x3a, 0x4e, 0x00, 0x3b, 0x92, 0xb7, 0x35, 
0x8e, 0xc7, 0x31, 0x8b, 0xd4, 0x2c, 0x87, 0xd7, 
0x23, 0x7e, 0xde, 0x44, 0x99, 0xea, 0x3a, 0x93, 
0xed, 0x3f, 0x94, 0xc4, 0x29, 0x80, 0xba, 0x32, 
0x8b, 0xe7, 0x2b, 0x89, 0xf1, 0xb0, 0xd4, 0xfc, 
0xbf, 0xde, 0xf9, 0x8e, 0xc3, 0xff, 0x3a, 0x93, 
0xed, 0xaf, 0x66, 0x04, 0xdf, 0x80, 0x03, 0xc3, 
0x70, 0x09, 0x26, 0x83, 0xe5, 0xbf, 0xde, 0xff, 
0x3d, 0x95, 0xff, 0x2b, 0x8b, 0xfc, 0x1a, 0x71, 
0xc7, 0x8d, 0x58, 0x02, 0xaf, 0x6b, 0x03, 0xa2, 
0x64, 0x05, 0x21, 0x78, 0xce, 0x65, 0xae, 0xff, 
0x27, 0x85, 0xef, 0x40, 0x98, 0xff, 0x53, 0xa3, 
0xf9, 0x4e, 0x9f, 0xe1, 0x45, 0x9a, 0xe5, 0x34, 
0x8f, 0xe1, 0x30, 0x8a, 0xd6, 0x31, 0x89, 0xde, 
0x29, 0x88, 0xf6, 0x18, 0x6f, 0xca, 0x51, 0xa2, 
0xfc, 0xb0, 0xd4, 0xf6, 0xc0, 0xdf, 0xea, 0x8e, 
0xc3, 0xf9, 0x3b, 0x94, 0xdf, 0xb2, 0x5e, 0x16, 
0xd7, 0x7d, 0x02, 0xbe, 0x71, 0x07, 0x26, 0x83, 
0xea, 0x67, 0xaf, 0xfc, 0x2f, 0x8d, 0xf1, 0x57, 
0xa5, 0xff, 0xbf, 0xde, 0xfc, 0xd4, 0xea, 0xf3, 
0x86, 0xbf, 0xfc, 0x2c, 0x8a, 0xea, 0xb5, 0x6a, 
0x06, 0xff, 0x8e, 0x1c, 0xda, 0x7d, 0x0c, 0x1f, 
0x78, 0xd7, 0x99, 0xc8, 0xff, 0x3a, 0x94, 0xf9, 
0x56, 0xa4, 0xff, 0x7e, 0xba, 0xf6, 0x77, 0xb7, 
0xe5, 0x1c, 0x74, 0xd0, 0x18, 0x6e, 0xc3, 0x7f, 
0x52, 0x05, 0x80, 0x53, 0x07, 0x86, 0x54, 0x04, 
0x20, 0x74, 0xbc, 0x96, 0xc7, 0xfc, 0x38, 0x92, 
0xfc, 0x41, 0x99, 0xfc, 0x32, 0x8f, 0xf6, 0x29, 
0x83, 0xd6, 0x16, 0x6d, 0xc6, 0x30, 0x8e, 0xfc, 
0x3d, 0x94, 0xef, 0x43, 0x99, 0xe7, 0x3e, 0x94, 
0xe5, 0x2e, 0x8a, 0xdc, 0x2f, 0x8a, 0xd7, 0x8a, 
0xc2, 0xf3, 0x6b, 0xb1, 0xe9, 0x29, 0x88, 0xf3, 
0xb0, 0xd4, 0xff, 0xbf, 0xde, 0xf6, 0x8e, 0xc4, 
0xf6, 0x39, 0x93, 0xf3, 0xae, 0x63, 0x11, 0xd0, 
0x78, 0x18, 0xb9, 0x6a, 0x2e, 0x27, 0x83, 0xe1, 
0x7f, 0xba, 0xf1, 0x2b, 0x8b, 0xff, 0x4d, 0xa1, 
0xf6, 0xbe, 0xdc, 0xff, 0xd4, 0xe9, 0xf9, 0x85, 
0xbe, 0xf3, 0x2b, 0x8a, 0xf6, 0xb4, 0x6b, 0x02, 
0xff, 0x87, 0x31, 0xd4, 0x79, 0x1c, 0x20, 0x78, 
0xd3, 0xb1, 0xd6, 0xf6, 0x84, 0xbc, 0xef, 0x2b, 
0x8a, 0xf3, 0x47, 0x9d, 0xfc, 0x7a, 0xb9, 0xff, 
0x7e, 0xba, 0xf3, 0x62, 0xab, 0xf3, 0x28, 0x85, 
0xe9, 0xa9, 0x5e, 0x0b, 0xaf, 0x62, 0x0d, 0xa9, 
0x5b, 0x13, 0x1f, 0x75, 0xc6, 0x37, 0x92, 0xfc, 
0x25, 0x82, 0xe9, 0x2f, 0x8e, 0xff, 0x3e, 0x92, 
0xde, 0x2e, 0x84, 0xcb, 0x2e, 0x85, 0xc4, 0x3e, 
0x98, 0xfc, 0x86, 0xbf, 0xff, 0x71, 0xb4, 0xfc, 
0x3e, 0x96, 0xfc, 0x75, 0xb6, 0xfc, 0x9a, 0xca, 
0xf6, 0x98, 0xc8, 0xea, 0x42, 0x9b, 0xfc, 0xd4, 
0xe9, 0xff, 0x86, 0xbf, 0xf9, 0x2b, 0x89, 0xed, 
0x8e, 0xc3, 0xe3, 0xd4, 0xe9, 0xf3, 0xc0, 0xe1, 
0xe3, 0xaf, 0xd6, 0xf9, 0xc2, 0xde, 0xfc, 0x83, 
0xbe, 0xef, 0x26, 0x82, 0xdf, 0x8d, 0xc3, 0xd7, 
0xc2, 0xde, 0xf3, 0xb6, 0xda, 0xdc, 0xff, 0xff, 
0xff, 0x2f, 0x3e, 0xf7, 0x2e, 0x00, 0x00, 0x00, 
0x3e, 0x74, 0x52, 0x4e, 0x53, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0xe2, 0xf0, 0xf0, 0xf0, 0xfd, 
0xfe, 0xfe, 0xf4, 0xf0, 0x0d, 0xf0, 0xfd, 0xfb, 
0x0c, 0xf0, 0x12, 0xf3, 0x05, 0xf0, 0x03, 0x01, 
0xf4, 0xf8, 0xf9, 0xe2, 0xf0, 0xfd, 0xfe, 0xf4, 
0xe2, 0xf0, 0xf0, 0xf7, 0xf8, 0xf0, 0xf0, 0xfe, 
0xf4, 0x0a, 0xf7, 0xfe, 0xfc, 0xfd, 0xfa, 0xf6, 
0xf1, 0xf0, 0xe2, 0xb5, 0x10, 0x5e, 0xb0, 0x00, 
0x00, 0x00, 0x01, 0x62, 0x4b, 0x47, 0x44, 0x01, 
0xff, 0x02, 0x2d, 0xde, 0x00, 0x00, 0x00, 0x09, 
0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x2e, 0x23, 
0x00, 0x00, 0x2e, 0x23, 0x01, 0x78, 0xa5, 0x3f, 
0x76, 0x00, 0x00, 0x00, 0xfa, 0x49, 0x44, 0x41, 
0x54, 0x18, 0xd3, 0x63, 0xe0, 0xe3, 0x17, 0x10, 
0x14, 0xb2, 0xb3, 0x17, 0x16, 0x61, 0x60, 0x04, 
0x03, 0x06, 0x51, 0x07, 0x47, 0x27, 0x67, 0x17, 
0x57, 0x37, 0x77, 0x26, 0xa8, 0x80, 0x98, 0x87, 
0xa7, 0x97, 0xb7, 0x8f, 0xaf, 0x9f, 0xbf, 0x38, 
0x33, 0x44, 0x40, 0x22, 0x20, 0x30, 0x28, 0x38, 
0x24, 0x34, 0x2c, 0x3c, 0x42, 0x52, 0x4a, 0x9a, 
0x05, 0x28, 0x20, 0x13, 0x19, 0x15, 0x1d, 0x13, 
0x1b, 0x17, 0x9f, 0x90, 0x98, 0x94, 0x2c, 0x0b, 
0x12, 0x90, 0x4b, 0x49, 0x4d, 0x4b, 0xcf, 0xc8, 
0xcc, 0xca, 0xce, 0xc9, 0xcd, 0x93, 0x07, 0x09, 
0x28, 0xe4, 0x17, 0x14, 0x16, 0x15, 0x97, 0x94, 
0x96, 0x95, 0x57, 0x54, 0x32, 0x2a, 0x2a, 0xb1, 
0x32, 0x28, 0x57, 0x55, 0xd7, 0xd4, 0xd6, 0xd5, 
0x37, 0x34, 0x36, 0x36, 0x35, 0xab, 0xb4, 0xb4, 
0xaa, 0x32, 0xa8, 0xa9, 0x6b, 0x68, 0xb6, 0xb5, 
0x77, 0x04, 0x77, 0x76, 0x75, 0xf7, 0xf4, 0xf6, 
0xf5, 0x4f, 0x60, 0x60, 0x64, 0x63, 0x17, 0x73, 
0x9c, 0x38, 0x69, 0xf2, 0x94, 0xa9, 0xd3, 0xa6, 
0xcf, 0x98, 0x39, 0x6b, 0x36, 0x03, 0x23, 0x07, 
0xa7, 0xd6, 0x9c, 0xb9, 0xf3, 0xe6, 0x2f, 0x58, 
0xb8, 0x68, 0xf1, 0x92, 0xa5, 0xcb, 0x96, 0x83, 
0x1c, 0xac, 0xad, 0xa3, 0xab, 0xb7, 0x62, 0xd2, 
0xca, 0xc0, 0x55, 0xab, 0xd7, 0xac, 0xd5, 0x87, 
0xf8, 0x80, 0x8b, 0x71, 0xdd, 0xfa, 0xfc, 0x0d, 
0x1b, 0x37, 0x6d, 0xde, 0x62, 0x00, 0x11, 0xe0, 
0x66, 0xdc, 0x9a, 0xbe, 0x6d, 0xfb, 0x8e, 0x9d, 
0xbb, 0x76, 0x1b, 0x42, 0x04, 0x78, 0x18, 0x8d, 
0xf6, 0xec, 0xdd, 0xb7, 0xff, 0xc0, 0xc1, 0x43, 
0xc6, 0x10, 0x01, 0x5e, 0x13, 0x53, 0x33, 0x73, 
0x0b, 0x4b, 0x2b, 0x6b, 0x1b, 0x5b, 0x00, 0xb7, 
0x22, 0x4d, 0x03, 0xad, 0x66, 0xb4, 0x78, 0x00, 
0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 
0x61, 0x74, 0x65, 0x3a, 0x63, 0x72, 0x65, 0x61, 
0x74, 0x65, 0x00, 0x32, 0x30, 0x31, 0x34, 0x2d, 
0x30, 0x37, 0x2d, 0x30, 0x35, 0x54, 0x31, 0x33, 
0x3a, 0x30, 0x34, 0x3a, 0x31, 0x35, 0x2b, 0x30, 
0x34, 0x3a, 0x30, 0x30, 0x2e, 0x61, 0x0f, 0x3e, 
0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 
0x64, 0x61, 0x74, 0x65, 0x3a, 0x6d, 0x6f, 0x64, 
0x69, 0x66, 0x79, 0x00, 0x32, 0x30, 0x31, 0x34, 
0x2d, 0x30, 0x36, 0x2d, 0x32, 0x39, 0x54, 0x31, 
0x34, 0x3a, 0x34, 0x32, 0x3a, 0x31, 0x35, 0x2b, 
0x30, 0x34, 0x3a, 0x30, 0x30, 0x3b, 0x74, 0x71, 
0x48, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 
0x44, 0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *resourcegroups_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_resourcegroups_png = new wxImage();
	if (!img_resourcegroups_png || !img_resourcegroups_png->IsOk())
	{
		wxMemoryInputStream img_resourcegroups_pngIS(resourcegroups_png_data, sizeof(resourcegroups_png_data));
		img_resourcegroups_png->LoadFile(img_resourcegroups_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_resourcegroups_png;
}
#define resourcegroups_png_img resourcegroups_png_img()

static wxBitmap *resourcegroups_png_bmp()
{
	static wxBitmap *bmp_resourcegroups_png;
	if (!bmp_resourcegroups_png || !bmp_resourcegroups_png->IsOk())
		bmp_resourcegroups_png = new wxBitmap(*resourcegroups_png_img);
	return bmp_resourcegroups_png;
}
#define resourcegroups_png_bmp resourcegroups_png_bmp()

static wxIcon *resourcegroups_png_ico()
{
	static wxIcon *ico_resourcegroups_png;
	if (!ico_resourcegroups_png || !ico_resourcegroups_png->IsOk())
	{
		ico_resourcegroups_png = new wxIcon();
		ico_resourcegroups_png->CopyFromBitmap(*resourcegroups_png_bmp);
	}
	return ico_resourcegroups_png;
}
#define resourcegroups_png_ico resourcegroups_png_ico()

#endif // RESOURCEGROUPS_PNG_H
