#ifndef CATALOG_PNG_H
#define CATALOG_PNG_H

static const unsigned char catalog_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x00, 0x3f, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0xaf, 0x94, 0xd8, 0x77, 
0x49, 0xbd, 0xbb, 0x8d, 0xff, 0xb9, 0x8b, 0xff, 
0xb8, 0x89, 0xff, 0xb6, 0x85, 0xff, 0xff, 0xff, 
0xff, 0xb3, 0x81, 0xff, 0xb1, 0x7e, 0xfe, 0xe4, 
0xe5, 0xa7, 0xfd, 0xff, 0x4e, 0xae, 0x78, 0xfe, 
0xfe, 0xff, 0x9a, 0xab, 0x74, 0xfe, 0xa8, 0x6e, 
0xfe, 0xa5, 0x6a, 0xfe, 0xa3, 0x66, 0xfe, 0xa0, 
0x62, 0xfe, 0x9f, 0x60, 0xfe, 0x9c, 0x5a, 0xfe, 
0xbc, 0xcb, 0xef, 0x88, 0x00, 0x00, 0x00, 0x01, 
0x74, 0x52, 0x4e, 0x53, 0x00, 0x40, 0xe6, 0xd8, 
0x66, 0x00, 0x00, 0x00, 0x01, 0x62, 0x4b, 0x47, 
0x44, 0x07, 0x16, 0x61, 0x88, 0xeb, 0x00, 0x00, 
0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 
0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 0x46, 
0xc9, 0x6b, 0x3e, 0x00, 0x00, 0x00, 0x6e, 0x49, 
0x44, 0x41, 0x54, 0x18, 0xd3, 0x5d, 0x8f, 0x09, 
0x12, 0x80, 0x20, 0x08, 0x45, 0xe1, 0xb7, 0x68, 
0x62, 0x59, 0xd6, 0xfd, 0xcf, 0x9a, 0xe8, 0x30, 
0x5a, 0x0c, 0xa3, 0xbe, 0x8f, 0x6c, 0x44, 0xd5, 
0x18, 0x60, 0x1a, 0x8c, 0x31, 0x4d, 0xa3, 0xc2, 
0x98, 0x51, 0x9c, 0x3b, 0x2f, 0xe0, 0x7a, 0x18, 
0xaf, 0x60, 0xe7, 0xea, 0xd5, 0xd8, 0x2b, 0xab, 
0xe2, 0x55, 0x61, 0x6c, 0x85, 0x83, 0x48, 0x70, 
0xf5, 0x49, 0x88, 0x1a, 0x97, 0x7d, 0x17, 0xfd, 
0x13, 0x41, 0x38, 0x46, 0xe1, 0x40, 0x49, 0x49, 
0x3d, 0x25, 0xb5, 0x22, 0xa7, 0x15, 0x3d, 0xad, 
0xcd, 0xd5, 0xda, 0x5e, 0x7d, 0x90, 0xac, 0x83, 
0xe5, 0x71, 0xd4, 0x1b, 0xc5, 0x3f, 0xcb, 0x3c, 
0xcf, 0x7f, 0x5d, 0xe3, 0x17, 0x94, 0xdf, 0x03, 
0x49, 0x68, 0xad, 0x49, 0xf2, 0x00, 0x00, 0x00, 
0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 
0x65, 0x3a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 
0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 0x31, 0x32, 
0x2d, 0x30, 0x31, 0x54, 0x32, 0x30, 0x3a, 0x34, 
0x33, 0x3a, 0x34, 0x34, 0x2b, 0x30, 0x35, 0x3a, 
0x30, 0x30, 0x38, 0x99, 0x25, 0x1e, 0x00, 0x00, 
0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 
0x74, 0x65, 0x3a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 
0x79, 0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 0x30, 
0x39, 0x2d, 0x30, 0x31, 0x54, 0x32, 0x33, 0x3a, 
0x34, 0x34, 0x3a, 0x30, 0x36, 0x2b, 0x30, 0x35, 
0x3a, 0x30, 0x30, 0xca, 0x97, 0x55, 0xac, 0x00, 
0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 
0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *catalog_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_catalog_png = new wxImage();
	if (!img_catalog_png || !img_catalog_png->IsOk())
	{
		wxMemoryInputStream img_catalog_pngIS(catalog_png_data, sizeof(catalog_png_data));
		img_catalog_png->LoadFile(img_catalog_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_catalog_png;
}
#define catalog_png_img catalog_png_img()

static wxBitmap *catalog_png_bmp()
{
	static wxBitmap *bmp_catalog_png;
	if (!bmp_catalog_png || !bmp_catalog_png->IsOk())
		bmp_catalog_png = new wxBitmap(*catalog_png_img);
	return bmp_catalog_png;
}
#define catalog_png_bmp catalog_png_bmp()

static wxIcon *catalog_png_ico()
{
	static wxIcon *ico_catalog_png;
	if (!ico_catalog_png || !ico_catalog_png->IsOk())
	{
		ico_catalog_png = new wxIcon();
		ico_catalog_png->CopyFromBitmap(*catalog_png_bmp);
	}
	return ico_catalog_png;
}
#define catalog_png_ico catalog_png_ico()

#endif // CATALOG_PNG_H
