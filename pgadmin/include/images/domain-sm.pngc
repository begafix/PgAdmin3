#ifndef DOMAIN_SM_PNG_H
#define DOMAIN_SM_PNG_H

static const unsigned char domain_sm_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x00, 0x66, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0xdc, 0x5b, 0x5b, 0xc8, 
0x40, 0x40, 0xc2, 0x29, 0x29, 0xc1, 0x2a, 0x2a, 
0xc6, 0x3e, 0x3e, 0xb9, 0x31, 0x31, 0xe1, 0xa2, 
0xa9, 0xc2, 0x2d, 0x2d, 0xc7, 0x3f, 0x3f, 0xe3, 
0xbd, 0xc5, 0xe5, 0xe2, 0xec, 0xdf, 0xbb, 0xc4, 
0xc4, 0x2e, 0x2e, 0xe5, 0xe6, 0xf1, 0xe4, 0xe9, 
0xf5, 0xe1, 0xe4, 0xf0, 0xda, 0xb9, 0xc3, 0xd6, 
0x4f, 0x52, 0xe1, 0xe8, 0xf4, 0xde, 0xe7, 0xf4, 
0xdb, 0xe2, 0xef, 0xd6, 0xb7, 0xc3, 0xdc, 0x54, 
0x54, 0x6f, 0x6f, 0x6f, 0xe6, 0xea, 0xf5, 0xdb, 
0xe5, 0xf3, 0xd8, 0xe4, 0xf3, 0xd5, 0xe3, 0xf3, 
0x81, 0x60, 0x2b, 0xd2, 0xe2, 0xf2, 0xcf, 0xe1, 
0xf2, 0xcd, 0xe0, 0xf1, 0xcb, 0xdf, 0xf1, 0xc9, 
0xa9, 0x53, 0x58, 0x00, 0x00, 0x00, 0x01, 0x74, 
0x52, 0x4e, 0x53, 0x00, 0x40, 0xe6, 0xd8, 0x66, 
0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 
0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 
0x00, 0x46, 0xc9, 0x6b, 0x3e, 0x00, 0x00, 0x00, 
0x62, 0x49, 0x44, 0x41, 0x54, 0x18, 0xd3, 0x8d, 
0xcf, 0xc9, 0x12, 0x40, 0x30, 0x0c, 0x80, 0xe1, 
0x2a, 0x62, 0x5f, 0x5b, 0x54, 0x77, 0xef, 0xff, 
0x92, 0x6a, 0x86, 0x09, 0x4e, 0xcd, 0xed, 0xff, 
0x26, 0x39, 0x84, 0x90, 0xd8, 0x49, 0x7e, 0x4d, 
0xd3, 0xec, 0xd3, 0x39, 0x14, 0x50, 0xbe, 0xba, 
0x82, 0xba, 0x69, 0xa1, 0xc3, 0x7d, 0xa8, 0xfb, 
0x61, 0x9c, 0x80, 0xde, 0x3d, 0x5f, 0xcd, 0xf8, 
0xb2, 0xc2, 0x76, 0x8b, 0xd8, 0x43, 0x4b, 0xa5, 
0xc5, 0x73, 0x22, 0x06, 0x66, 0x8c, 0xd1, 0x16, 
0x81, 0xf1, 0x00, 0xd6, 0x21, 0x70, 0x19, 0xc0, 
0x79, 0x04, 0xa9, 0x02, 0xf8, 0x03, 0xe1, 0x99, 
0xb8, 0x2f, 0x4f, 0xb3, 0x75, 0x06, 0xdb, 0xf0, 
0xa7, 0x4c, 0xa5, 0x00, 0x00, 0x00, 0x25, 0x74, 
0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 
0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x00, 0x32, 
0x30, 0x31, 0x30, 0x2d, 0x31, 0x32, 0x2d, 0x30, 
0x31, 0x54, 0x32, 0x30, 0x3a, 0x34, 0x33, 0x3a, 
0x34, 0x34, 0x2b, 0x30, 0x35, 0x3a, 0x30, 0x30, 
0x38, 0x99, 0x25, 0x1e, 0x00, 0x00, 0x00, 0x25, 
0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 
0x3a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x00, 
0x32, 0x30, 0x31, 0x30, 0x2d, 0x30, 0x39, 0x2d, 
0x30, 0x31, 0x54, 0x32, 0x33, 0x3a, 0x34, 0x34, 
0x3a, 0x30, 0x36, 0x2b, 0x30, 0x35, 0x3a, 0x30, 
0x30, 0xca, 0x97, 0x55, 0xac, 0x00, 0x00, 0x00, 
0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 
0x82, 
};

#include "wx/mstream.h"

static wxImage *domain_sm_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_domain_sm_png = new wxImage();
	if (!img_domain_sm_png || !img_domain_sm_png->IsOk())
	{
		wxMemoryInputStream img_domain_sm_pngIS(domain_sm_png_data, sizeof(domain_sm_png_data));
		img_domain_sm_png->LoadFile(img_domain_sm_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_domain_sm_png;
}
#define domain_sm_png_img domain_sm_png_img()

static wxBitmap *domain_sm_png_bmp()
{
	static wxBitmap *bmp_domain_sm_png;
	if (!bmp_domain_sm_png || !bmp_domain_sm_png->IsOk())
		bmp_domain_sm_png = new wxBitmap(*domain_sm_png_img);
	return bmp_domain_sm_png;
}
#define domain_sm_png_bmp domain_sm_png_bmp()

static wxIcon *domain_sm_png_ico()
{
	static wxIcon *ico_domain_sm_png;
	if (!ico_domain_sm_png || !ico_domain_sm_png->IsOk())
	{
		ico_domain_sm_png = new wxIcon();
		ico_domain_sm_png->CopyFromBitmap(*domain_sm_png_bmp);
	}
	return ico_domain_sm_png;
}
#define domain_sm_png_ico domain_sm_png_ico()

#endif // DOMAIN_SM_PNG_H
