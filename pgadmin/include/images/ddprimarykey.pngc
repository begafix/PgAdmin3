#ifndef DDPRIMARYKEY_PNG_H
#define DDPRIMARYKEY_PNG_H

static const unsigned char ddprimarykey_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 
0x08, 0x06, 0x00, 0x00, 0x00, 0x89, 0xc7, 0x1f, 
0x80, 0x00, 0x00, 0x00, 0x01, 0x73, 0x52, 0x47, 
0x42, 0x00, 0xae, 0xce, 0x1c, 0xe9, 0x00, 0x00, 
0x00, 0x06, 0x62, 0x4b, 0x47, 0x44, 0x00, 0xff, 
0x00, 0xff, 0x00, 0xff, 0xa0, 0xbd, 0xa7, 0x93, 
0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 
0x00, 0x00, 0x0b, 0x13, 0x00, 0x00, 0x0b, 0x13, 
0x01, 0x00, 0x9a, 0x9c, 0x18, 0x00, 0x00, 0x00, 
0x07, 0x74, 0x49, 0x4d, 0x45, 0x07, 0xdb, 0x06, 
0x19, 0x0d, 0x21, 0x22, 0x47, 0x5b, 0x6c, 0xad, 
0x00, 0x00, 0x00, 0xd8, 0x49, 0x44, 0x41, 0x54, 
0x18, 0xd3, 0x8d, 0x8e, 0xb1, 0x4a, 0x42, 0x51, 
0x18, 0x80, 0xbf, 0x73, 0xce, 0x95, 0x40, 0x1a, 
0xee, 0x12, 0x1d, 0xb2, 0x45, 0x42, 0x5a, 0xa4, 
0xa1, 0x2d, 0xea, 0x0d, 0x44, 0xa8, 0xa9, 0xd1, 
0x77, 0x70, 0xd1, 0x77, 0xf0, 0x09, 0xda, 0x2e, 
0x38, 0xb5, 0xdc, 0x3b, 0xd8, 0x0b, 0xdc, 0x41, 
0x2e, 0x84, 0xd8, 0xd0, 0x14, 0xa2, 0xe8, 0x10, 
0x24, 0x8a, 0x86, 0x42, 0x84, 0x78, 0xce, 0xef, 
0x94, 0x5b, 0xd4, 0x37, 0x7e, 0x7c, 0xc3, 0xa7, 
0x00, 0xb2, 0xc7, 0xb2, 0x1c, 0x9f, 0xdd, 0x11, 
0x16, 0x6e, 0x00, 0xc5, 0xe7, 0x7b, 0x97, 0xe9, 
0x30, 0xe6, 0xea, 0xfe, 0x55, 0xa9, 0xf1, 0x4b, 
0x4b, 0x9c, 0x5b, 0x62, 0x4b, 0x15, 0xc0, 0x80, 
0xca, 0xa1, 0x94, 0xe1, 0xe3, 0x2d, 0x41, 0x9b, 
0x43, 0xf4, 0x6c, 0xd2, 0x21, 0xb4, 0x17, 0x78, 
0xb7, 0xa0, 0x97, 0xdc, 0xd2, 0x8b, 0x2b, 0x78, 
0xf7, 0x45, 0x58, 0xb8, 0x66, 0x36, 0xe9, 0x10, 
0x00, 0xc0, 0x06, 0xef, 0xbe, 0xb9, 0xac, 0x3e, 
0x80, 0x3e, 0xc0, 0xfb, 0x15, 0x20, 0x00, 0x28, 
0x80, 0xe1, 0x73, 0x5d, 0x8e, 0x8a, 0x65, 0xfc, 
0x76, 0x05, 0x3a, 0x4f, 0x90, 0x3b, 0x65, 0x3a, 
0xea, 0x62, 0x4c, 0xc8, 0x9e, 0x34, 0xb2, 0xb2, 
0x9e, 0x47, 0xb2, 0x9e, 0xb7, 0x25, 0x8d, 0xac, 
0xfc, 0x78, 0xcd, 0x1f, 0xfc, 0x3f, 0x38, 0x39, 
0xaf, 0xd1, 0x7f, 0x6a, 0x12, 0x04, 0xf9, 0xdf, 
0xeb, 0x41, 0xd6, 0x90, 0x34, 0xb2, 0x32, 0xc8, 
0x1a, 0xfb, 0x87, 0x1d, 0x4b, 0x11, 0x4b, 0xe4, 
0x72, 0x86, 0xd5, 0x9c, 0x00, 0x00, 0x00, 0x00, 
0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *ddprimarykey_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_ddprimarykey_png = new wxImage();
	if (!img_ddprimarykey_png || !img_ddprimarykey_png->IsOk())
	{
		wxMemoryInputStream img_ddprimarykey_pngIS(ddprimarykey_png_data, sizeof(ddprimarykey_png_data));
		img_ddprimarykey_png->LoadFile(img_ddprimarykey_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_ddprimarykey_png;
}
#define ddprimarykey_png_img ddprimarykey_png_img()

static wxBitmap *ddprimarykey_png_bmp()
{
	static wxBitmap *bmp_ddprimarykey_png;
	if (!bmp_ddprimarykey_png || !bmp_ddprimarykey_png->IsOk())
		bmp_ddprimarykey_png = new wxBitmap(*ddprimarykey_png_img);
	return bmp_ddprimarykey_png;
}
#define ddprimarykey_png_bmp ddprimarykey_png_bmp()

static wxIcon *ddprimarykey_png_ico()
{
	static wxIcon *ico_ddprimarykey_png;
	if (!ico_ddprimarykey_png || !ico_ddprimarykey_png->IsOk())
	{
		ico_ddprimarykey_png = new wxIcon();
		ico_ddprimarykey_png->CopyFromBitmap(*ddprimarykey_png_bmp);
	}
	return ico_ddprimarykey_png;
}
#define ddprimarykey_png_ico ddprimarykey_png_ico()

#endif // DDPRIMARYKEY_PNG_H
