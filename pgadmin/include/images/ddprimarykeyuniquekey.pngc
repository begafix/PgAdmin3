#ifndef DDPRIMARYKEYUNIQUEKEY_PNG_H
#define DDPRIMARYKEYUNIQUEKEY_PNG_H

static const unsigned char ddprimarykeyuniquekey_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 
0x08, 0x06, 0x00, 0x00, 0x00, 0x89, 0xc7, 0x1f, 
0x80, 0x00, 0x00, 0x00, 0x01, 0x73, 0x52, 0x47, 
0x42, 0x00, 0xae, 0xce, 0x1c, 0xe9, 0x00, 0x00, 
0x00, 0x06, 0x62, 0x4b, 0x47, 0x44, 0x00, 0xff, 
0x00, 0xff, 0x00, 0xff, 0xa0, 0xbd, 0xa7, 0x93, 
0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 
0x00, 0x00, 0x0b, 0x13, 0x00, 0x00, 0x0b, 0x13, 
0x01, 0x00, 0x9a, 0x9c, 0x18, 0x00, 0x00, 0x00, 
0x07, 0x74, 0x49, 0x4d, 0x45, 0x07, 0xdb, 0x06, 
0x19, 0x0d, 0x21, 0x2d, 0xd7, 0xe4, 0x71, 0x3c, 
0x00, 0x00, 0x00, 0xe9, 0x49, 0x44, 0x41, 0x54, 
0x18, 0xd3, 0x63, 0x60, 0x60, 0x60, 0x60, 0x38, 
0xbe, 0x52, 0xe7, 0xff, 0xbb, 0xe7, 0x3b, 0xff, 
0x1f, 0x5f, 0xa9, 0xfb, 0x9f, 0x01, 0x0d, 0x30, 
0x3d, 0x38, 0xdf, 0xfd, 0x5f, 0x4c, 0xd9, 0x8f, 
0x81, 0x9d, 0x8b, 0x9f, 0x41, 0x5c, 0x39, 0x88, 
0xe1, 0xc1, 0xf9, 0x6e, 0x14, 0x45, 0x4c, 0xaf, 
0x1f, 0x6e, 0x66, 0x10, 0x90, 0xd0, 0x63, 0x38, 
0xb3, 0x3e, 0x80, 0x41, 0x40, 0xda, 0x9a, 0xe1, 
0xf5, 0xc3, 0xcd, 0x0c, 0x3a, 0x69, 0x7b, 0xff, 
0x37, 0x2f, 0xbd, 0xf1, 0x9f, 0x81, 0x81, 0x81, 
0x81, 0x09, 0xa2, 0xee, 0x17, 0x83, 0x91, 0xef, 
0x4c, 0x06, 0x06, 0x86, 0xbf, 0x0c, 0x89, 0xdb, 
0xea, 0x19, 0x02, 0x42, 0xe4, 0x18, 0x56, 0x1e, 
0x7c, 0x0a, 0x31, 0xc1, 0x34, 0xe0, 0x10, 0xe3, 
0x87, 0x67, 0x17, 0x18, 0xfe, 0xfe, 0xba, 0xcf, 
0x60, 0x57, 0xcf, 0xc6, 0x50, 0x9d, 0xa7, 0xc1, 
0xc0, 0xf8, 0x9f, 0x11, 0x61, 0x05, 0x03, 0x03, 
0x03, 0xc3, 0x93, 0x6b, 0xcb, 0x18, 0x98, 0x59, 
0x05, 0x18, 0xc2, 0xed, 0xa5, 0x19, 0x5a, 0x27, 
0xdd, 0x60, 0x60, 0xf8, 0x8b, 0xa6, 0x00, 0x06, 
0xec, 0x7e, 0x3b, 0x30, 0xf0, 0x73, 0xb3, 0x32, 
0x30, 0xfe, 0x63, 0xc2, 0xae, 0x80, 0x81, 0x81, 
0x81, 0x41, 0x53, 0x8e, 0x97, 0x81, 0xe9, 0x17, 
0x0b, 0xaa, 0x02, 0x29, 0xf5, 0x78, 0x86, 0x73, 
0x5b, 0x2a, 0x18, 0x18, 0x18, 0x18, 0x18, 0x4e, 
0x5c, 0x7f, 0xc7, 0xf0, 0xed, 0x07, 0x42, 0x03, 
0xdc, 0xb2, 0xdb, 0xc7, 0xcb, 0xff, 0xaf, 0xb8, 
0x97, 0x08, 0x77, 0x3d, 0x03, 0x03, 0x03, 0x43, 
0xb8, 0xbd, 0x34, 0x03, 0x00, 0x8a, 0xd1, 0x47, 
0xb3, 0xef, 0xd2, 0xf6, 0x84, 0x00, 0x00, 0x00, 
0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 
0x82, 
};

#include "wx/mstream.h"

static wxImage *ddprimarykeyuniquekey_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_ddprimarykeyuniquekey_png = new wxImage();
	if (!img_ddprimarykeyuniquekey_png || !img_ddprimarykeyuniquekey_png->IsOk())
	{
		wxMemoryInputStream img_ddprimarykeyuniquekey_pngIS(ddprimarykeyuniquekey_png_data, sizeof(ddprimarykeyuniquekey_png_data));
		img_ddprimarykeyuniquekey_png->LoadFile(img_ddprimarykeyuniquekey_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_ddprimarykeyuniquekey_png;
}
#define ddprimarykeyuniquekey_png_img ddprimarykeyuniquekey_png_img()

static wxBitmap *ddprimarykeyuniquekey_png_bmp()
{
	static wxBitmap *bmp_ddprimarykeyuniquekey_png;
	if (!bmp_ddprimarykeyuniquekey_png || !bmp_ddprimarykeyuniquekey_png->IsOk())
		bmp_ddprimarykeyuniquekey_png = new wxBitmap(*ddprimarykeyuniquekey_png_img);
	return bmp_ddprimarykeyuniquekey_png;
}
#define ddprimarykeyuniquekey_png_bmp ddprimarykeyuniquekey_png_bmp()

static wxIcon *ddprimarykeyuniquekey_png_ico()
{
	static wxIcon *ico_ddprimarykeyuniquekey_png;
	if (!ico_ddprimarykeyuniquekey_png || !ico_ddprimarykeyuniquekey_png->IsOk())
	{
		ico_ddprimarykeyuniquekey_png = new wxIcon();
		ico_ddprimarykeyuniquekey_png->CopyFromBitmap(*ddprimarykeyuniquekey_png_bmp);
	}
	return ico_ddprimarykeyuniquekey_png;
}
#define ddprimarykeyuniquekey_png_ico ddprimarykeyuniquekey_png_ico()

#endif // DDPRIMARYKEYUNIQUEKEY_PNG_H
