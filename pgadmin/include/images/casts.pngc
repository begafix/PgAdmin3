#ifndef CASTS_PNG_H
#define CASTS_PNG_H

static const unsigned char casts_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x00, 0x5a, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0xca, 0xbd, 0x8c, 0xa5, 
0x8e, 0x3c, 0x7e, 0x70, 0x9b, 0x59, 0x4f, 0xba, 
0x9d, 0x97, 0xd6, 0xdd, 0xdf, 0x18, 0x7f, 0x6e, 
0x7b, 0xa5, 0xa5, 0xff, 0xde, 0xe0, 0x21, 0x95, 
0x81, 0x56, 0x6f, 0x61, 0x95, 0xe1, 0xe2, 0x2f, 
0xbe, 0xb1, 0x37, 0xe4, 0xe5, 0x3f, 0xbf, 0xb2, 
0x3d, 0xaa, 0xaa, 0xff, 0xb1, 0xb1, 0xff, 0xba, 
0xba, 0xff, 0xc5, 0xb7, 0x60, 0xe7, 0xe8, 0x51, 
0xc3, 0xc3, 0xff, 0xf0, 0xef, 0x86, 0xea, 0xea, 
0x64, 0xcd, 0xcd, 0xff, 0xf2, 0xf2, 0x93, 0xed, 
0xed, 0x75, 0xd6, 0xd6, 0xff, 0xdf, 0xdf, 0xff, 
0xe6, 0xe6, 0xff, 0xd2, 0x1c, 0x99, 0x5f, 0x00, 
0x00, 0x00, 0x01, 0x74, 0x52, 0x4e, 0x53, 0x00, 
0x40, 0xe6, 0xd8, 0x66, 0x00, 0x00, 0x00, 0x09, 
0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x00, 0x48, 
0x00, 0x00, 0x00, 0x48, 0x00, 0x46, 0xc9, 0x6b, 
0x3e, 0x00, 0x00, 0x00, 0x6f, 0x49, 0x44, 0x41, 
0x54, 0x18, 0xd3, 0x75, 0xcf, 0xdb, 0x0e, 0x83, 
0x20, 0x10, 0x04, 0xd0, 0x65, 0xba, 0x75, 0x4a, 
0xa5, 0x68, 0x2f, 0x5a, 0x2d, 0xf6, 0xff, 0x7f, 
0x53, 0x7c, 0x59, 0xd0, 0xc4, 0x79, 0x23, 0x39, 
0x3b, 0x61, 0x44, 0x44, 0x1c, 0x2e, 0x7a, 0x95, 
0x12, 0x87, 0x86, 0x37, 0xad, 0xdf, 0xde, 0xdf, 
0xd1, 0x9a, 0x71, 0x08, 0xe1, 0x51, 0x1b, 0xc4, 
0xd8, 0xed, 0x8c, 0x03, 0x4e, 0x0c, 0x7b, 0xb5, 
0x96, 0xcd, 0x04, 0x3e, 0xad, 0x17, 0xd9, 0xc4, 
0xc8, 0x97, 0xda, 0xcd, 0x3b, 0x9b, 0x0f, 0x07, 
0xd5, 0xd2, 0x3b, 0xe2, 0xcb, 0x29, 0xc7, 0xcc, 
0x8c, 0x1f, 0x53, 0x4a, 0xd5, 0xef, 0x30, 0x72, 
0x59, 0xea, 0x45, 0x98, 0xf9, 0x3f, 0x2c, 0xdc, 
0x2f, 0x2e, 0x59, 0x01, 0x53, 0xb2, 0x04, 0x9e, 
0x04, 0xe2, 0x51, 0xb7, 0x00, 0x00, 0x00, 0x25, 
0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 
0x3a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x00, 
0x32, 0x30, 0x31, 0x30, 0x2d, 0x31, 0x32, 0x2d, 
0x30, 0x31, 0x54, 0x32, 0x30, 0x3a, 0x34, 0x33, 
0x3a, 0x34, 0x34, 0x2b, 0x30, 0x35, 0x3a, 0x30, 
0x30, 0x38, 0x99, 0x25, 0x1e, 0x00, 0x00, 0x00, 
0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 
0x65, 0x3a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 
0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 0x30, 0x39, 
0x2d, 0x30, 0x31, 0x54, 0x32, 0x33, 0x3a, 0x34, 
0x34, 0x3a, 0x30, 0x36, 0x2b, 0x30, 0x35, 0x3a, 
0x30, 0x30, 0xca, 0x97, 0x55, 0xac, 0x00, 0x00, 
0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 
0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *casts_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_casts_png = new wxImage();
	if (!img_casts_png || !img_casts_png->IsOk())
	{
		wxMemoryInputStream img_casts_pngIS(casts_png_data, sizeof(casts_png_data));
		img_casts_png->LoadFile(img_casts_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_casts_png;
}
#define casts_png_img casts_png_img()

static wxBitmap *casts_png_bmp()
{
	static wxBitmap *bmp_casts_png;
	if (!bmp_casts_png || !bmp_casts_png->IsOk())
		bmp_casts_png = new wxBitmap(*casts_png_img);
	return bmp_casts_png;
}
#define casts_png_bmp casts_png_bmp()

static wxIcon *casts_png_ico()
{
	static wxIcon *ico_casts_png;
	if (!ico_casts_png || !ico_casts_png->IsOk())
	{
		ico_casts_png = new wxIcon();
		ico_casts_png->CopyFromBitmap(*casts_png_bmp);
	}
	return ico_casts_png;
}
#define casts_png_ico casts_png_ico()

#endif // CASTS_PNG_H
