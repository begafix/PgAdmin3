#ifndef QUERY_ROLLBACK_PNG_H
#define QUERY_ROLLBACK_PNG_H

static const unsigned char query_rollback_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 
0x61, 0x00, 0x00, 0x00, 0x04, 0x67, 0x41, 0x4d, 
0x41, 0x00, 0x00, 0xb1, 0x8f, 0x0b, 0xfc, 0x61, 
0x05, 0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 
0x73, 0x00, 0x00, 0x0e, 0xc2, 0x00, 0x00, 0x0e, 
0xc2, 0x01, 0x15, 0x28, 0x4a, 0x80, 0x00, 0x00, 
0x00, 0x18, 0x74, 0x45, 0x58, 0x74, 0x53, 0x6f, 
0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x00, 0x70, 
0x61, 0x69, 0x6e, 0x74, 0x2e, 0x6e, 0x65, 0x74, 
0x20, 0x34, 0x2e, 0x30, 0x2e, 0x35, 0x65, 0x85, 
0x32, 0x65, 0x00, 0x00, 0x01, 0xc5, 0x49, 0x44, 
0x41, 0x54, 0x38, 0x4f, 0x85, 0x91, 0xdd, 0x4b, 
0x53, 0x71, 0x18, 0xc7, 0xfd, 0x1f, 0xfa, 0x1f, 
0xbc, 0x12, 0x52, 0x02, 0x9d, 0x88, 0x11, 0x74, 
0xa7, 0xe0, 0x4b, 0xdd, 0x0d, 0xf1, 0xc2, 0xa8, 
0x48, 0xba, 0xe8, 0x42, 0x21, 0xf0, 0x4a, 0xeb, 
0x5a, 0x6c, 0xd9, 0x71, 0x63, 0x90, 0x61, 0x78, 
0xa1, 0x36, 0x37, 0xc2, 0xb7, 0xcd, 0xb3, 0xca, 
0xf9, 0x92, 0xb2, 0xa4, 0x62, 0x37, 0xa5, 0x8e, 
0xe3, 0x9c, 0x2f, 0x9d, 0x39, 0xbd, 0x70, 0x03, 
0x4d, 0xa8, 0x4f, 0xfb, 0x1d, 0x77, 0x7e, 0xed, 
0xb4, 0x33, 0x7b, 0xe0, 0xcb, 0xe1, 0xf7, 0x3c, 
0xdf, 0xef, 0x87, 0x87, 0xe7, 0x94, 0x01, 0xb6, 
0x72, 0x7a, 0xaf, 0xd0, 0xe5, 0x69, 0x40, 0x7c, 
0xff, 0x9d, 0x15, 0xca, 0xb6, 0x69, 0x86, 0x3f, 
0x69, 0xaf, 0xff, 0x0b, 0x29, 0x6a, 0x98, 0xe1, 
0x99, 0xaf, 0x8f, 0x19, 0x5d, 0x76, 0x12, 0x8a, 
0xf5, 0x5e, 0x0a, 0xb1, 0x3c, 0xcc, 0xf0, 0xd4, 
0xe7, 0x47, 0x78, 0xdf, 0xdf, 0x44, 0x51, 0xeb, 
0x79, 0x19, 0x69, 0xce, 0x41, 0x9e, 0x94, 0x84, 
0x14, 0x85, 0x07, 0xe7, 0xaf, 0xd2, 0x3f, 0x5b, 
0xce, 0xc0, 0x5c, 0x05, 0xae, 0xd0, 0x35, 0x5e, 
0xcc, 0xd7, 0x32, 0x14, 0xbe, 0xc1, 0xf0, 0xe2, 
0x6d, 0x5b, 0x88, 0x05, 0x60, 0xca, 0x6e, 0x83, 
0xc2, 0xb9, 0x99, 0x11, 0xb2, 0x54, 0x6c, 0xf9, 
0x99, 0x61, 0x18, 0x52, 0x1d, 0xb8, 0x82, 0x55, 
0xb9, 0x6d, 0x1c, 0x28, 0xe1, 0xeb, 0x0c, 0x47, 
0x5a, 0x8d, 0x7e, 0xde, 0x26, 0xcb, 0x02, 0x78, 
0xeb, 0xad, 0x63, 0x65, 0xea, 0x81, 0x61, 0x1c, 
0x5f, 0x75, 0x32, 0xb1, 0xd6, 0x8e, 0x2f, 0xda, 
0xc1, 0x64, 0xf4, 0x3e, 0x81, 0xf5, 0x87, 0x46, 
0x5f, 0xf5, 0xdd, 0xc2, 0xef, 0xae, 0x96, 0x29, 
0x09, 0x58, 0xf0, 0xdd, 0x21, 0xfe, 0xc5, 0x03, 
0xbf, 0x8e, 0x0d, 0x63, 0x29, 0x69, 0x9a, 0x97, 
0x8f, 0x6a, 0x27, 0xc2, 0x2f, 0x72, 0x12, 0x10, 
0x70, 0xd7, 0xb1, 0x16, 0x6c, 0x23, 0xb6, 0x7a, 
0x8f, 0xa3, 0xf8, 0x34, 0x99, 0xfd, 0x77, 0x17, 
0x3a, 0xf4, 0xa3, 0x27, 0x9e, 0x4b, 0x89, 0xb9, 
0xf0, 0xcd, 0x8d, 0x34, 0x59, 0x01, 0x6f, 0x5c, 
0x95, 0x24, 0x37, 0xc3, 0xe8, 0x5b, 0x41, 0x16, 
0x03, 0x9d, 0xcc, 0xbe, 0x6a, 0xc4, 0xaf, 0xd4, 
0x48, 0x89, 0xb7, 0xe8, 0xa7, 0xf5, 0x25, 0x52, 
0x3b, 0x21, 0x84, 0x5f, 0xe4, 0x2c, 0x80, 0xbd, 
0x78, 0x84, 0x6c, 0xea, 0x1b, 0x9c, 0x65, 0xe0, 
0xf4, 0x98, 0xdf, 0xd9, 0x18, 0xd9, 0xf4, 0x34, 
0x87, 0x09, 0x37, 0xdb, 0x1b, 0x3d, 0x68, 0x1b, 
0x4f, 0xd9, 0x4d, 0x28, 0xfc, 0x48, 0x4e, 0x94, 
0x06, 0x9c, 0xa4, 0xbe, 0xc3, 0x79, 0x16, 0x7e, 
0x5e, 0x00, 0x32, 0xfa, 0x0c, 0xe9, 0x03, 0xc5, 
0x00, 0x24, 0xb6, 0x72, 0x00, 0x4d, 0x41, 0xdf, 
0x1d, 0xb7, 0x07, 0x44, 0xd5, 0xbe, 0xfc, 0x06, 
0x27, 0x12, 0x60, 0x6c, 0x90, 0x2c, 0xd8, 0x40, 
0x73, 0xb3, 0xfe, 0xa1, 0xbb, 0x18, 0x20, 0x2a, 
0xe0, 0xa9, 0x25, 0x32, 0x79, 0x97, 0xcd, 0x95, 
0xc1, 0xbf, 0x87, 0xcc, 0x1f, 0xd1, 0x3c, 0x5e, 
0x78, 0xac, 0x25, 0xf7, 0x1b, 0x1d, 0x32, 0x65, 
0x01, 0x98, 0x75, 0xd9, 0x11, 0xf3, 0x16, 0x59, 
0x40, 0xd9, 0x1f, 0xfc, 0xa3, 0x79, 0xae, 0xb1, 
0x5a, 0xe1, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x49, 
0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *query_rollback_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_query_rollback_png = new wxImage();
	if (!img_query_rollback_png || !img_query_rollback_png->IsOk())
	{
		wxMemoryInputStream img_query_rollback_pngIS(query_rollback_png_data, sizeof(query_rollback_png_data));
		img_query_rollback_png->LoadFile(img_query_rollback_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_query_rollback_png;
}
#define query_rollback_png_img query_rollback_png_img()

static wxBitmap *query_rollback_png_bmp()
{
	static wxBitmap *bmp_query_rollback_png;
	if (!bmp_query_rollback_png || !bmp_query_rollback_png->IsOk())
		bmp_query_rollback_png = new wxBitmap(*query_rollback_png_img);
	return bmp_query_rollback_png;
}
#define query_rollback_png_bmp query_rollback_png_bmp()

static wxIcon *query_rollback_png_ico()
{
	static wxIcon *ico_query_rollback_png;
	if (!ico_query_rollback_png || !ico_query_rollback_png->IsOk())
	{
		ico_query_rollback_png = new wxIcon();
		ico_query_rollback_png->CopyFromBitmap(*query_rollback_png_bmp);
	}
	return ico_query_rollback_png;
}
#define query_rollback_png_ico query_rollback_png_ico()

#endif // QUERY_ROLLBACK_PNG_H
