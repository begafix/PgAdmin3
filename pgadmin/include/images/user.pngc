#ifndef USER_PNG_H
#define USER_PNG_H

static const unsigned char user_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x00, 0xcf, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0x99, 0x99, 0x99, 0x6a, 
0x6a, 0x6a, 0xbd, 0xbd, 0xbd, 0x7e, 0x7a, 0x77, 
0xb7, 0xae, 0xa7, 0xe4, 0xd8, 0xce, 0xe4, 0xd8, 
0xd0, 0xb6, 0xae, 0xaa, 0x7e, 0x7a, 0x79, 0xd7, 
0xcc, 0xc3, 0xf8, 0xea, 0xdf, 0xf8, 0xea, 0xe1, 
0xf7, 0xea, 0xe2, 0xf7, 0xea, 0xe4, 0xd7, 0xcc, 
0xc9, 0x7e, 0x7a, 0x7a, 0xf7, 0xea, 0xe6, 0xf7, 
0xea, 0xe8, 0xb6, 0xae, 0xae, 0xf7, 0xea, 0xea, 
0xe3, 0xd8, 0xda, 0xf7, 0xea, 0xec, 0xe3, 0xd8, 
0xdb, 0xf7, 0xea, 0xee, 0xb6, 0xae, 0xb1, 0xd6, 
0xcc, 0xd0, 0x7d, 0x7a, 0x7c, 0x5b, 0x5c, 0x5c, 
0x5a, 0x5c, 0x5c, 0x6a, 0x6d, 0x6d, 0xa6, 0xb4, 
0xb7, 0xb4, 0xc5, 0xc9, 0x87, 0x90, 0x93, 0x64, 
0x67, 0x68, 0x63, 0x67, 0x68, 0x83, 0x8e, 0x93, 
0xa8, 0xbf, 0xca, 0x99, 0xad, 0xb7, 0x65, 0x6b, 
0x6d, 0x5a, 0x5a, 0x5a, 0xa3, 0xb0, 0xb3, 0xd4, 
0xea, 0xf0, 0xd1, 0xe9, 0xf0, 0xce, 0xe7, 0xf0, 
0xcb, 0xe6, 0xf1, 0xc7, 0xe4, 0xf1, 0xc4, 0xe3, 
0xf1, 0xc1, 0xe1, 0xf1, 0xbd, 0xe0, 0xf1, 0x92, 
0xa8, 0xb4, 0x58, 0x5a, 0x5b, 0x83, 0x8a, 0x8c, 
0xba, 0xde, 0xf2, 0xb7, 0xdd, 0xf2, 0x77, 0x85, 
0x8c, 0x94, 0x94, 0x94, 0xa5, 0xb3, 0xb7, 0xb4, 
0xdc, 0xf2, 0x90, 0xaa, 0xb8, 0x6e, 0x6e, 0x6e, 
0xbf, 0xd3, 0xd9, 0xb2, 0xdb, 0xf2, 0xa3, 0xc6, 
0xdb, 0x58, 0x58, 0x58, 0xcc, 0xe5, 0xee, 0xb1, 
0xda, 0xf2, 0xb0, 0xd8, 0xf0, 0x55, 0x55, 0x55, 
0x05, 0xa5, 0xb0, 0x79, 0x00, 0x00, 0x00, 0x01, 
0x74, 0x52, 0x4e, 0x53, 0x00, 0x40, 0xe6, 0xd8, 
0x66, 0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 
0x73, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 
0x48, 0x00, 0x46, 0xc9, 0x6b, 0x3e, 0x00, 0x00, 
0x00, 0x95, 0x49, 0x44, 0x41, 0x54, 0x18, 0xd3, 
0x45, 0xcd, 0xe9, 0x12, 0xc1, 0x30, 0x14, 0x86, 
0xe1, 0x24, 0xdd, 0x6d, 0x2d, 0x55, 0x55, 0x45, 
0xed, 0xfb, 0xbe, 0x16, 0x45, 0x90, 0xfb, 0xbf, 
0x26, 0x49, 0x4c, 0x8e, 0xef, 0xdf, 0xf3, 0xce, 
0x9c, 0x39, 0x08, 0xc9, 0x61, 0x42, 0x30, 0xfa, 
0x4f, 0xd3, 0x0d, 0xd3, 0xb2, 0x1d, 0x0d, 0x82, 
0x9e, 0xcb, 0x17, 0x8a, 0x25, 0xd7, 0x53, 0xc6, 
0x86, 0x70, 0xb9, 0xe2, 0xab, 0x2b, 0x62, 0x4a, 
0x57, 0x03, 0xa2, 0x82, 0x25, 0x5d, 0x0b, 0x55, 
0xc0, 0xb6, 0x74, 0x3d, 0x82, 0x47, 0x8e, 0x2b, 
0xdc, 0x88, 0xe1, 0x4b, 0xd3, 0xf3, 0x83, 0x30, 
0x8a, 0x5b, 0xca, 0xed, 0xa4, 0xd3, 0xed, 0xf5, 
0x07, 0xc3, 0xd1, 0xf8, 0xe7, 0xc9, 0x74, 0x36, 
0x5f, 0x2c, 0x57, 0xeb, 0xcd, 0x76, 0xb7, 0x97, 
0xe1, 0xa0, 0x7c, 0x3c, 0x9d, 0x85, 0xd3, 0x0b, 
0xf8, 0x7a, 0x4b, 0x79, 0xc8, 0xee, 0xe0, 0xc7, 
0x33, 0xe3, 0x81, 0xbe, 0xc0, 0xef, 0x0f, 0xe5, 
0x81, 0x51, 0x06, 0xa3, 0x0c, 0x7d, 0x01, 0x4f, 
0x20, 0x16, 0x36, 0xab, 0xb5, 0xf2, 0xa8, 0x00, 
0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 
0x61, 0x74, 0x65, 0x3a, 0x63, 0x72, 0x65, 0x61, 
0x74, 0x65, 0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 
0x31, 0x32, 0x2d, 0x30, 0x31, 0x54, 0x32, 0x30, 
0x3a, 0x34, 0x33, 0x3a, 0x34, 0x35, 0x2b, 0x30, 
0x35, 0x3a, 0x30, 0x30, 0x9e, 0xee, 0x2e, 0xaa, 
0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 
0x64, 0x61, 0x74, 0x65, 0x3a, 0x6d, 0x6f, 0x64, 
0x69, 0x66, 0x79, 0x00, 0x32, 0x30, 0x31, 0x30, 
0x2d, 0x30, 0x39, 0x2d, 0x30, 0x31, 0x54, 0x32, 
0x33, 0x3a, 0x34, 0x34, 0x3a, 0x30, 0x36, 0x2b, 
0x30, 0x35, 0x3a, 0x30, 0x30, 0xca, 0x97, 0x55, 
0xac, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 
0x44, 0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *user_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_user_png = new wxImage();
	if (!img_user_png || !img_user_png->IsOk())
	{
		wxMemoryInputStream img_user_pngIS(user_png_data, sizeof(user_png_data));
		img_user_png->LoadFile(img_user_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_user_png;
}
#define user_png_img user_png_img()

static wxBitmap *user_png_bmp()
{
	static wxBitmap *bmp_user_png;
	if (!bmp_user_png || !bmp_user_png->IsOk())
		bmp_user_png = new wxBitmap(*user_png_img);
	return bmp_user_png;
}
#define user_png_bmp user_png_bmp()

static wxIcon *user_png_ico()
{
	static wxIcon *ico_user_png;
	if (!ico_user_png || !ico_user_png->IsOk())
	{
		ico_user_png = new wxIcon();
		ico_user_png->CopyFromBitmap(*user_png_bmp);
	}
	return ico_user_png;
}
#define user_png_ico user_png_ico()

#endif // USER_PNG_H
