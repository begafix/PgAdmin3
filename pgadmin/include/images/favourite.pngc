#ifndef FAVOURITE_PNG_H
#define FAVOURITE_PNG_H

static const unsigned char favourite_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x00, 0xfc, 0x50, 0x4c, 0x54, 
0x45, 0xff, 0xff, 0xff, 0xd2, 0xbc, 0x8e, 0xc9, 
0xa9, 0x52, 0xd5, 0xbd, 0x85, 0xdc, 0xb2, 0x1a, 
0xf6, 0xf3, 0xeb, 0xe8, 0xde, 0xc8, 0xe9, 0xd0, 
0x7a, 0xf6, 0xc6, 0x0a, 0xdc, 0xcc, 0xac, 0xf3, 
0xee, 0xe4, 0xed, 0xe7, 0xd7, 0xd8, 0xc5, 0x9e, 
0xfe, 0xe3, 0x6e, 0xff, 0xcf, 0x0a, 0xd3, 0xb9, 
0x73, 0xed, 0xe6, 0xd7, 0xc6, 0xa0, 0x43, 0xe6, 
0xcf, 0x7e, 0xdf, 0xce, 0x8c, 0xd9, 0xc4, 0x83, 
0xdc, 0xc8, 0x99, 0xff, 0xd6, 0x2c, 0xff, 0xd6, 
0x20, 0xe0, 0xc8, 0x66, 0xd7, 0xc2, 0x84, 0xde, 
0xc4, 0x74, 0xe6, 0xc8, 0x67, 0xcc, 0xaa, 0x4b, 
0xdd, 0xcc, 0xa8, 0xd3, 0xa7, 0x1e, 0xfc, 0xe8, 
0x5e, 0xff, 0xf0, 0x6d, 0xff, 0xdc, 0x32, 0xff, 
0xce, 0x06, 0xff, 0xe1, 0x40, 0xff, 0xf8, 0x87, 
0xff, 0xf6, 0x80, 0xff, 0xdb, 0x2e, 0xd8, 0xa8, 
0x0b, 0xd3, 0xbc, 0x88, 0xce, 0xb0, 0x64, 0xe6, 
0xba, 0x18, 0xff, 0xd3, 0x14, 0xff, 0xd3, 0x16, 
0xff, 0xeb, 0x5f, 0xff, 0xfe, 0x95, 0xef, 0xd8, 
0x56, 0xc8, 0xa7, 0x4b, 0xf0, 0xea, 0xdc, 0xcc, 
0xb2, 0x78, 0xff, 0xd7, 0x35, 0xff, 0xdd, 0x34, 
0xff, 0xf6, 0x7e, 0xff, 0xf9, 0x89, 0xce, 0xaa, 
0x36, 0xfa, 0xf9, 0xf5, 0xed, 0xe7, 0xd6, 0xde, 
0xc2, 0x75, 0xff, 0xd0, 0x0e, 0xf6, 0xda, 0x49, 
0xf1, 0xe8, 0xa6, 0xff, 0xf0, 0x72, 0xef, 0xc4, 
0x19, 0xde, 0xcf, 0xae, 0xd0, 0xb9, 0x88, 0xfe, 
0xdc, 0x58, 0xee, 0xc4, 0x1c, 0xcc, 0xb0, 0x6b, 
0xd2, 0xbd, 0x8f, 0xe6, 0xd2, 0x90, 0xff, 0xd3, 
0x20, 0xce, 0xae, 0x56, 0xce, 0xb0, 0x67, 0xe4, 
0xb4, 0x0e, 0xd3, 0xbe, 0x8a, 0xda, 0xca, 0xa5, 
0xdc, 0xc4, 0x85, 0xda, 0xbd, 0x54, 0xd4, 0xbe, 
0x88, 0xe1, 0xd3, 0xb2, 0xe6, 0xdc, 0xc4, 0xcc, 
0xb6, 0x80, 0xfa, 0xf9, 0xf6, 0x80, 0x47, 0x32, 
0x54, 0x00, 0x00, 0x00, 0x01, 0x62, 0x4b, 0x47, 
0x44, 0x00, 0x88, 0x05, 0x1d, 0x48, 0x00, 0x00, 
0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 
0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 0x46, 
0xc9, 0x6b, 0x3e, 0x00, 0x00, 0x00, 0x80, 0x49, 
0x44, 0x41, 0x54, 0x18, 0xd3, 0x63, 0x60, 0x20, 
0x16, 0x30, 0x32, 0xa1, 0x09, 0x30, 0xb3, 0xb0, 
0xa2, 0xf0, 0xd9, 0xd8, 0x39, 0x38, 0xe1, 0x1c, 
0x2e, 0x6e, 0x56, 0x06, 0x1e, 0x5e, 0x3e, 0x7e, 
0x06, 0x56, 0x01, 0x01, 0xb0, 0x80, 0xa0, 0x90, 
0xb0, 0x88, 0xa8, 0x98, 0xb8, 0x84, 0xa4, 0x94, 
0xb4, 0x0c, 0x58, 0x40, 0x56, 0x4e, 0x5e, 0x41, 
0x51, 0x49, 0x59, 0x45, 0x55, 0x4d, 0x5d, 0x03, 
0xa2, 0x87, 0x55, 0x53, 0x4b, 0x5b, 0x47, 0x57, 
0x4f, 0xdf, 0xc0, 0x10, 0x6e, 0x8c, 0x91, 0xb1, 
0x89, 0xa9, 0x99, 0xb9, 0x05, 0x9c, 0x6f, 0x69, 
0x65, 0x6d, 0x63, 0x6b, 0x67, 0xef, 0x00, 0x17, 
0x70, 0x74, 0x72, 0x76, 0x71, 0x75, 0x73, 0xf7, 
0x80, 0x0b, 0x78, 0x7a, 0x79, 0x33, 0x30, 0xf8, 
0xf8, 0xfa, 0xc1, 0xdd, 0xe6, 0x1f, 0x00, 0x22, 
0x03, 0x83, 0x82, 0x89, 0xf2, 0x25, 0x00, 0x73, 
0xdc, 0x0d, 0xc3, 0xdd, 0x86, 0xc9, 0xe2, 0x00, 
0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 
0x61, 0x74, 0x65, 0x3a, 0x63, 0x72, 0x65, 0x61, 
0x74, 0x65, 0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 
0x31, 0x32, 0x2d, 0x30, 0x31, 0x54, 0x32, 0x30, 
0x3a, 0x34, 0x33, 0x3a, 0x34, 0x34, 0x2b, 0x30, 
0x35, 0x3a, 0x30, 0x30, 0x38, 0x99, 0x25, 0x1e, 
0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 
0x64, 0x61, 0x74, 0x65, 0x3a, 0x6d, 0x6f, 0x64, 
0x69, 0x66, 0x79, 0x00, 0x32, 0x30, 0x31, 0x30, 
0x2d, 0x30, 0x39, 0x2d, 0x30, 0x31, 0x54, 0x32, 
0x33, 0x3a, 0x34, 0x34, 0x3a, 0x30, 0x36, 0x2b, 
0x30, 0x35, 0x3a, 0x30, 0x30, 0xca, 0x97, 0x55, 
0xac, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 
0x44, 0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *favourite_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_favourite_png = new wxImage();
	if (!img_favourite_png || !img_favourite_png->IsOk())
	{
		wxMemoryInputStream img_favourite_pngIS(favourite_png_data, sizeof(favourite_png_data));
		img_favourite_png->LoadFile(img_favourite_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_favourite_png;
}
#define favourite_png_img favourite_png_img()

static wxBitmap *favourite_png_bmp()
{
	static wxBitmap *bmp_favourite_png;
	if (!bmp_favourite_png || !bmp_favourite_png->IsOk())
		bmp_favourite_png = new wxBitmap(*favourite_png_img);
	return bmp_favourite_png;
}
#define favourite_png_bmp favourite_png_bmp()

static wxIcon *favourite_png_ico()
{
	static wxIcon *ico_favourite_png;
	if (!ico_favourite_png || !ico_favourite_png->IsOk())
	{
		ico_favourite_png = new wxIcon();
		ico_favourite_png->CopyFromBitmap(*favourite_png_bmp);
	}
	return ico_favourite_png;
}
#define favourite_png_ico favourite_png_ico()

#endif // FAVOURITE_PNG_H
