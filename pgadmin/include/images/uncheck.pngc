#ifndef UNCHECK_PNG_H
#define UNCHECK_PNG_H

static const unsigned char uncheck_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x00, 0xf3, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0xc5, 0xd2, 0xa1, 0xa5, 
0xb9, 0x6e, 0xb0, 0xc1, 0x7f, 0xd5, 0xde, 0xbc, 
0x71, 0x93, 0x17, 0x8f, 0xb6, 0x37, 0xa4, 0xcd, 
0x4e, 0x9d, 0xc5, 0x47, 0xc7, 0xd3, 0xa4, 0x82, 
0xa8, 0x2a, 0xac, 0xd8, 0x57, 0xb1, 0xdd, 0x5d, 
0x87, 0xac, 0x2f, 0xcc, 0xd7, 0xad, 0xb5, 0xe3, 
0x62, 0x7c, 0xa0, 0x23, 0xce, 0xd9, 0xb1, 0x8a, 
0xb2, 0x31, 0x9c, 0xc7, 0x45, 0xa3, 0xcf, 0x4c, 
0xac, 0xd7, 0x58, 0xc3, 0xf1, 0x70, 0x7f, 0xa3, 
0x27, 0x87, 0xad, 0x2f, 0xb1, 0xde, 0x5c, 0x9e, 
0xc7, 0x49, 0xdc, 0x64, 0x57, 0xc5, 0x00, 0x00, 
0xd5, 0x5d, 0x3f, 0xd2, 0x5d, 0x3e, 0xbb, 0x3c, 
0x14, 0xdd, 0x66, 0x62, 0xf6, 0x77, 0x77, 0xd1, 
0x5b, 0x36, 0xf1, 0x57, 0x57, 0xdd, 0x69, 0x69, 
0xf6, 0x76, 0x76, 0xf6, 0x72, 0x72, 0xf5, 0x6e, 
0x6e, 0xef, 0x4f, 0x4f, 0xee, 0x48, 0x49, 0xaf, 
0xc1, 0x7e, 0xdd, 0x67, 0x62, 0xf5, 0x6d, 0x6d, 
0xf4, 0x68, 0x68, 0xf3, 0x62, 0x62, 0xf0, 0x55, 
0x55, 0xdc, 0xe4, 0xc7, 0xf3, 0x61, 0x61, 0xf1, 
0x5b, 0x5b, 0xf0, 0x53, 0x54, 0xef, 0x4d, 0x4e, 
0xee, 0x47, 0x47, 0xd9, 0x62, 0x4a, 0xef, 0x4d, 
0x4d, 0xd4, 0x5e, 0x46, 0xf0, 0x53, 0x53, 0xef, 
0x4c, 0x4c, 0xee, 0x45, 0x45, 0xec, 0x3e, 0x3f, 
0xeb, 0x38, 0x38, 0xf0, 0x52, 0x52, 0xef, 0x4b, 
0x4b, 0xed, 0x44, 0x45, 0xeb, 0x37, 0x37, 0xea, 
0x31, 0x31, 0xe9, 0x2b, 0x2b, 0xf0, 0x51, 0x51, 
0xee, 0x4a, 0x4a, 0xed, 0x43, 0x44, 0xd0, 0x5a, 
0x33, 0xe8, 0x25, 0x25, 0xe7, 0x20, 0x20, 0xd5, 
0x5b, 0x4b, 0xed, 0x42, 0x43, 0xcb, 0x52, 0x2c, 
0xe7, 0x1f, 0x20, 0xbc, 0x3e, 0x17, 0xca, 0x51, 
0x3c, 0xdb, 0x67, 0x64, 0xec, 0x28, 0xa6, 0x31, 
0x00, 0x00, 0x00, 0x01, 0x74, 0x52, 0x4e, 0x53, 
0x00, 0x40, 0xe6, 0xd8, 0x66, 0x00, 0x00, 0x00, 
0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x00, 
0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 0x46, 0xc9, 
0x6b, 0x3e, 0x00, 0x00, 0x00, 0xad, 0x49, 0x44, 
0x41, 0x54, 0x18, 0xd3, 0x4d, 0x8d, 0x57, 0x16, 
0x82, 0x50, 0x10, 0x43, 0x47, 0x05, 0x0b, 0xa2, 
0x62, 0x2f, 0xc4, 0x8a, 0x1d, 0x7b, 0xef, 0x0d, 
0x15, 0xbb, 0xee, 0x7f, 0x35, 0x22, 0x4f, 0x3c, 
0xe6, 0x6b, 0x92, 0xdc, 0x93, 0x21, 0xb2, 0x64, 
0xb3, 0x3b, 0xe8, 0x4f, 0x1c, 0xef, 0x74, 0xb9, 
0xff, 0x12, 0x8f, 0xe0, 0x15, 0x7d, 0xcc, 0xfb, 
0x1d, 0x76, 0x1b, 0x71, 0x42, 0x40, 0x94, 0x82, 
0xac, 0x0b, 0x85, 0x23, 0x4e, 0x9e, 0x8f, 0xc6, 
0xe2, 0x5f, 0x6f, 0x10, 0x89, 0xa4, 0x37, 0x25, 
0x23, 0x6d, 0xdc, 0x19, 0x64, 0x3f, 0x51, 0x50, 
0x12, 0x73, 0xc8, 0xa3, 0x40, 0x04, 0x05, 0x45, 
0x93, 0x8a, 0xa3, 0x54, 0xae, 0x80, 0x48, 0xa9, 
0xd6, 0x60, 0x06, 0x75, 0x15, 0x8d, 0x66, 0x0b, 
0x6d, 0xc3, 0x33, 0x82, 0x3a, 0x32, 0xba, 0xbd, 
0xfe, 0x60, 0xc8, 0x36, 0x4c, 0x8d, 0xd0, 0x1f, 
0x0f, 0x31, 0xf9, 0x79, 0x19, 0xd3, 0xd9, 0x7c, 
0xb1, 0xfc, 0x11, 0x2a, 0x56, 0xeb, 0x0d, 0xb6, 
0x3b, 0xcd, 0xda, 0xc0, 0xfe, 0x70, 0x84, 0x0e, 
0xed, 0x74, 0x66, 0x5f, 0xe8, 0x82, 0x2b, 0x74, 
0xba, 0xe1, 0x6e, 0x11, 0xf4, 0x30, 0x9b, 0x27, 
0x5e, 0xf4, 0x06, 0xf8, 0xce, 0x13, 0x09, 0x57, 
0x25, 0x1b, 0xb9, 0x00, 0x00, 0x00, 0x25, 0x74, 
0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 
0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x00, 0x32, 
0x30, 0x31, 0x31, 0x2d, 0x30, 0x31, 0x2d, 0x30, 
0x35, 0x54, 0x31, 0x38, 0x3a, 0x30, 0x39, 0x3a, 
0x33, 0x32, 0x2b, 0x30, 0x36, 0x3a, 0x30, 0x30, 
0xc7, 0x88, 0x36, 0x86, 0x00, 0x00, 0x00, 0x25, 
0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 
0x3a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x00, 
0x32, 0x30, 0x31, 0x31, 0x2d, 0x30, 0x31, 0x2d, 
0x30, 0x35, 0x54, 0x31, 0x38, 0x3a, 0x30, 0x39, 
0x3a, 0x33, 0x32, 0x2b, 0x30, 0x36, 0x3a, 0x30, 
0x30, 0xb6, 0xd5, 0x8e, 0x3a, 0x00, 0x00, 0x00, 
0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 
0x82, 
};

#include "wx/mstream.h"

static wxImage *uncheck_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_uncheck_png = new wxImage();
	if (!img_uncheck_png || !img_uncheck_png->IsOk())
	{
		wxMemoryInputStream img_uncheck_pngIS(uncheck_png_data, sizeof(uncheck_png_data));
		img_uncheck_png->LoadFile(img_uncheck_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_uncheck_png;
}
#define uncheck_png_img uncheck_png_img()

static wxBitmap *uncheck_png_bmp()
{
	static wxBitmap *bmp_uncheck_png;
	if (!bmp_uncheck_png || !bmp_uncheck_png->IsOk())
		bmp_uncheck_png = new wxBitmap(*uncheck_png_img);
	return bmp_uncheck_png;
}
#define uncheck_png_bmp uncheck_png_bmp()

static wxIcon *uncheck_png_ico()
{
	static wxIcon *ico_uncheck_png;
	if (!ico_uncheck_png || !ico_uncheck_png->IsOk())
	{
		ico_uncheck_png = new wxIcon();
		ico_uncheck_png->CopyFromBitmap(*uncheck_png_bmp);
	}
	return ico_uncheck_png;
}
#define uncheck_png_ico uncheck_png_ico()

#endif // UNCHECK_PNG_H
