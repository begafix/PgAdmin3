#ifndef SEQUENCE_REPL_PNG_H
#define SEQUENCE_REPL_PNG_H

static const unsigned char sequence_repl_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x00, 0xed, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0xb7, 0xa7, 0xdc, 0x84, 
0x69, 0xc4, 0xca, 0xc6, 0xe2, 0xdf, 0xdf, 0xef, 
0xe1, 0xdf, 0xed, 0xe2, 0xde, 0xee, 0xfb, 0xfd, 
0xfb, 0xfc, 0xfc, 0xfc, 0xfa, 0xfc, 0xfc, 0xfd, 
0xfb, 0xff, 0xfc, 0xfc, 0xfe, 0xff, 0xfb, 0xff, 
0xee, 0xea, 0xf8, 0xf0, 0xea, 0xfa, 0xf0, 0xea, 
0xf8, 0xda, 0xd0, 0xf0, 0xda, 0xce, 0xf0, 0xc1, 
0xb1, 0xe6, 0xc2, 0xb2, 0xe5, 0x9c, 0xb2, 0x55, 
0xb6, 0xde, 0x79, 0x94, 0xa1, 0x66, 0x87, 0x70, 
0xbc, 0xab, 0x98, 0xd9, 0xa7, 0x98, 0xce, 0xad, 
0x9a, 0xd3, 0xab, 0x97, 0xde, 0xad, 0x97, 0xde, 
0x9c, 0xb3, 0x55, 0xaa, 0xd3, 0x6a, 0xb0, 0xdd, 
0x77, 0x8c, 0xa8, 0x3a, 0xa2, 0xb0, 0x6f, 0x92, 
0xbf, 0x4f, 0x87, 0xa0, 0x31, 0x9e, 0x88, 0xd7, 
0x48, 0x82, 0xbe, 0x78, 0x92, 0xcb, 0x5f, 0x89, 
0x81, 0x86, 0xb2, 0x68, 0x9b, 0xce, 0x61, 0x8d, 
0xbc, 0x4a, 0x8f, 0xc8, 0x56, 0x7e, 0x99, 0x22, 
0x73, 0xc6, 0xdf, 0x71, 0xc4, 0xde, 0x6e, 0xc1, 
0xdd, 0x63, 0xae, 0xd3, 0x62, 0x91, 0x7e, 0x8d, 
0xc2, 0x51, 0x89, 0xc4, 0x50, 0x82, 0xbf, 0x49, 
0x70, 0xc3, 0xde, 0x6e, 0xc0, 0xdd, 0x5d, 0xa5, 
0xcf, 0x5a, 0x89, 0x87, 0x88, 0xc2, 0x51, 0x83, 
0xbd, 0x48, 0x7d, 0xba, 0x43, 0x78, 0xb7, 0x3e, 
0x6d, 0xbf, 0xdc, 0x51, 0x91, 0xc5, 0x5d, 0xa6, 
0xd0, 0x5b, 0xa5, 0xd0, 0x60, 0x7d, 0xaa, 0xaf, 
0xac, 0xb9, 0x82, 0x73, 0xa1, 0xaa, 0xa3, 0xb3, 
0x6f, 0x9c, 0xcc, 0x63, 0x9d, 0xcc, 0x8f, 0xb2, 
0xd7, 0x64, 0x9b, 0xcb, 0x5e, 0xac, 0xd4, 0x52, 
0x96, 0xc8, 0x61, 0x7a, 0xc1, 0x60, 0x92, 0xc6, 
0x58, 0x99, 0xca, 0x87, 0xad, 0xd4, 0xa4, 0xd7, 
0x13, 0x27, 0x00, 0x00, 0x00, 0x01, 0x74, 0x52, 
0x4e, 0x53, 0x00, 0x40, 0xe6, 0xd8, 0x66, 0x00, 
0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 
0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 
0x46, 0xc9, 0x6b, 0x3e, 0x00, 0x00, 0x00, 0x95, 
0x49, 0x44, 0x41, 0x54, 0x18, 0xd3, 0x63, 0x60, 
0x00, 0x01, 0x46, 0x26, 0x46, 0x06, 0x64, 0xc0, 
0xc8, 0xc4, 0x8c, 0x22, 0xc2, 0xc8, 0xc4, 0xc2, 
0xca, 0x86, 0x2c, 0xc2, 0xc4, 0xce, 0xce, 0xc1, 
0xc9, 0x89, 0x24, 0xc2, 0xc8, 0xc4, 0xc5, 0xc5, 
0xcd, 0xc3, 0x85, 0x22, 0xc2, 0xcb, 0xc7, 0xcb, 
0xcb, 0x8f, 0x22, 0x22, 0x20, 0x28, 0x20, 0x20, 
0x80, 0x22, 0x22, 0x24, 0x24, 0x2c, 0x24, 0x04, 
0x15, 0x11, 0x11, 0x15, 0x13, 0x97, 0x90, 0x94, 
0x92, 0x96, 0x81, 0xa9, 0x90, 0x95, 0x93, 0x57, 
0x50, 0x54, 0x52, 0x56, 0x81, 0xf0, 0x55, 0x55, 
0x55, 0xd5, 0xd4, 0x35, 0x34, 0xb5, 0xb4, 0x75, 
0xa0, 0xf2, 0xaa, 0xba, 0x7a, 0xfa, 0x06, 0x86, 
0x46, 0xc6, 0x26, 0x3a, 0x50, 0xf5, 0xaa, 0xa6, 
0x66, 0xe6, 0x16, 0x96, 0x56, 0xd6, 0x36, 0x3a, 
0x50, 0xf3, 0x55, 0x6d, 0xed, 0xec, 0x1d, 0x1c, 
0x9d, 0x9c, 0x5d, 0x60, 0x16, 0xba, 0xba, 0xb9, 
0x7b, 0x78, 0x7a, 0x79, 0xa3, 0xfa, 0xd6, 0xc7, 
0xd7, 0x0f, 0xce, 0x06, 0x00, 0x45, 0x0c, 0x0d, 
0xf4, 0x00, 0xdb, 0xf9, 0x11, 0x00, 0x00, 0x00, 
0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 
0x65, 0x3a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 
0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 0x31, 0x32, 
0x2d, 0x30, 0x31, 0x54, 0x32, 0x30, 0x3a, 0x34, 
0x33, 0x3a, 0x34, 0x35, 0x2b, 0x30, 0x35, 0x3a, 
0x30, 0x30, 0x9e, 0xee, 0x2e, 0xaa, 0x00, 0x00, 
0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 
0x74, 0x65, 0x3a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 
0x79, 0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 0x30, 
0x39, 0x2d, 0x30, 0x31, 0x54, 0x32, 0x33, 0x3a, 
0x34, 0x34, 0x3a, 0x30, 0x36, 0x2b, 0x30, 0x35, 
0x3a, 0x30, 0x30, 0xca, 0x97, 0x55, 0xac, 0x00, 
0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 
0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *sequence_repl_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_sequence_repl_png = new wxImage();
	if (!img_sequence_repl_png || !img_sequence_repl_png->IsOk())
	{
		wxMemoryInputStream img_sequence_repl_pngIS(sequence_repl_png_data, sizeof(sequence_repl_png_data));
		img_sequence_repl_png->LoadFile(img_sequence_repl_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_sequence_repl_png;
}
#define sequence_repl_png_img sequence_repl_png_img()

static wxBitmap *sequence_repl_png_bmp()
{
	static wxBitmap *bmp_sequence_repl_png;
	if (!bmp_sequence_repl_png || !bmp_sequence_repl_png->IsOk())
		bmp_sequence_repl_png = new wxBitmap(*sequence_repl_png_img);
	return bmp_sequence_repl_png;
}
#define sequence_repl_png_bmp sequence_repl_png_bmp()

static wxIcon *sequence_repl_png_ico()
{
	static wxIcon *ico_sequence_repl_png;
	if (!ico_sequence_repl_png || !ico_sequence_repl_png->IsOk())
	{
		ico_sequence_repl_png = new wxIcon();
		ico_sequence_repl_png->CopyFromBitmap(*sequence_repl_png_bmp);
	}
	return ico_sequence_repl_png;
}
#define sequence_repl_png_ico sequence_repl_png_ico()

#endif // SEQUENCE_REPL_PNG_H
