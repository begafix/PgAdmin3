#ifndef PARSERS_PNG_H
#define PARSERS_PNG_H

static const unsigned char parsers_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x01, 0x05, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0xa9, 0xbd, 0x86, 0x79, 
0xa2, 0x30, 0x60, 0x94, 0x04, 0x9b, 0xb5, 0x6e, 
0x82, 0xae, 0x38, 0xc9, 0xe8, 0xa2, 0xe0, 0xff, 
0xc1, 0xdf, 0xff, 0xbf, 0xdd, 0xfe, 0xbb, 0xdb, 
0xfe, 0xb6, 0xd9, 0xfd, 0xb0, 0xd7, 0xfc, 0xa8, 
0xd5, 0xfb, 0xa4, 0xc0, 0xe5, 0x89, 0x7f, 0xad, 
0x30, 0x6b, 0x9a, 0x18, 0xd8, 0xf5, 0xb7, 0xab, 
0xd7, 0x70, 0x79, 0xaa, 0x27, 0x76, 0xa7, 0x20, 
0x67, 0x98, 0x10, 0xa0, 0xca, 0x62, 0x6c, 0x9e, 
0x15, 0x6c, 0x9b, 0x1a, 0xd8, 0xff, 0xb1, 0xd4, 
0xfe, 0xa7, 0xd0, 0xfe, 0x9f, 0xcd, 0xfc, 0x97, 
0xca, 0xfb, 0x8e, 0xc6, 0xfa, 0x84, 0xc2, 0xf8, 
0x79, 0xbe, 0xf7, 0x6f, 0xbf, 0xf6, 0x70, 0xc6, 
0xef, 0x88, 0x9d, 0xb6, 0x70, 0xdf, 0xff, 0xbe, 
0xd1, 0xfe, 0xa2, 0xbb, 0x24, 0xd7, 0xc3, 0xf9, 
0x7c, 0x9d, 0x65, 0x92, 0xba, 0x23, 0xd5, 0xbc, 
0x93, 0x93, 0xc3, 0xf5, 0x74, 0x66, 0x98, 0x0f, 
0xdb, 0xfe, 0xb4, 0xcb, 0xfc, 0x93, 0xc8, 0xfa, 
0x89, 0xc4, 0xf9, 0x7e, 0xc0, 0xf7, 0x73, 0xc3, 
0x89, 0xab, 0xd9, 0x63, 0xe3, 0xdd, 0xc4, 0xb5, 
0xdc, 0xc4, 0xb0, 0xd8, 0x62, 0xdd, 0xc3, 0x87, 
0xa8, 0xd7, 0xfc, 0xa9, 0xc5, 0xf9, 0x82, 0x81, 
0xa6, 0x4f, 0x7e, 0xa5, 0x48, 0xb8, 0xf5, 0x5f, 
0xc0, 0x18, 0xe2, 0xd4, 0xc2, 0xaa, 0x98, 0xba, 
0x52, 0x96, 0xb9, 0x4d, 0xe0, 0xd5, 0xa7, 0xc9, 
0x23, 0xe7, 0xcc, 0xf0, 0x99, 0xc2, 0xf8, 0x77, 
0xba, 0xf5, 0x63, 0xb5, 0xf3, 0x56, 0xb0, 0xf2, 
0x4a, 0xba, 0x86, 0x94, 0xd7, 0x62, 0xdc, 0xd9, 
0xc3, 0xa6, 0xd9, 0xc3, 0xa2, 0xd7, 0x62, 0xda, 
0xc0, 0x81, 0xa6, 0x83, 0xb1, 0x35, 0xc5, 0xf5, 
0x7c, 0xc2, 0xf5, 0x71, 0xbf, 0xf3, 0x69, 0xbc, 
0xf2, 0x62, 0xc0, 0x93, 0x9b, 0xc7, 0x34, 0xda, 
0xbf, 0x8e, 0x9e, 0x7f, 0xaf, 0x29, 0x7b, 0x20, 
0x17, 0xe1, 0x00, 0x00, 0x00, 0x01, 0x74, 0x52, 
0x4e, 0x53, 0x00, 0x40, 0xe6, 0xd8, 0x66, 0x00, 
0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 
0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 
0x46, 0xc9, 0x6b, 0x3e, 0x00, 0x00, 0x00, 0x9e, 
0x49, 0x44, 0x41, 0x54, 0x18, 0xd3, 0x63, 0x60, 
0xc0, 0x00, 0x8c, 0x4c, 0xcc, 0x10, 0xc0, 0xc4, 
0x08, 0xe6, 0xb3, 0xb0, 0xb2, 0xb1, 0x73, 0x70, 
0x72, 0x71, 0xf3, 0xf0, 0xf2, 0xf1, 0xb3, 0x80, 
0x04, 0x04, 0x04, 0x85, 0x84, 0xa1, 0x4a, 0x44, 
0x44, 0x41, 0x02, 0xcc, 0x62, 0x68, 0x4a, 0x98, 
0xc5, 0xd1, 0x94, 0x30, 0xa3, 0x2b, 0x91, 0x00, 
0x2a, 0x91, 0x94, 0x92, 0x96, 0x91, 0x95, 0x93, 
0x57, 0x50, 0x54, 0x12, 0x60, 0x60, 0x50, 0x66, 
0x66, 0x56, 0x51, 0x55, 0x53, 0x53, 0x53, 0xd7, 
0x50, 0xd3, 0xd4, 0xd2, 0x66, 0x06, 0xea, 0xd1, 
0x61, 0xd6, 0xd5, 0xd3, 0x37, 0x30, 0x34, 0x32, 
0x36, 0x31, 0x35, 0x33, 0x07, 0x09, 0x28, 0x33, 
0x5b, 0x58, 0x5a, 0x59, 0xdb, 0xd8, 0xda, 0xd9, 
0x3b, 0x38, 0x3a, 0x81, 0x04, 0x18, 0x74, 0x9c, 
0x5d, 0x5c, 0xdd, 0xdc, 0x3d, 0x3c, 0xbd, 0xbc, 
0x7d, 0x7c, 0x25, 0x40, 0x02, 0xca, 0x7e, 0x4a, 
0xfe, 0x01, 0x81, 0x41, 0xc1, 0x21, 0x21, 0xa1, 
0x61, 0xca, 0x10, 0xd7, 0x0b, 0x40, 0xdd, 0x21, 
0xc0, 0xc2, 0x40, 0x04, 0x00, 0x00, 0xc0, 0xa1, 
0x12, 0x68, 0x9c, 0xcd, 0x37, 0xe1, 0x00, 0x00, 
0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 
0x74, 0x65, 0x3a, 0x63, 0x72, 0x65, 0x61, 0x74, 
0x65, 0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 0x31, 
0x32, 0x2d, 0x30, 0x31, 0x54, 0x32, 0x30, 0x3a, 
0x34, 0x33, 0x3a, 0x34, 0x35, 0x2b, 0x30, 0x35, 
0x3a, 0x30, 0x30, 0x9e, 0xee, 0x2e, 0xaa, 0x00, 
0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 
0x61, 0x74, 0x65, 0x3a, 0x6d, 0x6f, 0x64, 0x69, 
0x66, 0x79, 0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 
0x30, 0x39, 0x2d, 0x30, 0x31, 0x54, 0x32, 0x33, 
0x3a, 0x34, 0x34, 0x3a, 0x30, 0x36, 0x2b, 0x30, 
0x35, 0x3a, 0x30, 0x30, 0xca, 0x97, 0x55, 0xac, 
0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 
0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *parsers_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_parsers_png = new wxImage();
	if (!img_parsers_png || !img_parsers_png->IsOk())
	{
		wxMemoryInputStream img_parsers_pngIS(parsers_png_data, sizeof(parsers_png_data));
		img_parsers_png->LoadFile(img_parsers_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_parsers_png;
}
#define parsers_png_img parsers_png_img()

static wxBitmap *parsers_png_bmp()
{
	static wxBitmap *bmp_parsers_png;
	if (!bmp_parsers_png || !bmp_parsers_png->IsOk())
		bmp_parsers_png = new wxBitmap(*parsers_png_img);
	return bmp_parsers_png;
}
#define parsers_png_bmp parsers_png_bmp()

static wxIcon *parsers_png_ico()
{
	static wxIcon *ico_parsers_png;
	if (!ico_parsers_png || !ico_parsers_png->IsOk())
	{
		ico_parsers_png = new wxIcon();
		ico_parsers_png->CopyFromBitmap(*parsers_png_bmp);
	}
	return ico_parsers_png;
}
#define parsers_png_ico parsers_png_ico()

#endif // PARSERS_PNG_H
