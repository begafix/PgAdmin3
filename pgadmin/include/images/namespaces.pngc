#ifndef NAMESPACES_PNG_H
#define NAMESPACES_PNG_H

static const unsigned char namespaces_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x04, 0x03, 0x00, 0x00, 0x00, 0xed, 0xdd, 0xe2, 
0x52, 0x00, 0x00, 0x00, 0x2d, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0xd8, 0x94, 0x94, 0xbd, 
0x49, 0x49, 0xff, 0x8d, 0x8d, 0xff, 0x88, 0x88, 
0xff, 0x83, 0x83, 0xff, 0xff, 0xff, 0xc8, 0x68, 
0x68, 0xff, 0x7d, 0x7d, 0xd8, 0x5e, 0x5e, 0xff, 
0x76, 0x76, 0xff, 0x6f, 0x6f, 0xff, 0x68, 0x68, 
0xff, 0x60, 0x60, 0xff, 0x5c, 0x5c, 0x15, 0x89, 
0x1c, 0x8d, 0x00, 0x00, 0x00, 0x01, 0x74, 0x52, 
0x4e, 0x53, 0x00, 0x40, 0xe6, 0xd8, 0x66, 0x00, 
0x00, 0x00, 0x01, 0x62, 0x4b, 0x47, 0x44, 0x06, 
0x61, 0x66, 0xb8, 0x7d, 0x00, 0x00, 0x00, 0x09, 
0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x00, 0x48, 
0x00, 0x00, 0x00, 0x48, 0x00, 0x46, 0xc9, 0x6b, 
0x3e, 0x00, 0x00, 0x00, 0x73, 0x49, 0x44, 0x41, 
0x54, 0x08, 0xd7, 0x2d, 0x8e, 0x51, 0x15, 0x80, 
0x30, 0x08, 0x45, 0xa1, 0xc1, 0xa4, 0xc1, 0xd0, 
0xa1, 0x47, 0xa7, 0x1f, 0x46, 0x58, 0x84, 0x45, 
0x20, 0x8a, 0x11, 0x8c, 0x60, 0x04, 0x23, 0x18, 
0xc1, 0x08, 0x26, 0x91, 0x4d, 0xe1, 0x87, 0x73, 
0xcf, 0x85, 0x07, 0x00, 0x90, 0x83, 0x5a, 0xd8, 
0xfa, 0x6f, 0xa0, 0x94, 0x2a, 0xc2, 0x20, 0xa1, 
0x2f, 0x8c, 0x36, 0xd5, 0x7d, 0x35, 0x36, 0x0a, 
0x4b, 0xd7, 0x19, 0xa2, 0xb3, 0xe5, 0xac, 0xd9, 
0x01, 0x72, 0x1a, 0x44, 0x06, 0x6f, 0x32, 0x1f, 
0x6a, 0x5d, 0xe4, 0x49, 0x64, 0xf2, 0x26, 0x8f, 
0x7c, 0xe9, 0xe5, 0x4c, 0x56, 0x9d, 0x67, 0xdb, 
0xc2, 0x28, 0x91, 0x9f, 0x72, 0x9b, 0xee, 0xbb, 
0xa9, 0x69, 0xb8, 0xfc, 0xa1, 0xff, 0x1b, 0x2f, 
0x82, 0xd6, 0x15, 0x62, 0xd1, 0x7d, 0xf3, 0x7e, 
0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 
0x64, 0x61, 0x74, 0x65, 0x3a, 0x63, 0x72, 0x65, 
0x61, 0x74, 0x65, 0x00, 0x32, 0x30, 0x31, 0x30, 
0x2d, 0x31, 0x32, 0x2d, 0x30, 0x31, 0x54, 0x32, 
0x30, 0x3a, 0x34, 0x33, 0x3a, 0x34, 0x35, 0x2b, 
0x30, 0x35, 0x3a, 0x30, 0x30, 0x9e, 0xee, 0x2e, 
0xaa, 0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 
0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x6d, 0x6f, 
0x64, 0x69, 0x66, 0x79, 0x00, 0x32, 0x30, 0x31, 
0x30, 0x2d, 0x30, 0x39, 0x2d, 0x30, 0x31, 0x54, 
0x32, 0x33, 0x3a, 0x34, 0x34, 0x3a, 0x30, 0x36, 
0x2b, 0x30, 0x35, 0x3a, 0x30, 0x30, 0xca, 0x97, 
0x55, 0xac, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 
0x4e, 0x44, 0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *namespaces_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_namespaces_png = new wxImage();
	if (!img_namespaces_png || !img_namespaces_png->IsOk())
	{
		wxMemoryInputStream img_namespaces_pngIS(namespaces_png_data, sizeof(namespaces_png_data));
		img_namespaces_png->LoadFile(img_namespaces_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_namespaces_png;
}
#define namespaces_png_img namespaces_png_img()

static wxBitmap *namespaces_png_bmp()
{
	static wxBitmap *bmp_namespaces_png;
	if (!bmp_namespaces_png || !bmp_namespaces_png->IsOk())
		bmp_namespaces_png = new wxBitmap(*namespaces_png_img);
	return bmp_namespaces_png;
}
#define namespaces_png_bmp namespaces_png_bmp()

static wxIcon *namespaces_png_ico()
{
	static wxIcon *ico_namespaces_png;
	if (!ico_namespaces_png || !ico_namespaces_png->IsOk())
	{
		ico_namespaces_png = new wxIcon();
		ico_namespaces_png->CopyFromBitmap(*namespaces_png_bmp);
	}
	return ico_namespaces_png;
}
#define namespaces_png_ico namespaces_png_ico()

#endif // NAMESPACES_PNG_H
