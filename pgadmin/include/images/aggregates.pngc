#ifndef AGGREGATES_PNG_H
#define AGGREGATES_PNG_H

static const unsigned char aggregates_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x00, 0x3f, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0x6f, 0x6f, 0x6f, 0xaa, 
0xaa, 0xaa, 0xc9, 0xdf, 0xf1, 0xcb, 0xdf, 0xf1, 
0xcd, 0xe0, 0xf1, 0xcf, 0xe1, 0xf2, 0xd2, 0xe2, 
0xf2, 0xd5, 0xe3, 0xf3, 0x82, 0x90, 0x5d, 0x9c, 
0xbe, 0x44, 0xd8, 0xe4, 0xf3, 0xdb, 0xe5, 0xf3, 
0xde, 0xe7, 0xf4, 0x88, 0x88, 0x88, 0xe1, 0xe8, 
0xf4, 0xe4, 0xe9, 0xf5, 0xe6, 0xea, 0xf5, 0xe9, 
0xeb, 0xf6, 0xeb, 0xeb, 0xf6, 0xec, 0xec, 0xf6, 
0xec, 0x38, 0xb1, 0x22, 0x00, 0x00, 0x00, 0x01, 
0x74, 0x52, 0x4e, 0x53, 0x00, 0x40, 0xe6, 0xd8, 
0x66, 0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 
0x73, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 
0x48, 0x00, 0x46, 0xc9, 0x6b, 0x3e, 0x00, 0x00, 
0x00, 0x6d, 0x49, 0x44, 0x41, 0x54, 0x18, 0xd3, 
0x5d, 0xcf, 0x49, 0x16, 0x80, 0x20, 0x0c, 0x44, 
0x41, 0x82, 0x13, 0x0a, 0x34, 0xa2, 0xde, 0xff, 
0xac, 0xd2, 0x44, 0xe5, 0x49, 0x96, 0x3f, 0xb5, 
0x48, 0x8c, 0x31, 0xa2, 0x63, 0xcd, 0x33, 0x32, 
0x0c, 0xe3, 0x34, 0x2f, 0x4e, 0x5a, 0x58, 0xff, 
0x46, 0xc6, 0xce, 0xc8, 0xd4, 0x19, 0x99, 0x3b, 
0x23, 0x0b, 0xcd, 0xc6, 0xf1, 0x1a, 0x1c, 0x4d, 
0x0d, 0x41, 0x83, 0xa7, 0x29, 0xde, 0x87, 0xa8, 
0x21, 0xd0, 0x00, 0x1e, 0x48, 0x1a, 0x22, 0x0d, 
0xf7, 0x69, 0xaf, 0xc1, 0x0a, 0x0d, 0x10, 0x81, 
0xfc, 0x5e, 0x52, 0x0c, 0xf7, 0xf9, 0x78, 0xcf, 
0x2f, 0x06, 0xd8, 0x81, 0xb3, 0xfd, 0x53, 0xf7, 
0xe7, 0xf5, 0x05, 0xdb, 0x4e, 0xbf, 0x01, 0xda, 
0xed, 0x04, 0x68, 0xe7, 0xfb, 0x5e, 0x1d, 0x00, 
0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 
0x61, 0x74, 0x65, 0x3a, 0x63, 0x72, 0x65, 0x61, 
0x74, 0x65, 0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 
0x31, 0x32, 0x2d, 0x30, 0x31, 0x54, 0x32, 0x30, 
0x3a, 0x34, 0x33, 0x3a, 0x34, 0x34, 0x2b, 0x30, 
0x35, 0x3a, 0x30, 0x30, 0x38, 0x99, 0x25, 0x1e, 
0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 
0x64, 0x61, 0x74, 0x65, 0x3a, 0x6d, 0x6f, 0x64, 
0x69, 0x66, 0x79, 0x00, 0x32, 0x30, 0x31, 0x30, 
0x2d, 0x30, 0x39, 0x2d, 0x30, 0x31, 0x54, 0x32, 
0x33, 0x3a, 0x34, 0x34, 0x3a, 0x30, 0x36, 0x2b, 
0x30, 0x35, 0x3a, 0x30, 0x30, 0xca, 0x97, 0x55, 
0xac, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 
0x44, 0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *aggregates_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_aggregates_png = new wxImage();
	if (!img_aggregates_png || !img_aggregates_png->IsOk())
	{
		wxMemoryInputStream img_aggregates_pngIS(aggregates_png_data, sizeof(aggregates_png_data));
		img_aggregates_png->LoadFile(img_aggregates_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_aggregates_png;
}
#define aggregates_png_img aggregates_png_img()

static wxBitmap *aggregates_png_bmp()
{
	static wxBitmap *bmp_aggregates_png;
	if (!bmp_aggregates_png || !bmp_aggregates_png->IsOk())
		bmp_aggregates_png = new wxBitmap(*aggregates_png_img);
	return bmp_aggregates_png;
}
#define aggregates_png_bmp aggregates_png_bmp()

static wxIcon *aggregates_png_ico()
{
	static wxIcon *ico_aggregates_png;
	if (!ico_aggregates_png || !ico_aggregates_png->IsOk())
	{
		ico_aggregates_png = new wxIcon();
		ico_aggregates_png->CopyFromBitmap(*aggregates_png_bmp);
	}
	return ico_aggregates_png;
}
#define aggregates_png_ico aggregates_png_ico()

#endif // AGGREGATES_PNG_H
