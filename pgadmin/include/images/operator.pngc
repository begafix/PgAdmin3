#ifndef OPERATOR_PNG_H
#define OPERATOR_PNG_H

static const unsigned char operator_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x04, 0x03, 0x00, 0x00, 0x00, 0xed, 0xdd, 0xe2, 
0x52, 0x00, 0x00, 0x00, 0x2a, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0x6f, 0x6f, 0x6f, 0xaa, 
0xaa, 0xaa, 0xe7, 0xea, 0xf5, 0xe5, 0xe9, 0xf5, 
0xe3, 0xe9, 0xf5, 0xe1, 0xe8, 0xf4, 0xdf, 0xe7, 
0xf4, 0xdd, 0xe6, 0xf4, 0xdb, 0xe5, 0xf3, 0xd8, 
0xe5, 0xf3, 0xd6, 0xe4, 0xf3, 0xd4, 0xe3, 0xf3, 
0xd2, 0xe2, 0xf2, 0x34, 0x9e, 0x47, 0xe6, 0x00, 
0x00, 0x00, 0x01, 0x74, 0x52, 0x4e, 0x53, 0x00, 
0x40, 0xe6, 0xd8, 0x66, 0x00, 0x00, 0x00, 0x09, 
0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x00, 0x48, 
0x00, 0x00, 0x00, 0x48, 0x00, 0x46, 0xc9, 0x6b, 
0x3e, 0x00, 0x00, 0x00, 0x48, 0x49, 0x44, 0x41, 
0x54, 0x08, 0xd7, 0x63, 0x60, 0xc0, 0x06, 0x18, 
0x85, 0xa0, 0x0c, 0x61, 0x47, 0x28, 0x43, 0x24, 
0x10, 0xca, 0x10, 0x4d, 0x84, 0xa8, 0x10, 0x14, 
0x2b, 0x14, 0x04, 0xa9, 0x12, 0x76, 0x4d, 0xef, 
0x5c, 0x7d, 0x10, 0xa4, 0x22, 0xac, 0x62, 0xd6, 
0x9e, 0x8b, 0x40, 0x86, 0xa2, 0xa0, 0xe4, 0x42, 
0x41, 0x01, 0xb0, 0x2a, 0xa9, 0x8d, 0x50, 0x5d, 
0xd2, 0x07, 0xa1, 0x0c, 0x99, 0x8b, 0x30, 0x2b, 
0x04, 0xb0, 0xda, 0x0c, 0x00, 0xfc, 0xee, 0x0b, 
0x6e, 0xfb, 0x04, 0xfd, 0x81, 0x00, 0x00, 0x00, 
0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 
0x65, 0x3a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 
0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 0x31, 0x32, 
0x2d, 0x30, 0x31, 0x54, 0x32, 0x30, 0x3a, 0x34, 
0x33, 0x3a, 0x34, 0x35, 0x2b, 0x30, 0x35, 0x3a, 
0x30, 0x30, 0x9e, 0xee, 0x2e, 0xaa, 0x00, 0x00, 
0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 
0x74, 0x65, 0x3a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 
0x79, 0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 0x30, 
0x39, 0x2d, 0x30, 0x31, 0x54, 0x32, 0x33, 0x3a, 
0x34, 0x34, 0x3a, 0x30, 0x36, 0x2b, 0x30, 0x35, 
0x3a, 0x30, 0x30, 0xca, 0x97, 0x55, 0xac, 0x00, 
0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 
0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *operator_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_operator_png = new wxImage();
	if (!img_operator_png || !img_operator_png->IsOk())
	{
		wxMemoryInputStream img_operator_pngIS(operator_png_data, sizeof(operator_png_data));
		img_operator_png->LoadFile(img_operator_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_operator_png;
}
#define operator_png_img operator_png_img()

static wxBitmap *operator_png_bmp()
{
	static wxBitmap *bmp_operator_png;
	if (!bmp_operator_png || !bmp_operator_png->IsOk())
		bmp_operator_png = new wxBitmap(*operator_png_img);
	return bmp_operator_png;
}
#define operator_png_bmp operator_png_bmp()

static wxIcon *operator_png_ico()
{
	static wxIcon *ico_operator_png;
	if (!ico_operator_png || !ico_operator_png->IsOk())
	{
		ico_operator_png = new wxIcon();
		ico_operator_png->CopyFromBitmap(*operator_png_bmp);
	}
	return ico_operator_png;
}
#define operator_png_ico operator_png_ico()

#endif // OPERATOR_PNG_H
