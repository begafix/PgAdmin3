#ifndef CONFIGURATIONS_PNG_H
#define CONFIGURATIONS_PNG_H

static const unsigned char configurations_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x00, 0x00, 0x00, 0x00, 0x3a, 0x98, 0xa0, 
0xbd, 0x00, 0x00, 0x00, 0x02, 0x74, 0x52, 0x4e, 
0x53, 0x00, 0x00, 0x76, 0x93, 0xcd, 0x38, 0x00, 
0x00, 0x00, 0x02, 0x62, 0x4b, 0x47, 0x44, 0x00, 
0x00, 0xaa, 0x8d, 0x23, 0x32, 0x00, 0x00, 0x00, 
0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x00, 
0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 0x46, 0xc9, 
0x6b, 0x3e, 0x00, 0x00, 0x00, 0xa5, 0x49, 0x44, 
0x41, 0x54, 0x18, 0xd3, 0x63, 0x60, 0x00, 0x81, 
0x09, 0x71, 0x31, 0xf1, 0x13, 0x19, 0x10, 0x60, 
0xf9, 0xcc, 0x2b, 0x8f, 0x7f, 0xc7, 0x23, 0x09, 
0xd4, 0x1d, 0xbc, 0xbd, 0x28, 0x26, 0x26, 0xa6, 
0x18, 0x2e, 0x90, 0xf8, 0xe9, 0x10, 0x48, 0x4d, 
0x0c, 0x8c, 0xdf, 0x17, 0xf3, 0xaf, 0x1d, 0x59, 
0x4d, 0x5f, 0xcc, 0xdf, 0x8f, 0xc8, 0x6a, 0xfa, 
0x62, 0xfe, 0xbc, 0xe9, 0x07, 0xab, 0xf9, 0x1f, 
0x0f, 0xb2, 0x6b, 0x4d, 0xcc, 0xdf, 0xd7, 0x3d, 
0x60, 0x35, 0xff, 0x7f, 0xf7, 0xc7, 0x03, 0xed, 
0xaa, 0xba, 0xbe, 0xb2, 0x02, 0xa2, 0xe6, 0xeb, 
0xcb, 0x87, 0x57, 0xee, 0xc5, 0x00, 0x05, 0xfa, 
0xa1, 0x6a, 0x6e, 0x9f, 0xd9, 0xbe, 0xfa, 0x7a, 
0x1c, 0xc3, 0x9a, 0x2a, 0xa8, 0x9a, 0xeb, 0xa7, 
0x4e, 0x9f, 0xd9, 0x3f, 0x73, 0x02, 0x03, 0xc3, 
0x9a, 0x14, 0xb0, 0x9a, 0x8b, 0x07, 0x6f, 0xc7, 
0x24, 0xd6, 0x2d, 0x07, 0x59, 0x03, 0x56, 0xb3, 
0xf0, 0xf8, 0xf5, 0x98, 0x3e, 0x98, 0xc3, 0x80, 
0x6a, 0x56, 0x2e, 0x7e, 0x83, 0xe0, 0x83, 0xd4, 
0x5c, 0xbf, 0x8e, 0xcc, 0x07, 0xeb, 0x5a, 0x03, 
0x65, 0x02, 0x00, 0x3c, 0xaa, 0x70, 0x3b, 0x00, 
0xf1, 0x5f, 0x61, 0x00, 0x00, 0x00, 0x25, 0x74, 
0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 
0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x00, 0x32, 
0x30, 0x31, 0x30, 0x2d, 0x31, 0x32, 0x2d, 0x30, 
0x31, 0x54, 0x32, 0x30, 0x3a, 0x34, 0x33, 0x3a, 
0x34, 0x34, 0x2b, 0x30, 0x35, 0x3a, 0x30, 0x30, 
0x38, 0x99, 0x25, 0x1e, 0x00, 0x00, 0x00, 0x25, 
0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 
0x3a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x00, 
0x32, 0x30, 0x31, 0x30, 0x2d, 0x30, 0x39, 0x2d, 
0x30, 0x31, 0x54, 0x32, 0x33, 0x3a, 0x34, 0x34, 
0x3a, 0x30, 0x36, 0x2b, 0x30, 0x35, 0x3a, 0x30, 
0x30, 0xca, 0x97, 0x55, 0xac, 0x00, 0x00, 0x00, 
0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 
0x82, 
};

#include "wx/mstream.h"

static wxImage *configurations_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_configurations_png = new wxImage();
	if (!img_configurations_png || !img_configurations_png->IsOk())
	{
		wxMemoryInputStream img_configurations_pngIS(configurations_png_data, sizeof(configurations_png_data));
		img_configurations_png->LoadFile(img_configurations_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_configurations_png;
}
#define configurations_png_img configurations_png_img()

static wxBitmap *configurations_png_bmp()
{
	static wxBitmap *bmp_configurations_png;
	if (!bmp_configurations_png || !bmp_configurations_png->IsOk())
		bmp_configurations_png = new wxBitmap(*configurations_png_img);
	return bmp_configurations_png;
}
#define configurations_png_bmp configurations_png_bmp()

static wxIcon *configurations_png_ico()
{
	static wxIcon *ico_configurations_png;
	if (!ico_configurations_png || !ico_configurations_png->IsOk())
	{
		ico_configurations_png = new wxIcon();
		ico_configurations_png->CopyFromBitmap(*configurations_png_bmp);
	}
	return ico_configurations_png;
}
#define configurations_png_ico configurations_png_ico()

#endif // CONFIGURATIONS_PNG_H
