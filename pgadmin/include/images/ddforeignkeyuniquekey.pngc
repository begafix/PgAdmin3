#ifndef DDFOREIGNKEYUNIQUEKEY_PNG_H
#define DDFOREIGNKEYUNIQUEKEY_PNG_H

static const unsigned char ddforeignkeyuniquekey_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x0a, 
0x08, 0x06, 0x00, 0x00, 0x00, 0x89, 0xc7, 0x1f, 
0x80, 0x00, 0x00, 0x00, 0x01, 0x73, 0x52, 0x47, 
0x42, 0x00, 0xae, 0xce, 0x1c, 0xe9, 0x00, 0x00, 
0x00, 0x06, 0x62, 0x4b, 0x47, 0x44, 0x00, 0xff, 
0x00, 0xff, 0x00, 0xff, 0xa0, 0xbd, 0xa7, 0x93, 
0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 
0x00, 0x00, 0x0b, 0x13, 0x00, 0x00, 0x0b, 0x13, 
0x01, 0x00, 0x9a, 0x9c, 0x18, 0x00, 0x00, 0x00, 
0x07, 0x74, 0x49, 0x4d, 0x45, 0x07, 0xdb, 0x06, 
0x19, 0x0d, 0x23, 0x1c, 0xb4, 0x0c, 0x13, 0x84, 
0x00, 0x00, 0x00, 0xe9, 0x49, 0x44, 0x41, 0x54, 
0x18, 0xd3, 0x6d, 0x8e, 0xbd, 0x4a, 0xc4, 0x40, 
0x18, 0x45, 0xcf, 0x37, 0x44, 0x58, 0x50, 0xf1, 
0x01, 0x16, 0x16, 0x02, 0x16, 0x0a, 0x19, 0x2c, 
0x53, 0xa6, 0xc8, 0x94, 0x29, 0x94, 0x08, 0x69, 
0x7d, 0x02, 0x5f, 0xc0, 0x74, 0xe2, 0x0b, 0x58, 
0x5a, 0x25, 0x85, 0xc5, 0xd6, 0x1b, 0xb0, 0x49, 
0xb3, 0x9d, 0xa9, 0xa7, 0x70, 0x21, 0xc5, 0x54, 
0x5b, 0xae, 0x60, 0x63, 0x24, 0x44, 0x63, 0xe3, 
0xcf, 0x82, 0x9e, 0xee, 0xc2, 0xb9, 0x97, 0x2b, 
0x7c, 0x51, 0x55, 0xd5, 0xe8, 0xfb, 0x3e, 0x00, 
0xce, 0x39, 0x92, 0x24, 0x11, 0x00, 0xa9, 0xeb, 
0x7a, 0xec, 0xba, 0x8e, 0x20, 0x08, 0x00, 0x10, 
0x11, 0x44, 0x04, 0x6b, 0x2d, 0x93, 0xc9, 0x04, 
0xcf, 0x5a, 0x4b, 0x1c, 0xc7, 0xf4, 0x7d, 0x4f, 
0x51, 0x14, 0x00, 0x2c, 0x36, 0x86, 0x2c, 0x3a, 
0x64, 0xaf, 0x7d, 0x40, 0x69, 0xad, 0x71, 0xce, 
0x31, 0x0c, 0x03, 0x69, 0x9a, 0xb2, 0xd8, 0x18, 
0x4e, 0xcf, 0x67, 0xcc, 0x97, 0x6b, 0xb4, 0xd6, 
0x28, 0x63, 0x8c, 0x58, 0x6b, 0x69, 0xdb, 0x96, 
0x8b, 0xbb, 0x17, 0xae, 0x2e, 0x8f, 0x90, 0x51, 
0x00, 0x30, 0xc6, 0x88, 0x02, 0xc8, 0xf3, 0x5c, 
0x9a, 0xa6, 0x21, 0x8b, 0xa6, 0xdc, 0xdc, 0xae, 
0xe0, 0x5d, 0xbe, 0xbf, 0xa3, 0xd8, 0xe2, 0xec, 
0x64, 0xe0, 0x60, 0x77, 0x07, 0xf9, 0x50, 0xff, 
0x0b, 0x9e, 0xe7, 0x71, 0x3c, 0xdb, 0x47, 0xf5, 
0xde, 0x5f, 0x21, 0x0c, 0x43, 0xca, 0xb2, 0xe4, 
0xf1, 0xe9, 0x99, 0xd7, 0xb7, 0xdf, 0x92, 0x6c, 
0x2f, 0x5c, 0xdf, 0xaf, 0xc6, 0xf9, 0x72, 0xfd, 
0x93, 0xb3, 0x68, 0xca, 0x27, 0xe5, 0x50, 0x4c, 
0x2d, 0xad, 0xd7, 0xe4, 0x52, 0x00, 0x00, 0x00, 
0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 
0x82, 
};

#include "wx/mstream.h"

static wxImage *ddforeignkeyuniquekey_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_ddforeignkeyuniquekey_png = new wxImage();
	if (!img_ddforeignkeyuniquekey_png || !img_ddforeignkeyuniquekey_png->IsOk())
	{
		wxMemoryInputStream img_ddforeignkeyuniquekey_pngIS(ddforeignkeyuniquekey_png_data, sizeof(ddforeignkeyuniquekey_png_data));
		img_ddforeignkeyuniquekey_png->LoadFile(img_ddforeignkeyuniquekey_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_ddforeignkeyuniquekey_png;
}
#define ddforeignkeyuniquekey_png_img ddforeignkeyuniquekey_png_img()

static wxBitmap *ddforeignkeyuniquekey_png_bmp()
{
	static wxBitmap *bmp_ddforeignkeyuniquekey_png;
	if (!bmp_ddforeignkeyuniquekey_png || !bmp_ddforeignkeyuniquekey_png->IsOk())
		bmp_ddforeignkeyuniquekey_png = new wxBitmap(*ddforeignkeyuniquekey_png_img);
	return bmp_ddforeignkeyuniquekey_png;
}
#define ddforeignkeyuniquekey_png_bmp ddforeignkeyuniquekey_png_bmp()

static wxIcon *ddforeignkeyuniquekey_png_ico()
{
	static wxIcon *ico_ddforeignkeyuniquekey_png;
	if (!ico_ddforeignkeyuniquekey_png || !ico_ddforeignkeyuniquekey_png->IsOk())
	{
		ico_ddforeignkeyuniquekey_png = new wxIcon();
		ico_ddforeignkeyuniquekey_png->CopyFromBitmap(*ddforeignkeyuniquekey_png_bmp);
	}
	return ico_ddforeignkeyuniquekey_png;
}
#define ddforeignkeyuniquekey_png_ico ddforeignkeyuniquekey_png_ico()

#endif // DDFOREIGNKEYUNIQUEKEY_PNG_H
