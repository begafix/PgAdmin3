#ifndef SYNONYM_PNG_H
#define SYNONYM_PNG_H

static const unsigned char synonym_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x00, 0xa8, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0x9d, 0xc2, 0xce, 0x59, 
0x97, 0xab, 0xc8, 0xfa, 0xff, 0xc1, 0xf8, 0xfe, 
0xb8, 0xf5, 0xfd, 0xad, 0xf1, 0xfc, 0xa1, 0xed, 
0xfa, 0x93, 0xe9, 0xf9, 0x85, 0xe4, 0xf7, 0x92, 
0xb6, 0xba, 0xc7, 0xfa, 0xff, 0x6e, 0xb1, 0xe5, 
0x35, 0x7f, 0xd3, 0x4f, 0xa6, 0xe1, 0x66, 0xd9, 
0xf3, 0xc6, 0xfa, 0xff, 0xbe, 0xf7, 0xfe, 0xcb, 
0xe7, 0xf6, 0xc4, 0xe2, 0xf4, 0xba, 0xdb, 0xf1, 
0xaf, 0xd3, 0xee, 0xa4, 0xca, 0xeb, 0x55, 0xd4, 
0xf1, 0x48, 0xcf, 0xf0, 0xc5, 0xf9, 0xff, 0x8a, 
0xb4, 0xb9, 0xb3, 0xf3, 0xfc, 0x64, 0xad, 0xe3, 
0x41, 0xa2, 0xdf, 0x46, 0xcf, 0xef, 0x3a, 0xcb, 
0xee, 0x30, 0xc7, 0xed, 0xbb, 0xf6, 0xfd, 0xb1, 
0xf3, 0xfc, 0xa5, 0xef, 0xfb, 0xbf, 0xdf, 0xf3, 
0xb5, 0xd7, 0xf0, 0xa9, 0xcf, 0xec, 0x9e, 0xc6, 
0xe9, 0x95, 0xc0, 0xe6, 0x38, 0xca, 0xee, 0x2e, 
0xc7, 0xec, 0xaf, 0xf2, 0xfc, 0x77, 0xae, 0xb6, 
0x96, 0xea, 0xf9, 0x57, 0xa9, 0xe2, 0x36, 0x9e, 
0xde, 0x2d, 0xc6, 0xec, 0x77, 0xdf, 0xf5, 0x68, 
0xda, 0xf3, 0x5a, 0xd6, 0xf2, 0x4c, 0xd1, 0xf0, 
0x40, 0xcd, 0xef, 0x35, 0xc9, 0xed, 0x2b, 0xc6, 
0xec, 0xcc, 0x03, 0xa5, 0x06, 0x00, 0x00, 0x00, 
0x01, 0x74, 0x52, 0x4e, 0x53, 0x00, 0x40, 0xe6, 
0xd8, 0x66, 0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 
0x59, 0x73, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 
0x00, 0x48, 0x00, 0x46, 0xc9, 0x6b, 0x3e, 0x00, 
0x00, 0x00, 0x6d, 0x49, 0x44, 0x41, 0x54, 0x18, 
0xd3, 0x63, 0x60, 0x20, 0x1d, 0x30, 0x32, 0xc1, 
0x01, 0x23, 0x58, 0x80, 0x89, 0x19, 0x08, 0x58, 
0x58, 0xd9, 0xd8, 0x39, 0x38, 0x21, 0x22, 0x4c, 
0xcc, 0x5c, 0xdc, 0x3c, 0xbc, 0x20, 0xc0, 0xc7, 
0x0f, 0x16, 0x61, 0x62, 0x16, 0x10, 0xe4, 0x15, 
0x12, 0x16, 0x11, 0x15, 0xe3, 0x15, 0x97, 0x00, 
0x89, 0x30, 0x49, 0x4a, 0x49, 0xcb, 0x80, 0x55, 
0xc8, 0xca, 0xc9, 0x2b, 0x30, 0x01, 0x05, 0x14, 
0x95, 0x94, 0x79, 0x55, 0x54, 0xd5, 0xd4, 0x35, 
0x78, 0x35, 0xb5, 0xc0, 0x2a, 0xb4, 0x75, 0x74, 
0xf5, 0xc0, 0x2a, 0xf4, 0x0d, 0x20, 0x66, 0x00, 
0x8d, 0x37, 0x34, 0x32, 0x36, 0x31, 0x35, 0x33, 
0x87, 0xd8, 0x82, 0xe1, 0x0e, 0x2a, 0x00, 0x00, 
0xc5, 0xaa, 0x07, 0x61, 0x1b, 0x7f, 0xec, 0x48, 
0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 
0x64, 0x61, 0x74, 0x65, 0x3a, 0x63, 0x72, 0x65, 
0x61, 0x74, 0x65, 0x00, 0x32, 0x30, 0x31, 0x30, 
0x2d, 0x31, 0x32, 0x2d, 0x30, 0x31, 0x54, 0x32, 
0x30, 0x3a, 0x34, 0x33, 0x3a, 0x34, 0x35, 0x2b, 
0x30, 0x35, 0x3a, 0x30, 0x30, 0x9e, 0xee, 0x2e, 
0xaa, 0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 0x58, 
0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x6d, 0x6f, 
0x64, 0x69, 0x66, 0x79, 0x00, 0x32, 0x30, 0x31, 
0x30, 0x2d, 0x30, 0x39, 0x2d, 0x30, 0x31, 0x54, 
0x32, 0x33, 0x3a, 0x34, 0x34, 0x3a, 0x30, 0x36, 
0x2b, 0x30, 0x35, 0x3a, 0x30, 0x30, 0xca, 0x97, 
0x55, 0xac, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 
0x4e, 0x44, 0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *synonym_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_synonym_png = new wxImage();
	if (!img_synonym_png || !img_synonym_png->IsOk())
	{
		wxMemoryInputStream img_synonym_pngIS(synonym_png_data, sizeof(synonym_png_data));
		img_synonym_png->LoadFile(img_synonym_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_synonym_png;
}
#define synonym_png_img synonym_png_img()

static wxBitmap *synonym_png_bmp()
{
	static wxBitmap *bmp_synonym_png;
	if (!bmp_synonym_png || !bmp_synonym_png->IsOk())
		bmp_synonym_png = new wxBitmap(*synonym_png_img);
	return bmp_synonym_png;
}
#define synonym_png_bmp synonym_png_bmp()

static wxIcon *synonym_png_ico()
{
	static wxIcon *ico_synonym_png;
	if (!ico_synonym_png || !ico_synonym_png->IsOk())
	{
		ico_synonym_png = new wxIcon();
		ico_synonym_png->CopyFromBitmap(*synonym_png_bmp);
	}
	return ico_synonym_png;
}
#define synonym_png_ico synonym_png_ico()

#endif // SYNONYM_PNG_H
