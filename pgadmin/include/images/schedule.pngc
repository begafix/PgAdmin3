#ifndef SCHEDULE_PNG_H
#define SCHEDULE_PNG_H

static const unsigned char schedule_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x01, 0x2f, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0xe2, 0x82, 0x76, 0xe7, 
0x9f, 0x94, 0xe3, 0x89, 0x7e, 0xe7, 0x96, 0x8b, 
0xf6, 0xd3, 0xd0, 0xef, 0xc6, 0xbe, 0xe1, 0x93, 
0x85, 0xe2, 0x8d, 0x80, 0xe2, 0x87, 0x7b, 0xe2, 
0x7c, 0x71, 0xe2, 0x76, 0x6c, 0xe3, 0x72, 0x68, 
0xf0, 0xad, 0xa9, 0xe1, 0x92, 0x84, 0xe5, 0x9b, 
0x90, 0xed, 0xbf, 0xba, 0xf1, 0xe0, 0xdf, 0xf0, 
0xf6, 0xf8, 0xe9, 0xda, 0xdb, 0xe4, 0xb0, 0xad, 
0xe3, 0x7a, 0x74, 0xe3, 0x63, 0x5b, 0xf0, 0xa6, 
0xa2, 0xf5, 0xdd, 0xd9, 0xf0, 0xd3, 0xd0, 0xf4, 
0xfb, 0xfd, 0xef, 0xf9, 0xfc, 0x1e, 0x50, 0xad, 
0xe5, 0xf4, 0xfa, 0xdf, 0xf2, 0xf9, 0xdd, 0xbe, 
0xc1, 0xe1, 0x6e, 0x69, 0xe3, 0x57, 0x51, 0xf6, 
0xc6, 0xc4, 0xf4, 0xfa, 0xfd, 0xef, 0xf8, 0xfc, 
0xea, 0xf6, 0xfb, 0xde, 0xf2, 0xf9, 0xd8, 0xef, 
0xf7, 0xd2, 0xed, 0xf6, 0xd8, 0x9d, 0x9f, 0xe4, 
0x4f, 0x49, 0xee, 0x8f, 0x8d, 0xef, 0xdf, 0xdf, 
0xee, 0xf8, 0xfc, 0xe9, 0xf6, 0xfb, 0xe3, 0xf4, 
0xfa, 0xcc, 0xea, 0xf5, 0xcd, 0xc6, 0xce, 0xe4, 
0x48, 0x44, 0xe8, 0x60, 0x5c, 0xed, 0xf5, 0xf8, 
0xe8, 0xf6, 0xfb, 0xe3, 0xf3, 0xf9, 0xdd, 0xf1, 
0xf8, 0x89, 0xae, 0xd9, 0xcb, 0xea, 0xf5, 0xc5, 
0xe7, 0xf4, 0xc0, 0xe1, 0xee, 0xe4, 0x42, 0x3e, 
0xe5, 0x40, 0x3d, 0xe7, 0xd9, 0xda, 0xe2, 0xf3, 
0xf9, 0xdc, 0xf1, 0xf8, 0xd6, 0xee, 0xf7, 0x82, 
0xab, 0xd8, 0xbf, 0xe5, 0xf2, 0xc3, 0xbf, 0xc9, 
0xe4, 0x3c, 0x39, 0xe9, 0x56, 0x53, 0xed, 0xaf, 
0xa8, 0xe2, 0xaf, 0xad, 0xdb, 0xf0, 0xf8, 0xd5, 
0xee, 0xf7, 0xcf, 0xec, 0xf6, 0xc9, 0xe9, 0xf5, 
0x82, 0xab, 0xd7, 0x7b, 0xa8, 0xd6, 0xcd, 0x8c, 
0x91, 0xe5, 0x36, 0x33, 0xef, 0x81, 0x7f, 0xe2, 
0x7a, 0x74, 0xda, 0xbd, 0xc0, 0xcf, 0xeb, 0xf6, 
0xc9, 0xe9, 0xf4, 0xc3, 0xe7, 0xf3, 0xbd, 0xe4, 
0xf2, 0x7a, 0xa8, 0xd6, 0xc4, 0xa6, 0xaf, 0xde, 
0x4b, 0x4b, 0xe5, 0x33, 0x30, 0xf7, 0xbb, 0xbb, 
0xe0, 0x6e, 0x69, 0xd6, 0x9c, 0x9f, 0xca, 0xc4, 
0xcd, 0xbe, 0xe0, 0xed, 0xc2, 0xbe, 0xc9, 0xcc, 
0x8b, 0x91, 0xe5, 0x31, 0x2e, 0xf1, 0x8b, 0x8b, 
0x2c, 0xbc, 0x56, 0xbe, 0x00, 0x00, 0x00, 0x01, 
0x74, 0x52, 0x4e, 0x53, 0x00, 0x40, 0xe6, 0xd8, 
0x66, 0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 
0x73, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 
0x48, 0x00, 0x46, 0xc9, 0x6b, 0x3e, 0x00, 0x00, 
0x00, 0xb3, 0x49, 0x44, 0x41, 0x54, 0x18, 0xd3, 
0x63, 0x60, 0xc0, 0x0a, 0x18, 0x99, 0x98, 0x59, 
0x18, 0x59, 0xe1, 0x5c, 0x36, 0x76, 0x0e, 0x4e, 
0x46, 0x2e, 0x6e, 0x1e, 0x5e, 0x98, 0x00, 0x1f, 
0xbf, 0x80, 0xa0, 0x90, 0xb0, 0x88, 0xa8, 0x98, 
0x38, 0x98, 0x2b, 0xc1, 0xce, 0x2f, 0x29, 0x25, 
0x2d, 0x23, 0x2b, 0x27, 0xaf, 0xa0, 0xa8, 0x04, 
0xd6, 0xcf, 0x21, 0xa0, 0xac, 0xa2, 0x2a, 0xa3, 
0xa6, 0xae, 0xa1, 0xa9, 0xa5, 0x0d, 0x12, 0x60, 
0xe2, 0xd4, 0xd1, 0xd5, 0xd3, 0x97, 0x51, 0xd7, 
0x30, 0x30, 0x34, 0x32, 0x06, 0x09, 0x30, 0x33, 
0x9a, 0x98, 0x9a, 0x99, 0xcb, 0x58, 0x58, 0x5a, 
0x59, 0xdb, 0xd8, 0x82, 0x04, 0x58, 0xb8, 0xec, 
0xec, 0x1d, 0x1c, 0x2d, 0x64, 0x9c, 0x9c, 0x5d, 
0x5c, 0xdd, 0x40, 0x02, 0xee, 0xdc, 0x1e, 0x9e, 
0x5e, 0xde, 0x3e, 0xbe, 0x32, 0x7e, 0xfe, 0x01, 
0x81, 0x60, 0x6b, 0x78, 0x82, 0x82, 0x43, 0x42, 
0xc3, 0xc2, 0x23, 0x22, 0xa3, 0xa2, 0x63, 0xc0, 
0x02, 0xbc, 0x62, 0xb1, 0x71, 0xf1, 0x09, 0x89, 
0x49, 0x51, 0xc9, 0x29, 0x50, 0x87, 0x89, 0x2b, 
0x6a, 0x19, 0xd9, 0xb8, 0x06, 0x44, 0xa7, 0xc0, 
0xdd, 0xae, 0xa4, 0x6d, 0x6c, 0xeb, 0x16, 0x18, 
0xc3, 0x40, 0x1c, 0x00, 0x00, 0x95, 0xf7, 0x19, 
0x84, 0xec, 0x44, 0x1a, 0x19, 0x00, 0x00, 0x00, 
0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 
0x65, 0x3a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 
0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 0x31, 0x32, 
0x2d, 0x30, 0x31, 0x54, 0x32, 0x30, 0x3a, 0x34, 
0x33, 0x3a, 0x34, 0x35, 0x2b, 0x30, 0x35, 0x3a, 
0x30, 0x30, 0x9e, 0xee, 0x2e, 0xaa, 0x00, 0x00, 
0x00, 0x25, 0x74, 0x45, 0x58, 0x74, 0x64, 0x61, 
0x74, 0x65, 0x3a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 
0x79, 0x00, 0x32, 0x30, 0x31, 0x30, 0x2d, 0x30, 
0x39, 0x2d, 0x30, 0x31, 0x54, 0x32, 0x33, 0x3a, 
0x34, 0x34, 0x3a, 0x30, 0x36, 0x2b, 0x30, 0x35, 
0x3a, 0x30, 0x30, 0xca, 0x97, 0x55, 0xac, 0x00, 
0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 
0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *schedule_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_schedule_png = new wxImage();
	if (!img_schedule_png || !img_schedule_png->IsOk())
	{
		wxMemoryInputStream img_schedule_pngIS(schedule_png_data, sizeof(schedule_png_data));
		img_schedule_png->LoadFile(img_schedule_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_schedule_png;
}
#define schedule_png_img schedule_png_img()

static wxBitmap *schedule_png_bmp()
{
	static wxBitmap *bmp_schedule_png;
	if (!bmp_schedule_png || !bmp_schedule_png->IsOk())
		bmp_schedule_png = new wxBitmap(*schedule_png_img);
	return bmp_schedule_png;
}
#define schedule_png_bmp schedule_png_bmp()

static wxIcon *schedule_png_ico()
{
	static wxIcon *ico_schedule_png;
	if (!ico_schedule_png || !ico_schedule_png->IsOk())
	{
		ico_schedule_png = new wxIcon();
		ico_schedule_png->CopyFromBitmap(*schedule_png_bmp);
	}
	return ico_schedule_png;
}
#define schedule_png_ico schedule_png_ico()

#endif // SCHEDULE_PNG_H
