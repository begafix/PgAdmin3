#ifndef NAMESPACE_PNG_H
#define NAMESPACE_PNG_H

static const unsigned char namespace_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x00, 0x36, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0xd8, 0x94, 0x94, 0xbd, 
0x49, 0x49, 0xff, 0x8d, 0x8d, 0xff, 0x8a, 0x8a, 
0xff, 0x88, 0x88, 0xff, 0x84, 0x84, 0xff, 0xff, 
0xff, 0xff, 0x80, 0x80, 0xff, 0x7c, 0x7c, 0xff, 
0x77, 0x77, 0xff, 0x73, 0x73, 0xff, 0x6d, 0x6d, 
0xff, 0x69, 0x69, 0xff, 0x65, 0x65, 0xff, 0x60, 
0x60, 0xff, 0x5e, 0x5e, 0xff, 0x59, 0x59, 0xfb, 
0x3f, 0x48, 0xc1, 0x00, 0x00, 0x00, 0x01, 0x74, 
0x52, 0x4e, 0x53, 0x00, 0x40, 0xe6, 0xd8, 0x66, 
0x00, 0x00, 0x00, 0x01, 0x62, 0x4b, 0x47, 0x44, 
0x07, 0x16, 0x61, 0x88, 0xeb, 0x00, 0x00, 0x00, 
0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x00, 
0x48, 0x00, 0x00, 0x00, 0x48, 0x00, 0x46, 0xc9, 
0x6b, 0x3e, 0x00, 0x00, 0x00, 0x6c, 0x49, 0x44, 
0x41, 0x54, 0x18, 0xd3, 0x5d, 0x4f, 0x8b, 0x12, 
0x80, 0x20, 0x08, 0x83, 0x59, 0x69, 0xf8, 0xca, 
0xff, 0xff, 0xd9, 0x04, 0xcf, 0xd3, 0xe2, 0x38, 
0x75, 0x43, 0xd8, 0x20, 0xb2, 0x60, 0x80, 0x69, 
0x0b, 0x86, 0x73, 0x3b, 0xc3, 0x38, 0xd0, 0x93, 
0x17, 0x3e, 0xc1, 0x76, 0x4c, 0x7c, 0x81, 0xbd, 
0xb7, 0x6b, 0xe0, 0xa0, 0x58, 0x99, 0xa0, 0x0c, 
0xe3, 0xee, 0x58, 0x55, 0xbc, 0x3d, 0x09, 0xa2, 
0x75, 0x88, 0x40, 0xff, 0x08, 0x08, 0xd1, 0x88, 
0x18, 0x8d, 0x88, 0xe8, 0x2d, 0x69, 0xb5, 0xa4, 
0x31, 0x24, 0xcf, 0xa1, 0x79, 0xca, 0x94, 0x21, 
0x5b, 0x96, 0x91, 0xaa, 0xc6, 0xea, 0x6e, 0xf5, 
0x41, 0xcf, 0xcf, 0x32, 0xad, 0xfd, 0xd7, 0x9d, 
0xf8, 0x05, 0x47, 0x4f, 0x02, 0xa5, 0xaf, 0xb6, 
0x01, 0x95, 0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 
0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x63, 
0x72, 0x65, 0x61, 0x74, 0x65, 0x00, 0x32, 0x30, 
0x31, 0x30, 0x2d, 0x31, 0x32, 0x2d, 0x30, 0x31, 
0x54, 0x32, 0x30, 0x3a, 0x34, 0x33, 0x3a, 0x34, 
0x35, 0x2b, 0x30, 0x35, 0x3a, 0x30, 0x30, 0x9e, 
0xee, 0x2e, 0xaa, 0x00, 0x00, 0x00, 0x25, 0x74, 
0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 
0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x00, 0x32, 
0x30, 0x31, 0x30, 0x2d, 0x30, 0x39, 0x2d, 0x30, 
0x31, 0x54, 0x32, 0x33, 0x3a, 0x34, 0x34, 0x3a, 
0x30, 0x36, 0x2b, 0x30, 0x35, 0x3a, 0x30, 0x30, 
0xca, 0x97, 0x55, 0xac, 0x00, 0x00, 0x00, 0x00, 
0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *namespace_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_namespace_png = new wxImage();
	if (!img_namespace_png || !img_namespace_png->IsOk())
	{
		wxMemoryInputStream img_namespace_pngIS(namespace_png_data, sizeof(namespace_png_data));
		img_namespace_png->LoadFile(img_namespace_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_namespace_png;
}
#define namespace_png_img namespace_png_img()

static wxBitmap *namespace_png_bmp()
{
	static wxBitmap *bmp_namespace_png;
	if (!bmp_namespace_png || !bmp_namespace_png->IsOk())
		bmp_namespace_png = new wxBitmap(*namespace_png_img);
	return bmp_namespace_png;
}
#define namespace_png_bmp namespace_png_bmp()

static wxIcon *namespace_png_ico()
{
	static wxIcon *ico_namespace_png;
	if (!ico_namespace_png || !ico_namespace_png->IsOk())
	{
		ico_namespace_png = new wxIcon();
		ico_namespace_png->CopyFromBitmap(*namespace_png_bmp);
	}
	return ico_namespace_png;
}
#define namespace_png_ico namespace_png_ico()

#endif // NAMESPACE_PNG_H
