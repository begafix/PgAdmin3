#ifndef COLUMNS_PNG_H
#define COLUMNS_PNG_H

static const unsigned char columns_png_data[] = {
0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 
0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 
0x08, 0x03, 0x00, 0x00, 0x00, 0x28, 0x2d, 0x0f, 
0x53, 0x00, 0x00, 0x00, 0x57, 0x50, 0x4c, 0x54, 
0x45, 0x00, 0x00, 0x00, 0x21, 0x95, 0xe7, 0x90, 
0xca, 0xf3, 0xb4, 0xd6, 0xee, 0xdd, 0xdd, 0xdd, 
0xe5, 0xe5, 0xe5, 0xe6, 0xe6, 0xe6, 0x87, 0xbf, 
0xe7, 0x63, 0x9d, 0xc7, 0xde, 0xde, 0xde, 0xe1, 
0xe1, 0xe1, 0xa6, 0xa6, 0xa6, 0xec, 0xec, 0xec, 
0xae, 0xae, 0xae, 0xe9, 0xe9, 0xe9, 0xa9, 0xa9, 
0xa9, 0xad, 0xad, 0xad, 0xaf, 0xaf, 0xaf, 0xea, 
0xea, 0xea, 0xe7, 0xe7, 0xe7, 0xe0, 0xe0, 0xe0, 
0xeb, 0xeb, 0xeb, 0xf0, 0xf0, 0xf0, 0xf6, 0xf6, 
0xf6, 0xb8, 0xb8, 0xb8, 0xb0, 0xb0, 0xb0, 0xb1, 
0xb1, 0xb1, 0xf7, 0xf7, 0xf7, 0xed, 0xed, 0xed, 
0x74, 0x6f, 0xc2, 0x89, 0x00, 0x00, 0x00, 0x01, 
0x74, 0x52, 0x4e, 0x53, 0x00, 0x40, 0xe6, 0xd8, 
0x66, 0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 
0x73, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 
0x48, 0x00, 0x46, 0xc9, 0x6b, 0x3e, 0x00, 0x00, 
0x00, 0x70, 0x49, 0x44, 0x41, 0x54, 0x18, 0xd3, 
0x5d, 0xcf, 0x47, 0x16, 0x80, 0x20, 0x0c, 0x45, 
0xd1, 0x44, 0xb1, 0xa1, 0x06, 0x3b, 0x58, 0xf6, 
0xbf, 0x4e, 0x13, 0x0e, 0x60, 0xf9, 0xc3, 0x77, 
0xee, 0x20, 0x01, 0x00, 0x40, 0xbf, 0x0c, 0xe2, 
0x30, 0x57, 0xaa, 0x28, 0x2b, 0x7c, 0x82, 0xaa, 
0xbf, 0x06, 0xd5, 0xcf, 0x60, 0x93, 0x4c, 0x08, 
0xfa, 0x67, 0x38, 0xb0, 0x69, 0xcb, 0xae, 0xa7, 
0x14, 0xd8, 0xb4, 0x66, 0x18, 0xa7, 0x10, 0x66, 
0x31, 0x8b, 0x26, 0xad, 0x43, 0x20, 0x31, 0x86, 
0xc8, 0xc4, 0xb0, 0x8a, 0x31, 0xbc, 0x10, 0x32, 
0x14, 0xe3, 0x97, 0x2e, 0x61, 0x33, 0x6e, 0xd6, 
0xd9, 0x18, 0xc4, 0xec, 0x87, 0x73, 0xe7, 0xeb, 
0x9f, 0xb5, 0xbb, 0xec, 0xf9, 0x0a, 0x90, 0x4e, 
0xbf, 0x01, 0xeb, 0x8f, 0x04, 0xc4, 0x21, 0x83, 
0x70, 0xec, 0x00, 0x00, 0x00, 0x25, 0x74, 0x45, 
0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x63, 
0x72, 0x65, 0x61, 0x74, 0x65, 0x00, 0x32, 0x30, 
0x31, 0x30, 0x2d, 0x31, 0x32, 0x2d, 0x30, 0x31, 
0x54, 0x32, 0x30, 0x3a, 0x34, 0x33, 0x3a, 0x34, 
0x34, 0x2b, 0x30, 0x35, 0x3a, 0x30, 0x30, 0x38, 
0x99, 0x25, 0x1e, 0x00, 0x00, 0x00, 0x25, 0x74, 
0x45, 0x58, 0x74, 0x64, 0x61, 0x74, 0x65, 0x3a, 
0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x00, 0x32, 
0x30, 0x31, 0x30, 0x2d, 0x30, 0x39, 0x2d, 0x30, 
0x31, 0x54, 0x32, 0x33, 0x3a, 0x34, 0x34, 0x3a, 
0x30, 0x36, 0x2b, 0x30, 0x35, 0x3a, 0x30, 0x30, 
0xca, 0x97, 0x55, 0xac, 0x00, 0x00, 0x00, 0x00, 
0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82, 
};

#include "wx/mstream.h"

static wxImage *columns_png_img()
{
	if (!wxImage::FindHandler(wxT("PNG file")))
		wxImage::AddHandler(new wxPNGHandler());
	static wxImage *img_columns_png = new wxImage();
	if (!img_columns_png || !img_columns_png->IsOk())
	{
		wxMemoryInputStream img_columns_pngIS(columns_png_data, sizeof(columns_png_data));
		img_columns_png->LoadFile(img_columns_pngIS, wxBITMAP_TYPE_PNG);
	}
	return img_columns_png;
}
#define columns_png_img columns_png_img()

static wxBitmap *columns_png_bmp()
{
	static wxBitmap *bmp_columns_png;
	if (!bmp_columns_png || !bmp_columns_png->IsOk())
		bmp_columns_png = new wxBitmap(*columns_png_img);
	return bmp_columns_png;
}
#define columns_png_bmp columns_png_bmp()

static wxIcon *columns_png_ico()
{
	static wxIcon *ico_columns_png;
	if (!ico_columns_png || !ico_columns_png->IsOk())
	{
		ico_columns_png = new wxIcon();
		ico_columns_png->CopyFromBitmap(*columns_png_bmp);
	}
	return ico_columns_png;
}
#define columns_png_ico columns_png_ico()

#endif // COLUMNS_PNG_H
